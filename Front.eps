%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Front.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Tobias
%%CreationDate: 8/28/2015
%%BoundingBox: 0 0 652 652
%%HiResBoundingBox: 0 0 651.9976 651.9976
%%CropBox: 0 0 651.9976 651.9976
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2015-08-24T19:38:38+02:00</xmp:CreateDate>
         <xmp:MetadataDate>2015-08-24T19:38:56+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-08-24T19:38:56+02:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9MabpunHTrUm1hr6Mf8A&#xA;utf5R7ZkZs0+M7nmeqAET+jdO/5ZYf8AkWv9Mr8afefmtO/Runf8ssP/ACLX+mPjT7z81p36N07/&#xA;AJZYf+Ra/wBMfGn3n5rTv0bp3/LLD/yLX+mPjT7z81p36N07/llh/wCRa/0x8afefmtO/Runf8ss&#xA;P/Itf6Y+NPvPzWnfo3Tv+WWH/kWv9MfGn3n5rTv0bp3/ACyw/wDItf6Y+NPvPzWnfo3Tv+WWH/kW&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>394.000068</stDim:w>
            <stDim:h>394.000068</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Gray</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Light Gray</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Bright Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Light Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Pale Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Violet</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Light Violet</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Pale Violet</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Light Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Pale Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Brown</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Light Brown</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>53</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Pale Brown</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>151</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Faded Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Faded Pale Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Light Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Mauve</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Forest Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Pale Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Bright Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Light Bright Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Pale Light Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>151</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Purple</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Periwinkle</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Lavender</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Orange</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Pale Orange</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Light Pale Orange</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=246 G=146 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>AutoCAD Color</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:371AD9FE864AE51195768AC7946199BD</stEvt:instanceID>
                  <stEvt:when>2015-08-24T19:38:56+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DocumentID>xmp.did:371AD9FE864AE51195768AC7946199BD</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:371AD9FE864AE51195768AC7946199BD</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:371AD9FE864AE51195768AC7946199BD</xmpMM:OriginalDocumentID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -651.998 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 651.998 li
651.998 651.998 li
651.998 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.028346 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
318.914 631.014 mo
304.74 631.014 li
304.74 616.841 li
318.914 616.841 li
318.914 631.014 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 1 rgb
@
290.566 631.013 mo
276.394 631.013 li
276.394 616.84 li
290.566 616.84 li
290.566 631.013 li
cp
@
347.258 631.014 mo
333.086 631.014 li
333.086 616.841 li
347.258 616.841 li
347.258 631.014 li
cp
@
375.604 631.014 mo
361.432 631.014 li
361.432 616.841 li
375.604 616.841 li
375.604 631.014 li
cp
@
1 lc
1 lj
70.3501 534.512 mo
66.3521 507.611 li
66.3521 507.611 66.3521 507.611 69.8687 507.611 cv
73.1421 529.958 73.1421 529.958 73.1421 529.958 cv
73.2036 529.958 li
73.2036 529.958 73.2036 529.958 77.0796 513.293 cv
81.0601 513.293 81.0601 513.293 81.0601 513.293 cv
84.8765 529.709 li
84.8765 529.709 84.8765 529.709 84.9253 529.709 cv
88.3804 507.611 88.3804 507.611 88.3804 507.611 cv
91.5249 507.611 li
91.5249 507.611 91.5249 507.611 87.1011 534.512 cv
82.6157 534.512 82.6157 534.512 82.6157 534.512 cv
78.9087 518.722 li
78.9087 518.722 78.9087 518.722 78.8657 518.722 cv
75.1284 534.512 75.1284 534.512 75.1284 534.512 cv
70.3501 534.512 li
cp
@
69.3638 479.829 mo
69.3638 452.922 li
87.5396 452.922 li
87.5396 456.03 li
73.4966 456.03 li
73.4966 464.184 li
85.4067 464.184 li
85.4067 467.292 li
73.4966 467.292 li
73.4966 476.719 li
88.5093 476.719 li
88.5093 479.829 li
69.3638 479.829 li
@
68.1196 425.146 mo
68.1196 398.237 li
72.2515 398.237 li
72.2515 411.431 li
83.5034 398.237 li
87.6743 398.237 li
76.8237 410.931 li
89.7524 425.146 li
84.8091 425.146 li
72.2515 411.431 li
72.2515 425.146 li
68.1196 425.146 li
@
68.0767 370.456 mo
68.0767 367.354 li
68.0767 367.354 68.0767 367.354 84.9556 346.666 cv
69.1079 346.666 69.1079 346.666 69.1079 346.666 cv
69.1079 343.555 li
69.1079 343.555 69.1079 343.555 89.6313 343.555 cv
89.6313 346.666 89.6313 346.666 89.6313 346.666 cv
72.77 367.354 li
72.77 367.354 72.77 367.354 89.7944 367.354 cv
89.7944 370.456 89.7944 370.456 89.7944 370.456 cv
68.0767 370.456 li
cp
@
69.1079 315.777 mo
69.1079 288.875 li
73.2339 288.875 li
73.2339 300.633 li
84.6206 300.633 li
84.6206 288.875 li
88.771 288.875 li
88.771 315.777 li
84.6206 315.777 li
84.6206 303.738 li
73.2339 303.738 li
73.2339 315.777 li
69.1079 315.777 li
@
76.8599 261.091 mo
76.8599 237.298 li
66.5239 237.298 li
66.5239 234.193 li
91.3501 234.193 li
91.3501 237.298 li
81.0054 237.298 li
81.0054 261.091 li
76.8599 261.091 li
@
72.3071 200.137 mo
68.1626 200.137 li
68.1626 200.137 68.1626 200.137 68.1812 179.872 cv
76.2876 179.872 76.2876 179.872 76.2876 179.872 cv
85.2368 179.872 89.7095 184.181 89.7095 192.789 cv
89.7095 192.789 89.7095 196.768 88.7349 199.996 cv
86.7964 202.45 86.7964 202.45 85.5776 204.004 cv
84.0786 205.113 82.2964 205.778 82.2964 205.778 cv
80.5181 206.446 78.147 206.775 75.1841 206.775 cv
75.1841 206.775 75.1841 206.775 68.1812 206.775 cv
68.1812 203.666 68.1812 203.666 68.1812 203.666 cv
74.3794 203.666 li
74.3794 203.666 78.3228 203.668 81.1274 202.889 cv
82.8032 201.319 82.8032 201.319 84.4731 199.756 cv
85.3101 197.125 85.3101 193.44 85.3101 193.44 cv
85.3101 189.691 84.5532 187.014 83.0415 185.398 cv
83.0415 185.398 81.5298 183.786 79.019 182.977 cv
75.4897 182.977 75.4897 182.977 75.4897 182.977 cv
72.3071 182.977 72.3071 182.977 72.3071 182.977 cv
72.3071 200.137 li
cp
@
121.87 418.508 mo
117.731 418.508 li
117.731 418.508 117.731 418.508 117.743 398.237 cv
125.856 398.237 125.856 398.237 125.856 398.237 cv
134.803 398.237 139.279 402.55 139.279 411.158 cv
139.279 411.158 139.279 415.139 138.304 418.367 cv
136.365 420.816 136.365 420.816 135.145 422.375 cv
133.645 423.48 131.866 424.146 131.866 424.146 cv
130.087 424.817 127.709 425.146 124.747 425.146 cv
124.747 425.146 124.747 425.146 117.743 425.146 cv
117.743 422.036 117.743 422.036 117.743 422.036 cv
123.949 422.036 li
123.949 422.036 127.892 422.036 130.697 421.256 cv
132.372 419.689 132.372 419.689 134.042 418.123 cv
134.877 415.495 134.877 411.808 134.877 411.808 cv
134.877 408.06 134.121 405.383 132.611 403.768 cv
132.611 403.768 131.097 402.161 128.587 401.347 cv
125.057 401.347 125.057 401.347 125.057 401.347 cv
121.87 401.347 121.87 401.347 121.87 401.347 cv
121.87 418.508 li
cp
@
68.0767 151.726 mo
68.0767 148.62 li
68.0767 148.62 68.0767 148.62 84.9556 127.928 cv
69.1079 127.928 69.1079 127.928 69.1079 127.928 cv
69.1079 124.823 li
69.1079 124.823 69.1079 124.823 89.6313 124.823 cv
89.6313 127.928 89.6313 127.928 89.6313 127.928 cv
72.77 148.62 li
72.77 148.62 72.77 148.62 89.7944 148.62 cv
89.7944 151.726 89.7944 151.726 89.7944 151.726 cv
68.0767 151.726 li
cp
@
69.3638 97.0435 mo
69.3638 70.1401 li
87.5396 70.1401 li
87.5396 73.2456 li
73.4966 73.2456 li
73.4966 81.3989 li
85.4067 81.3989 li
85.4067 84.5044 li
73.4966 84.5044 li
73.4966 93.9351 li
88.5093 93.9351 li
88.5093 97.0435 li
69.3638 97.0435 li
@
136.255 562.562 mo
136.255 566.148 li
134.042 565.377 li
131.951 564.823 li
129.996 564.494 li
128.16 564.384 li
125.709 564.623 li
123.954 565.331 li
122.907 566.507 li
122.559 568.158 li
122.821 569.543 li
123.613 570.621 li
125.101 571.568 li
127.49 572.542 li
130.129 573.462 li
132.641 574.328 li
134.011 574.881 li
135.202 575.528 li
136.207 576.263 li
137.03 577.088 li
137.669 578.002 li
138.132 579.008 li
138.401 580.1 li
138.499 581.281 li
138.309 583.055 li
137.75 584.642 li
136.816 586.041 li
135.51 587.249 li
133.89 588.23 li
132.013 588.926 li
129.891 589.346 li
127.508 589.486 li
125.644 589.388 li
123.521 589.116 li
121.144 588.644 li
118.517 587.993 li
118.517 583.902 li
121.144 584.99 li
123.54 585.762 li
125.705 586.225 li
127.629 586.378 li
129.086 586.306 li
130.386 586.079 li
131.531 585.702 li
132.518 585.18 li
133.318 584.519 li
133.89 583.764 li
134.231 582.905 li
134.341 581.935 li
134.073 580.542 li
133.262 579.478 li
131.61 578.496 li
128.807 577.338 li
126.041 576.338 li
124.137 575.563 li
122.541 574.785 li
121.267 573.993 li
120.304 573.188 li
119.601 572.315 li
119.103 571.309 li
118.796 570.17 li
118.701 568.898 li
118.858 567.182 li
119.315 565.677 li
120.09 564.373 li
121.164 563.27 li
122.522 562.4 li
124.131 561.775 li
125.99 561.406 li
128.099 561.282 li
129.964 561.364 li
131.951 561.6 li
134.048 562.002 li
136.255 562.562 li
@
119.195 479.829 mo
119.195 452.922 li
123.321 452.922 li
123.321 476.719 li
137.815 476.719 li
137.815 479.829 li
119.195 479.829 li
@
119.919 370.456 mo
115.92 343.555 li
115.92 343.555 115.92 343.555 119.438 343.555 cv
122.711 365.911 122.711 365.911 122.711 365.911 cv
122.771 365.911 li
122.771 365.911 122.771 365.911 126.649 349.24 cv
130.629 349.24 130.629 349.24 130.629 349.24 cv
134.445 365.659 li
134.445 365.659 134.445 365.659 134.493 365.659 cv
137.949 343.555 137.949 343.555 137.949 343.555 cv
141.095 343.555 li
141.095 343.555 141.095 343.555 136.669 370.456 cv
132.181 370.456 132.181 370.456 132.181 370.456 cv
128.477 354.668 li
128.477 354.668 128.477 354.668 128.429 354.668 cv
124.698 370.456 124.698 370.456 124.698 370.456 cv
119.919 370.456 li
cp
@
139.192 234.108 mo
139.192 237.904 li
137.158 237.07 li
135.181 236.472 li
133.275 236.115 li
131.44 235.997 li
129.44 236.185 li
127.636 236.761 li
126.009 237.718 li
124.563 239.056 li
123.393 240.692 li
122.552 242.537 li
122.046 244.587 li
121.876 246.852 li
122.065 249.125 li
122.638 251.189 li
123.588 253.033 li
124.918 254.667 li
126.544 255.999 li
128.38 256.953 li
130.428 257.526 li
132.678 257.714 li
135.401 257.463 li
135.401 250.358 li
130.355 250.358 li
130.355 247.251 li
139.535 247.251 li
139.535 259.748 li
137.449 260.335 li
135.426 260.756 li
133.457 261.009 li
131.55 261.091 li
130.021 261.031 li
128.568 260.85 li
127.185 260.547 li
125.88 260.122 li
124.649 259.577 li
123.493 258.91 li
122.401 258.123 li
121.382 257.215 li
120.467 256.208 li
119.675 255.129 li
119.004 253.978 li
118.455 252.753 li
118.029 251.457 li
117.725 250.089 li
117.536 248.644 li
117.475 247.129 li
117.536 245.578 li
117.725 244.102 li
118.029 242.702 li
118.455 241.378 li
119.004 240.129 li
119.675 238.953 li
120.462 237.856 li
121.375 236.831 li
122.388 235.908 li
123.479 235.109 li
124.637 234.429 li
125.875 233.874 li
127.185 233.446 li
128.575 233.134 li
130.032 232.952 li
131.568 232.888 li
133.377 232.967 li
135.254 233.196 li
137.194 233.573 li
139.192 234.108 li
@
121.961 182.977 mo
121.961 188.886 li
117.833 188.886 li
117.822 179.872 li
125.356 179.872 li
127.521 179.92 li
129.331 180.065 li
130.781 180.308 li
131.873 180.646 li
133.572 181.61 li
134.792 182.883 li
135.524 184.464 li
135.767 186.354 li
135.689 187.702 li
135.432 188.93 li
135.012 190.045 li
134.419 191.042 li
133.634 191.962 li
132.616 192.849 li
131.373 193.706 li
129.904 194.528 li
139.182 206.775 li
134.177 206.775 li
125.685 195.58 li
121.956 195.58 li
121.956 206.775 li
117.822 206.775 li
117.822 192.422 li
124.137 192.454 li
125.716 192.366 li
127.125 192.089 li
128.355 191.63 li
129.417 190.988 li
130.269 190.185 li
130.879 189.262 li
131.244 188.208 li
131.368 187.022 li
131.281 185.953 li
131 185.066 li
130.55 184.359 li
129.904 183.838 li
129.014 183.462 li
127.82 183.194 li
126.308 183.033 li
124.491 182.977 li
121.961 182.977 li
@
568.075 565.688 mo
568.075 571.601 li
563.952 571.601 li
563.934 562.582 li
571.461 562.582 li
573.633 562.631 li
575.442 562.775 li
576.895 563.02 li
577.985 563.356 li
579.692 564.327 li
580.911 565.592 li
581.643 567.174 li
581.887 569.067 li
581.801 570.415 li
581.543 571.641 li
581.127 572.753 li
580.532 573.754 li
579.741 574.675 li
578.731 575.563 li
577.485 576.416 li
576.016 577.241 li
585.299 589.486 li
580.288 589.486 li
571.792 578.29 li
568.069 578.29 li
568.069 589.486 li
563.934 589.486 li
563.934 575.131 li
570.25 575.164 li
571.827 575.078 li
573.237 574.802 li
574.469 574.339 li
575.528 573.698 li
576.381 572.901 li
576.991 571.975 li
577.362 570.92 li
577.485 569.732 li
577.393 568.666 li
577.12 567.773 li
576.655 567.068 li
576.016 566.549 li
575.127 566.171 li
573.926 565.903 li
572.418 565.745 li
570.604 565.688 li
568.075 565.688 li
@
518.504 510.712 mo
518.504 516.628 li
514.378 516.628 li
514.365 507.611 li
521.893 507.611 li
524.063 507.657 li
525.874 507.801 li
527.327 508.043 li
528.417 508.381 li
530.125 509.351 li
531.344 510.623 li
532.073 512.2 li
532.319 514.091 li
532.233 515.438 li
531.975 516.668 li
531.557 517.778 li
530.965 518.78 li
530.172 519.699 li
529.163 520.587 li
527.917 521.441 li
526.45 522.263 li
535.731 534.512 li
530.719 534.512 li
522.221 523.32 li
518.499 523.32 li
518.499 534.512 li
514.365 534.512 li
514.365 520.157 li
520.682 520.19 li
522.258 520.102 li
523.667 519.827 li
524.903 519.365 li
525.959 518.722 li
526.813 517.926 li
527.43 517 li
527.793 515.944 li
527.917 514.755 li
527.825 513.689 li
527.551 512.797 li
527.094 512.098 li
526.45 511.574 li
525.559 511.196 li
524.364 510.928 li
522.852 510.768 li
521.04 510.712 li
518.504 510.712 li
@
568.075 456.03 mo
568.075 461.945 li
563.952 461.945 li
563.934 452.922 li
571.461 452.922 li
573.633 452.972 li
575.442 453.118 li
576.895 453.361 li
577.985 453.697 li
579.692 454.668 li
580.911 455.935 li
581.643 457.519 li
581.887 459.41 li
581.801 460.755 li
581.543 461.983 li
581.127 463.096 li
580.532 464.095 li
579.741 465.016 li
578.731 465.909 li
577.485 466.758 li
576.016 467.582 li
585.299 479.829 li
580.288 479.829 li
571.792 468.63 li
568.069 468.63 li
568.069 479.829 li
563.934 479.829 li
563.934 465.475 li
570.25 465.504 li
571.827 465.419 li
573.237 465.143 li
574.469 464.682 li
575.528 464.041 li
576.381 463.243 li
576.991 462.318 li
577.362 461.262 li
577.485 460.073 li
577.393 459.005 li
577.12 458.117 li
576.655 457.41 li
576.016 456.892 li
575.127 456.512 li
573.926 456.246 li
572.418 456.086 li
570.604 456.03 li
568.075 456.03 li
@
171.53 401.347 mo
171.53 407.257 li
167.404 407.257 li
167.391 398.237 li
174.919 398.237 li
177.083 398.291 li
178.899 398.435 li
180.351 398.68 li
181.435 399.016 li
183.141 399.979 li
184.361 401.254 li
185.091 402.836 li
185.336 404.726 li
185.25 406.075 li
185.001 407.298 li
184.582 408.414 li
183.983 409.411 li
183.197 410.335 li
182.179 411.218 li
180.942 412.075 li
179.471 412.901 li
188.75 425.146 li
183.744 425.146 li
175.249 413.948 li
171.524 413.948 li
171.524 425.146 li
167.391 425.146 li
167.391 410.79 li
173.706 410.822 li
175.286 410.736 li
176.692 410.46 li
177.923 410 li
178.984 409.36 li
179.838 408.558 li
180.448 407.633 li
180.813 406.58 li
180.935 405.391 li
180.849 404.322 li
180.57 403.433 li
180.119 402.726 li
179.471 402.209 li
178.583 401.829 li
177.387 401.562 li
175.876 401.403 li
174.058 401.347 li
171.53 401.347 li
@
321.839 401.347 mo
321.839 407.257 li
317.706 407.257 li
317.695 398.237 li
325.229 398.237 li
327.394 398.291 li
329.204 398.435 li
330.653 398.68 li
331.745 399.016 li
333.451 399.979 li
334.671 401.254 li
335.403 402.836 li
335.647 404.726 li
335.561 406.075 li
335.31 407.298 li
334.882 408.414 li
334.292 409.411 li
333.508 410.335 li
332.489 411.218 li
331.246 412.075 li
329.774 412.901 li
339.06 425.146 li
334.047 425.146 li
325.559 413.948 li
321.827 413.948 li
321.827 425.146 li
317.695 425.146 li
317.695 410.79 li
324.01 410.822 li
325.594 410.736 li
326.995 410.46 li
328.233 410 li
329.294 409.36 li
330.146 408.558 li
330.757 407.633 li
331.123 406.58 li
331.246 405.391 li
331.153 404.322 li
330.879 403.433 li
330.421 402.726 li
329.774 402.209 li
328.886 401.829 li
327.693 401.562 li
326.178 401.403 li
324.368 401.347 li
321.839 401.347 li
@
468.937 237.298 mo
468.937 243.208 li
464.81 243.208 li
464.797 234.193 li
472.325 234.193 li
474.496 234.241 li
476.305 234.383 li
477.756 234.625 li
478.846 234.962 li
480.553 235.929 li
481.771 237.203 li
482.505 238.785 li
482.749 240.675 li
482.665 242.019 li
482.406 243.25 li
481.986 244.366 li
481.393 245.363 li
480.608 246.282 li
479.59 247.169 li
478.346 248.026 li
476.879 248.849 li
486.162 261.091 li
481.151 261.091 li
472.651 249.901 li
468.929 249.901 li
468.929 261.091 li
464.797 261.091 li
464.797 246.743 li
471.113 246.772 li
472.69 246.685 li
474.099 246.411 li
475.335 245.951 li
476.393 245.303 li
477.244 244.505 li
477.862 243.58 li
478.226 242.525 li
478.346 241.343 li
478.257 240.273 li
477.979 239.382 li
477.524 238.677 li
476.879 238.158 li
475.987 237.778 li
474.792 237.51 li
473.283 237.349 li
471.47 237.298 li
468.937 237.298 li
@
419.367 182.977 mo
419.367 188.886 li
415.241 188.886 li
415.235 179.872 li
422.76 179.872 li
424.925 179.92 li
426.738 180.065 li
428.187 180.308 li
429.279 180.646 li
430.985 181.61 li
432.207 182.883 li
432.936 184.464 li
433.179 186.354 li
433.095 187.702 li
432.843 188.93 li
432.417 190.045 li
431.827 191.042 li
431.041 191.962 li
430.022 192.849 li
428.778 193.706 li
427.309 194.528 li
436.594 206.775 li
431.583 206.775 li
423.09 195.58 li
419.362 195.58 li
419.362 206.775 li
415.235 206.775 li
415.235 192.422 li
421.542 192.454 li
423.124 192.366 li
424.528 192.089 li
425.766 191.63 li
426.823 190.988 li
427.681 190.185 li
428.29 189.262 li
428.657 188.208 li
428.778 187.022 li
428.686 185.953 li
428.411 185.066 li
427.955 184.359 li
427.309 183.838 li
426.42 183.462 li
425.225 183.194 li
423.718 183.033 li
421.904 182.977 li
419.367 182.977 li
@
118.931 151.726 mo
118.931 124.823 li
137.108 124.823 li
137.108 127.928 li
123.064 127.928 li
123.064 136.083 li
134.97 136.083 li
134.97 139.189 li
123.064 139.189 li
123.064 148.62 li
138.078 148.62 li
138.078 151.726 li
118.931 151.726 li
@
136.255 70.1196 mo
136.255 73.7036 li
134.042 72.936 li
131.951 72.3833 li
129.996 72.0542 li
128.16 71.9448 li
125.709 72.1792 li
123.954 72.8872 li
122.907 74.0659 li
122.559 75.7153 li
122.821 77.0952 li
123.613 78.1772 li
125.101 79.1255 li
127.49 80.0952 li
130.129 81.0181 li
132.641 81.8833 li
134.011 82.4409 li
135.202 83.0874 li
136.207 83.8257 li
137.03 84.6479 li
137.669 85.562 li
138.132 86.5649 li
138.401 87.6587 li
138.499 88.8413 li
138.309 90.6147 li
137.75 92.2007 li
136.816 93.5991 li
135.51 94.8091 li
133.89 95.7837 li
132.013 96.4829 li
129.891 96.9028 li
127.508 97.0435 li
125.644 96.9487 li
123.521 96.6714 li
121.144 96.2046 li
118.517 95.5532 li
118.517 91.4604 li
121.144 92.5454 li
123.54 93.3188 li
125.705 93.7817 li
127.629 93.9351 li
129.086 93.8618 li
130.386 93.6353 li
131.531 93.2612 li
132.518 92.7339 li
133.318 92.0796 li
133.89 91.3188 li
134.231 90.4565 li
134.341 89.4917 li
134.073 88.104 li
133.262 87.0376 li
131.61 86.0522 li
128.807 84.8979 li
126.041 83.895 li
124.137 83.1235 li
122.541 82.3403 li
121.267 81.5513 li
120.304 80.7466 li
119.601 79.8755 li
119.103 78.8696 li
118.796 77.7251 li
118.701 76.4517 li
118.858 74.7397 li
119.315 73.231 li
120.09 71.9282 li
121.164 70.8257 li
122.522 69.9575 li
124.131 69.3354 li
125.99 68.9644 li
128.099 68.8384 li
129.964 68.9194 li
131.951 69.1597 li
134.048 69.5581 li
136.255 70.1196 li
@
168.501 589.486 mo
168.501 562.582 li
186.677 562.582 li
186.677 565.688 li
172.633 565.688 li
172.633 573.84 li
184.538 573.84 li
184.538 576.951 li
172.633 576.951 li
172.633 586.378 li
187.639 586.378 li
187.639 589.486 li
168.501 589.486 li
@
189.117 533.024 mo
187.067 533.678 li
185.081 534.141 li
183.154 534.422 li
181.29 534.512 li
179.728 534.451 li
178.242 534.265 li
176.827 533.968 li
175.498 533.548 li
174.242 533.006 li
173.072 532.346 li
171.974 531.561 li
170.956 530.659 li
170.037 529.658 li
169.245 528.589 li
168.568 527.433 li
168.013 526.208 li
167.585 524.914 li
167.281 523.533 li
167.098 522.077 li
167.038 520.548 li
167.098 518.998 li
167.281 517.523 li
167.585 516.12 li
168.013 514.792 li
168.56 513.542 li
169.232 512.373 li
170.024 511.274 li
170.933 510.25 li
171.945 509.325 li
173.036 508.526 li
174.194 507.849 li
175.431 507.295 li
176.742 506.861 li
178.131 506.551 li
179.588 506.368 li
181.124 506.305 li
182.936 506.38 li
184.812 506.611 li
186.749 506.991 li
188.75 507.52 li
188.75 511.325 li
186.715 510.488 li
184.74 509.892 li
182.837 509.531 li
180.996 509.411 li
178.998 509.606 li
177.193 510.177 li
175.565 511.136 li
174.127 512.475 li
172.95 514.109 li
172.11 515.95 li
171.603 518.004 li
171.438 520.265 li
171.622 522.552 li
172.195 524.617 li
173.145 526.463 li
174.473 528.093 li
176.107 529.421 li
177.949 530.373 li
180.015 530.938 li
182.3 531.134 li
183.806 531.036 li
185.447 530.758 li
187.213 530.281 li
189.117 529.624 li
189.117 533.024 li
@
168.501 479.829 mo
168.501 452.922 li
168.501 452.922 168.501 452.922 187.639 452.922 cv
187.639 456.03 187.639 456.03 187.639 456.03 cv
172.633 456.03 li
172.633 456.03 172.633 456.03 172.633 465.291 cv
185.441 465.291 185.441 465.291 185.441 465.291 cv
185.441 468.397 li
185.441 468.397 185.441 468.397 172.633 468.397 cv
172.633 479.829 172.633 479.829 172.633 479.829 cv
168.501 479.829 li
cp
@
168.501 370.456 mo
168.501 343.555 li
186.677 343.555 li
186.677 346.666 li
172.633 346.666 li
172.633 354.817 li
184.538 354.817 li
184.538 357.917 li
172.633 357.917 li
172.633 367.354 li
187.639 367.354 li
187.639 370.456 li
168.501 370.456 li
@
168.763 315.777 mo
168.763 288.875 li
172.889 288.875 li
172.889 312.673 li
187.384 312.673 li
187.384 315.777 li
168.763 315.777 li
@
168.239 261.091 mo
168.239 234.108 li
172.139 234.108 li
184.483 253.669 li
184.532 253.669 li
184.532 234.108 li
187.908 234.108 li
187.908 261.091 li
184.093 261.091 li
171.658 241.375 li
171.596 241.375 li
171.596 261.091 li
168.239 261.091 li
@
168.501 206.775 mo
168.501 179.872 li
186.677 179.872 li
186.677 182.977 li
172.633 182.977 li
172.633 191.13 li
184.538 191.13 li
184.538 194.236 li
172.633 194.236 li
172.633 203.666 li
187.639 203.666 li
187.639 206.775 li
168.501 206.775 li
@
168.239 151.726 mo
168.239 124.823 li
172.366 124.823 li
172.366 136.583 li
183.751 136.583 li
183.751 124.823 li
187.908 124.823 li
187.908 151.726 li
183.751 151.726 li
183.751 139.688 li
172.366 139.688 li
172.366 151.726 li
168.239 151.726 li
@
167.257 97.0435 mo
167.257 70.1401 li
171.383 70.1401 li
171.383 83.3315 li
182.642 70.1401 li
186.811 70.1401 li
175.961 82.8286 li
188.89 97.0435 li
183.947 97.0435 li
171.383 83.3315 li
171.383 97.0435 li
167.257 97.0435 li
@
238.678 587.993 mo
236.637 588.644 li
234.649 589.116 li
232.722 589.388 li
230.858 589.486 li
229.296 589.423 li
227.81 589.242 li
226.397 588.943 li
225.067 588.521 li
223.811 587.981 li
222.642 587.321 li
221.542 586.538 li
220.52 585.633 li
219.606 584.634 li
218.812 583.562 li
218.135 582.409 li
217.583 581.186 li
217.155 579.879 li
216.85 578.501 li
216.667 577.051 li
216.6 575.522 li
216.667 573.973 li
216.85 572.493 li
217.155 571.098 li
217.583 569.767 li
218.129 568.519 li
218.799 567.348 li
219.592 566.244 li
220.5 565.228 li
221.513 564.3 li
222.604 563.501 li
223.761 562.828 li
224.999 562.269 li
226.309 561.839 li
227.7 561.528 li
229.157 561.342 li
230.693 561.282 li
232.502 561.359 li
234.381 561.584 li
236.319 561.965 li
238.32 562.496 li
238.32 566.3 li
236.282 565.463 li
234.308 564.867 li
232.401 564.506 li
230.565 564.384 li
228.567 564.582 li
226.762 565.153 li
225.133 566.112 li
223.696 567.453 li
222.518 569.084 li
221.678 570.926 li
221.171 572.98 li
221.007 575.244 li
221.19 577.527 li
221.764 579.593 li
222.714 581.439 li
224.043 583.07 li
225.676 584.394 li
227.518 585.347 li
229.584 585.916 li
231.87 586.109 li
233.375 586.011 li
235.014 585.733 li
236.784 585.257 li
238.678 584.597 li
238.678 587.993 li
@
217.807 534.512 mo
217.807 507.611 li
221.934 507.611 li
221.934 519.37 li
233.319 519.37 li
233.319 507.611 li
237.477 507.611 li
237.477 534.512 li
233.319 534.512 li
233.319 522.475 li
221.934 522.475 li
221.934 534.512 li
217.807 534.512 li
@
217.807 479.829 mo
217.807 452.837 li
221.709 452.837 li
234.051 472.404 li
234.094 472.404 li
234.094 452.837 li
237.477 452.837 li
237.477 479.829 li
233.661 479.829 li
221.227 460.11 li
221.167 460.11 li
221.167 479.829 li
217.807 479.829 li
@
218.069 425.146 mo
218.069 398.237 li
236.247 398.237 li
236.247 401.347 li
222.203 401.347 li
222.203 409.499 li
234.106 409.499 li
234.106 412.608 li
222.203 412.608 li
222.203 422.036 li
237.209 422.036 li
237.209 425.146 li
218.069 425.146 li
@
218.332 370.456 mo
218.332 367.354 li
225.569 367.354 li
225.569 346.666 li
218.332 346.666 li
218.332 343.555 li
236.953 343.555 li
236.953 346.666 li
229.711 346.666 li
229.711 367.354 li
236.953 367.354 li
236.953 370.456 li
218.332 370.456 li
@
218.332 206.775 mo
218.332 203.666 li
225.569 203.666 li
225.569 182.977 li
218.332 182.977 li
218.332 179.872 li
236.953 179.872 li
236.953 182.977 li
229.711 182.977 li
229.711 203.666 li
236.953 203.666 li
236.953 206.775 li
218.332 206.775 li
@
217.807 151.726 mo
217.807 124.739 li
221.709 124.739 li
234.051 144.304 li
234.094 144.304 li
234.094 124.739 li
237.477 124.739 li
237.477 151.726 li
233.661 151.726 li
221.227 132.01 li
221.167 132.01 li
221.167 151.726 li
217.807 151.726 li
@
218.332 97.0435 mo
218.332 93.9351 li
225.569 93.9351 li
225.569 73.2456 li
218.332 73.2456 li
218.332 70.1401 li
236.953 70.1401 li
236.953 73.2456 li
229.711 73.2456 li
229.711 93.9351 li
236.953 93.9351 li
236.953 97.0435 li
218.332 97.0435 li
@
267.375 589.486 mo
267.375 562.582 li
271.502 562.582 li
271.502 574.339 li
282.889 574.339 li
282.889 562.582 li
287.042 562.582 li
287.042 589.486 li
282.889 589.486 li
282.889 577.449 li
271.502 577.449 li
271.502 589.486 li
267.375 589.486 li
@
275.129 534.512 mo
275.129 510.712 li
264.798 510.712 li
264.798 507.611 li
289.62 507.611 li
289.62 510.712 li
279.281 510.712 li
279.281 534.512 li
275.129 534.512 li
@
267.637 479.829 mo
267.637 452.922 li
285.815 452.922 li
285.815 456.03 li
271.764 456.03 li
271.764 464.184 li
283.676 464.184 li
283.676 467.292 li
271.764 467.292 li
271.764 476.719 li
286.778 476.719 li
286.778 479.829 li
267.637 479.829 li
@
267.893 425.146 mo
267.893 422.036 li
275.135 422.036 li
275.135 401.347 li
267.893 401.347 li
267.893 398.237 li
286.522 398.237 li
286.522 401.347 li
279.281 401.347 li
279.281 422.036 li
286.522 422.036 li
286.522 425.146 li
267.893 425.146 li
@
267.375 370.456 mo
267.375 343.471 li
271.276 343.471 li
283.622 363.04 li
283.664 363.04 li
283.664 343.471 li
287.042 343.471 li
287.042 370.456 li
283.231 370.456 li
270.795 350.745 li
270.735 350.745 li
270.735 370.456 li
267.375 370.456 li
@
288.247 259.603 mo
286.205 260.256 li
284.218 260.719 li
282.292 261 li
280.425 261.091 li
278.866 261.035 li
277.379 260.85 li
275.963 260.553 li
274.635 260.131 li
273.379 259.588 li
272.209 258.926 li
271.113 258.145 li
270.09 257.243 li
269.173 256.244 li
268.376 255.169 li
267.7 254.018 li
267.149 252.792 li
266.725 251.492 li
266.418 250.113 li
266.231 248.66 li
266.168 247.129 li
266.231 245.578 li
266.414 244.102 li
266.717 242.702 li
267.143 241.378 li
267.693 240.129 li
268.364 238.953 li
269.157 237.856 li
270.071 236.831 li
271.082 235.908 li
272.167 235.109 li
273.331 234.429 li
274.561 233.874 li
275.878 233.446 li
277.268 233.134 li
278.726 232.952 li
280.262 232.888 li
282.073 232.967 li
283.95 233.196 li
285.887 233.573 li
287.887 234.108 li
287.887 237.904 li
285.852 237.07 li
283.876 236.472 li
281.968 236.115 li
280.134 235.997 li
278.135 236.185 li
276.331 236.761 li
274.704 237.718 li
273.258 239.056 li
272.087 240.692 li
271.247 242.537 li
270.735 244.587 li
270.571 246.852 li
270.76 249.134 li
271.333 251.199 li
272.283 253.046 li
273.612 254.672 li
275.239 256.001 li
277.084 256.953 li
279.146 257.526 li
281.438 257.714 li
282.944 257.621 li
284.583 257.336 li
286.352 256.869 li
288.247 256.206 li
288.247 259.603 li
@
275.019 206.775 mo
264.579 179.872 li
264.579 179.872 264.579 179.872 268.936 179.872 cv
277.538 201.255 277.538 201.255 277.538 201.255 cv
286.313 179.872 li
286.313 179.872 286.313 179.872 289.836 179.872 cv
279.171 206.775 279.171 206.775 279.171 206.775 cv
275.019 206.775 li
cp
@
266.346 151.726 mo
266.346 148.62 li
266.346 148.62 266.346 148.62 283.231 127.928 cv
267.381 127.928 267.381 127.928 267.381 127.928 cv
267.381 124.823 li
267.381 124.823 267.381 124.823 287.9 124.823 cv
287.9 127.928 287.9 127.928 287.9 127.928 cv
271.04 148.62 li
271.04 148.62 271.04 148.62 288.071 148.62 cv
288.071 151.726 288.071 151.726 288.071 151.726 cv
266.346 151.726 li
cp
@
284.961 70.1196 mo
284.961 73.7036 li
282.742 72.936 li
280.659 72.3833 li
278.696 72.0542 li
276.868 71.9448 li
274.417 72.1792 li
272.661 72.8872 li
271.612 74.0659 li
271.259 75.7153 li
271.526 77.0952 li
272.313 78.1772 li
273.806 79.1255 li
276.196 80.0952 li
278.83 81.0181 li
281.34 81.8833 li
282.719 82.4409 li
283.901 83.0874 li
284.914 83.8257 li
285.736 84.6479 li
286.375 85.562 li
286.833 86.5649 li
287.108 87.6587 li
287.2 88.8413 li
287.01 90.6147 li
286.449 92.2007 li
285.522 93.5991 li
284.218 94.8091 li
282.596 95.7837 li
280.719 96.4829 li
278.592 96.9028 li
276.213 97.0435 li
274.342 96.9487 li
272.223 96.6714 li
269.85 96.2046 li
267.217 95.5532 li
267.217 91.4604 li
269.85 92.5454 li
272.245 93.3188 li
274.41 93.7817 li
276.336 93.9351 li
277.793 93.8618 li
279.092 93.6353 li
280.231 93.2612 li
281.225 92.7339 li
282.024 92.0796 li
282.596 91.3188 li
282.938 90.4565 li
283.047 89.4917 li
282.78 88.104 li
281.968 87.0376 li
280.317 86.0522 li
277.513 84.8979 li
274.745 83.895 li
272.837 83.1235 li
271.247 82.3403 li
269.968 81.5513 li
269.004 80.7466 li
268.307 79.8755 li
267.809 78.8696 li
267.504 77.7251 li
267.407 76.4517 li
267.558 74.7397 li
268.023 73.231 li
268.791 71.9282 li
269.868 70.8257 li
271.222 69.9575 li
272.832 69.3354 li
274.698 68.9644 li
276.799 68.8384 li
278.672 68.9194 li
280.659 69.1597 li
282.754 69.5581 li
284.961 70.1196 li
@
335.016 562.562 mo
335.016 566.148 li
332.805 565.377 li
330.713 564.823 li
328.755 564.494 li
326.923 564.384 li
324.473 564.623 li
322.716 565.331 li
321.667 566.507 li
321.316 568.158 li
321.583 569.543 li
322.37 570.621 li
323.863 571.568 li
326.253 572.542 li
328.892 573.462 li
331.403 574.328 li
332.775 574.881 li
333.965 575.528 li
334.968 576.263 li
335.791 577.088 li
336.431 578.002 li
336.889 579.008 li
337.163 580.1 li
337.254 581.281 li
337.074 583.055 li
336.513 584.642 li
335.578 586.041 li
334.274 587.249 li
332.645 588.23 li
330.775 588.926 li
328.646 589.346 li
326.272 589.486 li
324.406 589.388 li
322.286 589.116 li
319.907 588.644 li
317.273 587.993 li
317.273 583.902 li
319.907 584.99 li
322.303 585.762 li
324.466 586.225 li
326.391 586.378 li
327.848 586.306 li
329.149 586.079 li
330.292 585.702 li
331.282 585.18 li
332.079 584.519 li
332.645 583.764 li
332.989 582.905 li
333.103 581.935 li
332.835 580.542 li
332.027 579.478 li
330.368 578.496 li
327.563 577.338 li
324.802 576.338 li
322.895 575.563 li
321.303 574.785 li
320.022 573.993 li
319.061 573.188 li
318.365 572.315 li
317.866 571.309 li
317.561 570.17 li
317.462 568.898 li
317.616 567.182 li
318.076 565.677 li
318.848 564.373 li
319.926 563.27 li
321.28 562.4 li
322.888 561.775 li
324.751 561.406 li
326.856 561.282 li
328.726 561.364 li
330.708 561.6 li
332.805 562.002 li
335.016 562.562 li
@
315.915 534.512 mo
315.915 531.402 li
315.915 531.402 315.915 531.402 332.799 510.712 cv
316.944 510.712 316.944 510.712 316.944 510.712 cv
316.944 507.611 li
316.944 507.611 316.944 507.611 337.467 507.611 cv
337.467 510.712 337.467 510.712 337.467 510.712 cv
320.608 531.402 li
320.608 531.402 320.608 531.402 337.634 531.402 cv
337.634 534.512 337.634 534.512 337.634 534.512 cv
315.915 534.512 li
cp
@
317.049 452.275 mo
321.174 452.275 li
321.174 468.607 li
321.261 470.598 li
321.51 472.293 li
321.936 473.696 li
322.529 474.804 li
323.309 475.64 li
324.302 476.244 li
325.497 476.605 li
326.899 476.719 li
328.385 476.605 li
329.644 476.244 li
330.676 475.64 li
331.495 474.804 li
332.109 473.691 li
332.549 472.269 li
332.812 470.538 li
332.897 468.504 li
332.897 452.275 li
336.505 452.275 li
336.505 467.899 li
336.431 470.248 li
336.205 472.239 li
335.829 473.874 li
335.31 475.152 li
334.621 476.249 li
333.834 477.197 li
332.945 478 li
331.95 478.658 li
330.856 479.169 li
329.654 479.537 li
328.348 479.756 li
326.943 479.829 li
324.583 479.651 li
322.547 479.131 li
320.84 478.27 li
319.462 477.055 li
318.408 475.488 li
317.652 473.543 li
317.195 471.236 li
317.049 468.545 li
317.049 452.275 li
@
335.016 343.541 mo
335.016 347.124 li
332.805 346.35 li
330.713 345.801 li
328.755 345.468 li
326.923 345.361 li
324.473 345.6 li
322.716 346.306 li
321.667 347.483 li
321.316 349.134 li
321.583 350.512 li
322.37 351.6 li
323.863 352.542 li
326.253 353.511 li
328.892 354.438 li
331.403 355.301 li
332.775 355.857 li
333.965 356.504 li
334.968 357.243 li
335.791 358.064 li
336.431 358.978 li
336.889 359.985 li
337.163 361.078 li
337.254 362.258 li
337.074 364.034 li
336.513 365.616 li
335.578 367.019 li
334.274 368.225 li
332.652 369.201 li
330.775 369.902 li
328.646 370.322 li
326.272 370.456 li
324.406 370.368 li
322.286 370.084 li
319.907 369.622 li
317.28 368.968 li
317.28 364.878 li
319.907 365.966 li
322.303 366.732 li
324.466 367.202 li
326.391 367.354 li
327.848 367.281 li
329.149 367.055 li
330.292 366.678 li
331.282 366.154 li
332.079 365.495 li
332.645 364.741 li
332.994 363.875 li
333.103 362.91 li
332.835 361.52 li
332.027 360.455 li
330.374 359.474 li
327.571 358.314 li
324.802 357.315 li
322.899 356.54 li
321.303 355.761 li
320.022 354.967 li
319.067 354.164 li
318.365 353.293 li
317.866 352.285 li
317.561 351.148 li
317.462 349.872 li
317.616 348.158 li
318.076 346.648 li
318.848 345.345 li
319.926 344.247 li
321.28 343.375 li
322.888 342.754 li
324.751 342.38 li
326.856 342.251 li
328.726 342.337 li
330.713 342.577 li
332.805 342.979 li
335.016 343.541 li
@
315.915 315.777 mo
315.915 312.673 li
315.915 312.673 315.915 312.673 332.799 291.981 cv
316.952 291.981 316.952 291.981 316.952 291.981 cv
316.952 288.875 li
316.952 288.875 316.952 288.875 337.467 288.875 cv
337.467 291.981 337.467 291.981 337.467 291.981 cv
320.608 312.673 li
320.608 312.673 320.608 312.673 337.639 312.673 cv
337.639 315.777 337.639 315.777 337.639 315.777 cv
315.915 315.777 li
cp
@
316.952 261.091 mo
316.952 234.193 li
321.077 234.193 li
321.077 245.951 li
332.465 245.951 li
332.465 234.193 li
336.614 234.193 li
336.614 261.091 li
332.465 261.091 li
332.465 249.056 li
321.077 249.056 li
321.077 261.091 li
316.952 261.091 li
@
317.467 206.775 mo
317.467 203.666 li
324.704 203.666 li
324.704 182.977 li
317.467 182.977 li
317.467 179.872 li
336.089 179.872 li
336.089 182.977 li
328.854 182.977 li
328.854 203.666 li
336.089 203.666 li
336.089 206.775 li
317.467 206.775 li
@
317.176 151.726 mo
313.177 124.823 li
313.177 124.823 313.177 124.823 316.695 124.823 cv
319.968 147.171 319.968 147.171 319.968 147.171 cv
320.036 147.171 li
320.036 147.171 320.036 147.171 323.911 130.506 cv
327.89 130.506 327.89 130.506 327.89 130.506 cv
331.702 146.923 li
331.702 146.923 331.702 146.923 331.757 146.923 cv
335.211 124.823 335.211 124.823 335.211 124.823 cv
338.351 124.823 li
338.351 124.823 338.351 124.823 333.934 151.726 cv
329.439 151.726 329.439 151.726 329.439 151.726 cv
325.742 135.938 li
325.742 135.938 325.742 135.938 325.69 135.938 cv
321.961 151.726 321.961 151.726 321.961 151.726 cv
317.176 151.726 li
cp
@
324.698 97.0435 mo
324.698 73.2456 li
314.366 73.2456 li
314.366 70.1401 li
339.186 70.1401 li
339.186 73.2456 li
328.85 73.2456 li
328.85 97.0435 li
324.698 97.0435 li
@
366.773 589.486 mo
366.773 562.582 li
366.773 562.582 366.773 562.582 385.916 562.582 cv
385.916 565.688 385.916 565.688 385.916 565.688 cv
370.903 565.688 li
370.903 565.688 370.903 565.688 370.903 574.947 cv
383.714 574.947 383.714 574.947 383.714 574.947 cv
383.714 578.057 li
383.714 578.057 383.714 578.057 370.903 578.057 cv
370.903 589.486 370.903 589.486 370.903 589.486 cv
366.773 589.486 li
cp
@
366.773 534.512 mo
366.773 507.611 li
384.953 507.611 li
384.953 510.712 li
370.903 510.712 li
370.903 518.865 li
382.813 518.865 li
382.813 521.975 li
370.903 521.975 li
370.903 531.402 li
385.916 531.402 li
385.916 534.512 li
366.773 534.512 li
@
366.515 479.829 mo
366.515 452.837 li
370.416 452.837 li
382.755 472.404 li
382.802 472.404 li
382.802 452.837 li
386.178 452.837 li
386.178 479.829 li
382.363 479.829 li
369.932 460.11 li
369.864 460.11 li
369.864 479.829 li
366.515 479.829 li
@
366.515 425.146 mo
366.515 398.237 li
370.64 398.237 li
370.64 410 li
382.026 410 li
382.026 398.237 li
386.178 398.237 li
386.178 425.146 li
382.026 425.146 li
382.026 413.109 li
370.64 413.109 li
370.64 425.146 li
366.515 425.146 li
@
367.033 370.456 mo
367.033 367.354 li
374.269 367.354 li
374.269 346.666 li
367.033 346.666 li
367.033 343.555 li
385.652 343.555 li
385.652 346.666 li
378.417 346.666 li
378.417 367.354 li
385.652 367.354 li
385.652 370.456 li
367.033 370.456 li
@
366.746 315.777 mo
362.747 288.875 li
362.747 288.875 362.747 288.875 366.264 288.875 cv
369.538 311.224 369.538 311.224 369.538 311.224 cv
369.596 311.224 li
369.596 311.224 369.596 311.224 373.481 294.555 cv
377.454 294.555 377.454 294.555 377.454 294.555 cv
381.269 310.974 li
381.269 310.974 381.269 310.974 381.32 310.974 cv
384.783 288.875 384.783 288.875 384.783 288.875 cv
387.921 288.875 li
387.921 288.875 387.921 288.875 383.496 315.777 cv
379.007 315.777 379.007 315.777 379.007 315.777 cv
375.3 299.99 li
375.3 299.99 375.3 299.99 375.26 299.99 cv
371.524 315.777 371.524 315.777 371.524 315.777 cv
366.746 315.777 li
cp
@
373.146 261.091 mo
362.704 234.193 li
362.704 234.193 362.704 234.193 367.062 234.193 cv
375.663 255.575 375.663 255.575 375.663 255.575 cv
384.434 234.193 li
384.434 234.193 384.434 234.193 387.965 234.193 cv
377.294 261.091 377.294 261.091 377.294 261.091 cv
373.146 261.091 li
cp
@
366.773 206.775 mo
366.773 179.872 li
384.953 179.872 li
384.953 182.977 li
370.903 182.977 li
370.903 191.13 li
382.813 191.13 li
382.813 194.236 li
370.903 194.236 li
370.903 203.666 li
385.916 203.666 li
385.916 206.775 li
366.773 206.775 li
@
373.515 141.894 mo
372.334 144.999 li
376.121 144.999 li
381.088 144.999 li
383.616 151.726 li
388.006 151.726 li
377.399 124.823 li
373.272 124.823 li
362.66 151.726 li
366.218 151.726 li
370.037 141.894 li
374.924 129.039 li
379.849 141.894 li
376.087 141.894 li
373.515 141.894 li
@
225.823 251.26 mo
224.641 254.365 li
228.424 254.365 li
233.393 254.365 li
235.93 261.091 li
240.319 261.091 li
229.711 234.193 li
225.579 234.193 li
214.967 261.091 li
218.533 261.091 li
222.348 251.26 li
227.237 238.407 li
232.157 251.26 li
228.395 251.26 li
225.823 251.26 li
@
126.686 305.942 mo
125.501 309.047 li
129.288 309.047 li
134.256 309.047 li
136.791 315.777 li
141.18 315.777 li
130.574 288.875 li
126.44 288.875 li
115.828 315.777 li
119.394 315.777 li
123.21 305.942 li
128.099 293.089 li
133.019 305.942 li
129.257 305.942 li
126.686 305.942 li
@
126.686 524.681 mo
125.501 527.783 li
129.288 527.783 li
134.256 527.783 li
136.791 534.512 li
141.18 534.512 li
130.574 507.611 li
126.44 507.611 li
115.828 534.512 li
119.394 534.512 li
123.21 524.681 li
128.099 511.825 li
133.019 524.681 li
129.257 524.681 li
126.686 524.681 li
@
367.033 97.0435 mo
367.033 70.1401 li
371.165 70.1401 li
371.165 93.9351 li
385.652 93.9351 li
385.652 97.0435 li
367.033 97.0435 li
@
414.956 589.486 mo
414.956 562.582 li
414.956 562.582 414.956 562.582 419.919 562.582 cv
425.834 579.148 425.834 579.148 425.834 579.148 cv
425.876 579.148 li
425.876 579.148 425.876 579.148 431.686 562.582 cv
436.868 562.582 436.868 562.582 436.868 562.582 cv
436.868 589.486 li
436.868 589.486 436.868 589.486 433.492 589.486 cv
433.492 566.396 433.492 566.396 433.492 566.396 cv
433.449 566.396 li
433.449 566.396 433.449 566.396 427.388 583.799 cv
423.909 583.799 423.909 583.799 423.909 583.799 cv
417.867 566.885 li
417.867 566.885 417.867 566.885 417.826 566.885 cv
417.826 589.486 417.826 589.486 417.826 589.486 cv
414.956 589.486 li
cp
@
416.083 534.512 mo
416.083 507.611 li
420.209 507.611 li
420.209 519.37 li
431.592 519.37 li
431.592 507.611 li
435.746 507.611 li
435.746 534.512 li
431.592 534.512 li
431.592 522.475 li
420.209 522.475 li
420.209 534.512 li
416.083 534.512 li
@
423.718 479.829 mo
413.283 452.922 li
413.283 452.922 413.283 452.922 417.642 452.922 cv
426.243 474.307 426.243 474.307 426.243 474.307 cv
435.014 452.922 li
435.014 452.922 435.014 452.922 438.542 452.922 cv
427.87 479.829 427.87 479.829 427.87 479.829 cv
423.718 479.829 li
cp
@
416.338 425.146 mo
416.338 398.237 li
416.338 398.237 416.338 398.237 435.483 398.237 cv
435.483 401.347 435.483 401.347 435.483 401.347 cv
420.471 401.347 li
420.471 401.347 420.471 401.347 420.471 410.607 cv
433.277 410.607 433.277 410.607 433.277 410.607 cv
433.277 413.715 li
433.277 413.715 433.277 413.715 420.471 413.715 cv
420.471 425.146 420.471 425.146 420.471 425.146 cv
416.338 425.146 li
cp
@
416.338 370.456 mo
416.338 343.555 li
434.518 343.555 li
434.518 346.666 li
420.471 346.666 li
420.471 354.817 li
432.382 354.817 li
432.382 357.917 li
420.471 357.917 li
420.471 367.354 li
435.483 367.354 li
435.483 370.456 li
416.338 370.456 li
@
420.982 255.693 mo
418.581 258.467 li
418.581 258.467 420.531 260.22 422.978 261.091 cv
425.916 261.091 425.916 261.091 429.46 261.091 cv
432.29 259.817 434.392 257.263 434.392 257.263 cv
436.496 254.716 437.549 251.288 437.549 246.981 cv
437.549 246.981 437.549 243.491 436.883 240.639 cv
435.501 238.302 435.501 238.302 435.501 238.302 cv
432.569 241.818 432.569 241.818 432.569 241.818 cv
432.97 243.286 433.167 245.008 433.167 246.981 cv
433.167 246.981 433.167 250.501 432.541 253.218 cv
431.277 255.124 431.277 255.124 430.022 257.035 cv
428.23 257.986 425.916 257.986 425.916 257.986 cv
423.817 257.986 422.208 257.251 420.982 255.693 cv
cp
@
416.321 255.67 mo
419.271 252.159 li
419.271 252.159 418.874 250.687 418.679 248.961 cv
418.679 246.981 418.679 246.981 418.679 243.472 cv
419.3 240.76 420.551 238.857 420.551 238.857 cv
421.805 236.947 423.59 235.997 425.916 235.997 cv
425.916 235.997 428.009 235.997 429.619 236.709 cv
430.852 238.276 430.852 238.276 430.852 238.276 cv
433.203 235.481 433.203 235.481 433.203 235.481 cv
431.255 233.728 428.853 232.888 425.916 232.888 cv
425.916 232.888 422.359 232.888 419.538 234.162 cv
417.429 236.718 417.429 236.718 415.326 239.267 cv
414.278 242.686 414.278 246.981 414.278 246.981 cv
414.278 250.446 414.956 253.345 416.321 255.67 cv
cp
@
416.083 151.726 mo
416.083 124.739 li
419.978 124.739 li
432.326 144.304 li
432.369 144.304 li
432.369 124.739 li
435.746 124.739 li
435.746 151.726 li
431.927 151.726 li
419.502 132.01 li
419.434 132.01 li
419.434 151.726 li
416.083 151.726 li
@
416.338 97.0435 mo
416.338 70.1401 li
416.338 70.1401 416.338 70.1401 435.483 70.1401 cv
435.483 73.2456 435.483 73.2456 435.483 73.2456 cv
420.471 73.2456 li
420.471 73.2456 420.471 73.2456 420.471 82.5054 cv
433.277 82.5054 433.277 82.5054 433.277 82.5054 cv
433.277 85.6138 li
433.277 85.6138 433.277 85.6138 420.471 85.6138 cv
420.471 97.0435 420.471 97.0435 420.471 97.0435 cv
416.338 97.0435 li
cp
@
465.751 561.933 mo
469.881 561.933 li
469.881 578.266 li
469.967 580.258 li
470.216 581.952 li
470.644 583.353 li
471.231 584.458 li
472.015 585.299 li
473.002 585.899 li
474.204 586.256 li
475.605 586.378 li
477.085 586.256 li
478.346 585.899 li
479.385 585.299 li
480.199 584.458 li
480.817 583.35 li
481.253 581.928 li
481.517 580.196 li
481.601 578.161 li
481.601 561.933 li
485.209 561.933 li
485.209 577.552 li
485.138 579.905 li
484.913 581.899 li
484.535 583.531 li
484.017 584.811 li
483.329 585.911 li
482.542 586.854 li
481.651 587.66 li
480.66 588.314 li
479.56 588.831 li
478.359 589.193 li
477.055 589.415 li
475.649 589.486 li
473.287 589.311 li
471.252 588.791 li
469.544 587.925 li
468.167 586.714 li
467.11 585.146 li
466.357 583.202 li
465.901 580.893 li
465.751 578.204 li
465.751 561.933 li
@
465.649 534.512 mo
465.649 507.52 li
469.544 507.52 li
481.895 527.087 li
481.937 527.087 li
481.937 507.52 li
485.314 507.52 li
485.314 534.512 li
481.499 534.512 li
469.07 514.792 li
469.004 514.792 li
469.004 534.512 li
465.649 534.512 li
@
466.168 479.829 mo
466.168 476.719 li
473.404 476.719 li
473.404 456.03 li
466.168 456.03 li
466.168 452.922 li
484.79 452.922 li
484.79 456.03 li
477.553 456.03 li
477.553 476.719 li
484.79 476.719 li
484.79 479.829 li
466.168 479.829 li
@
465.751 397.587 mo
469.881 397.587 li
469.881 413.926 li
469.967 415.917 li
470.216 417.61 li
470.644 419.014 li
471.231 420.119 li
472.015 420.958 li
473.002 421.553 li
474.204 421.917 li
475.605 422.036 li
477.085 421.917 li
478.346 421.553 li
479.385 420.958 li
480.199 420.119 li
480.817 419.008 li
481.253 417.587 li
481.517 415.856 li
481.601 413.821 li
481.601 397.587 li
485.209 397.587 li
485.209 413.21 li
485.138 415.565 li
484.913 417.557 li
484.535 419.191 li
484.017 420.47 li
483.329 421.559 li
482.542 422.514 li
481.651 423.317 li
480.66 423.976 li
479.56 424.485 li
478.359 424.854 li
477.055 425.073 li
475.649 425.146 li
473.287 424.968 li
471.252 424.451 li
469.544 423.585 li
468.167 422.375 li
467.11 420.804 li
466.357 418.86 li
465.901 416.553 li
465.751 413.864 li
465.751 397.587 li
@
469.339 394.243 mo
469.339 390.614 li
469.339 390.614 469.339 390.614 472.964 390.614 cv
472.964 394.243 472.964 394.243 472.964 394.243 cv
469.339 394.243 li
cp
@
479.668 394.243 mo
479.668 390.614 li
479.668 390.614 479.668 390.614 483.296 390.614 cv
483.296 394.243 483.296 394.243 483.296 394.243 cv
479.668 394.243 li
cp
@
466.168 315.777 mo
466.168 288.875 li
470.302 288.875 li
470.302 312.673 li
484.79 312.673 li
484.79 315.777 li
466.168 315.777 li
@
473.404 206.775 mo
473.404 182.977 li
463.068 182.977 li
463.068 179.872 li
487.894 179.872 li
487.894 182.977 li
477.553 182.977 li
477.553 206.775 li
473.404 206.775 li
@
464.619 151.726 mo
464.619 148.62 li
464.619 148.62 464.619 148.62 481.504 127.928 cv
465.649 127.928 465.649 127.928 465.649 127.928 cv
465.649 124.823 li
465.649 124.823 465.649 124.823 486.173 124.823 cv
486.173 127.928 486.173 127.928 486.173 127.928 cv
469.315 148.62 li
469.315 148.62 469.315 148.62 486.336 148.62 cv
486.336 151.726 486.336 151.726 486.336 151.726 cv
464.619 151.726 li
cp
@
465.751 69.4878 mo
469.881 69.4878 li
469.881 85.8218 li
469.967 87.814 li
470.216 89.5093 li
470.644 90.9097 li
471.231 92.0161 li
472.015 92.8579 li
473.002 93.4565 li
474.204 93.8159 li
475.605 93.9351 li
477.085 93.8159 li
478.346 93.4565 li
479.385 92.8579 li
480.199 92.0161 li
480.817 90.9048 li
481.253 89.4839 li
481.517 87.7563 li
481.601 85.7212 li
481.601 69.4878 li
485.209 69.4878 li
485.209 85.1108 li
485.138 87.4604 li
484.913 89.4546 li
484.535 91.0903 li
484.017 92.3677 li
483.329 93.4614 li
482.542 94.4126 li
481.651 95.2144 li
480.66 95.8726 li
479.56 96.3843 li
478.359 96.7505 li
477.055 96.9712 li
475.649 97.0435 li
473.287 96.8696 li
471.252 96.3481 li
469.544 95.4829 li
468.167 94.2729 li
467.11 92.7036 li
466.357 90.7612 li
465.901 88.4487 li
465.751 85.7642 li
465.751 69.4878 li
@
469.339 66.1382 mo
469.339 62.5122 li
469.339 62.5122 469.339 62.5122 472.964 62.5122 cv
472.964 66.1382 472.964 66.1382 472.964 66.1382 cv
469.339 66.1382 li
cp
@
479.668 66.1382 mo
479.668 62.5122 li
479.668 62.5122 479.668 62.5122 483.296 62.5122 cv
483.296 66.1382 483.296 66.1382 483.296 66.1382 cv
479.668 66.1382 li
cp
@
515.21 589.486 mo
515.21 562.582 li
519.346 562.582 li
519.346 574.339 li
530.731 574.339 li
530.731 562.582 li
534.885 562.582 li
534.885 589.486 li
530.731 589.486 li
530.731 577.449 li
519.346 577.449 li
519.346 589.486 li
515.21 589.486 li
@
515.474 479.829 mo
515.474 452.922 li
533.651 452.922 li
533.651 456.03 li
519.608 456.03 li
519.608 464.184 li
531.512 464.184 li
531.512 467.292 li
519.608 467.292 li
519.608 476.719 li
534.622 476.719 li
534.622 479.829 li
515.474 479.829 li
@
515.21 425.146 mo
515.21 398.155 li
519.112 398.155 li
531.463 417.725 li
531.506 417.725 li
531.506 398.155 li
534.885 398.155 li
534.885 425.146 li
531.067 425.146 li
518.637 405.426 li
518.573 405.426 li
518.573 425.146 li
515.21 425.146 li
@
515.474 370.456 mo
515.474 343.555 li
533.651 343.555 li
533.651 346.666 li
519.608 346.666 li
519.608 354.817 li
531.512 354.817 li
531.512 357.917 li
519.608 357.917 li
519.608 367.354 li
534.622 367.354 li
534.622 370.456 li
515.474 370.456 li
@
515.474 315.777 mo
515.474 288.875 li
515.474 288.875 515.474 288.875 534.622 288.875 cv
534.622 291.981 534.622 291.981 534.622 291.981 cv
519.608 291.981 li
519.608 291.981 519.608 291.981 519.608 301.243 cv
532.415 301.243 532.415 301.243 532.415 301.243 cv
532.415 304.349 li
532.415 304.349 532.415 304.349 519.608 304.349 cv
519.608 315.777 519.608 315.777 519.608 315.777 cv
515.474 315.777 li
cp
@
517.36 260.082 mo
517.36 256.584 li
518.737 257.041 li
521.313 257.75 li
523.29 257.986 li
524.655 257.892 li
525.801 257.605 li
526.729 257.125 li
527.436 256.457 li
527.95 255.545 li
528.317 254.341 li
528.536 252.84 li
528.612 251.045 li
528.612 236.645 li
519.303 236.645 li
519.303 233.54 li
532.747 233.54 li
532.747 248.849 li
532.622 252.413 li
532.262 254.932 li
531.565 256.797 li
530.415 258.43 li
529.09 259.595 li
527.516 260.425 li
525.672 260.927 li
523.583 261.091 li
520.815 260.84 li
517.36 260.082 li
@
515.474 206.775 mo
515.474 179.872 li
533.651 179.872 li
533.651 182.977 li
519.608 182.977 li
519.608 191.13 li
531.512 191.13 li
531.512 194.236 li
519.608 194.236 li
519.608 203.666 li
534.622 203.666 li
534.622 206.775 li
515.474 206.775 li
@
515.736 151.726 mo
515.736 148.62 li
522.973 148.62 li
522.973 127.928 li
515.736 127.928 li
515.736 124.823 li
534.36 124.823 li
534.36 127.928 li
527.124 127.928 li
527.124 148.62 li
534.36 148.62 li
534.36 151.726 li
515.736 151.726 li
@
515.21 97.0435 mo
515.21 70.0552 li
519.112 70.0552 li
531.463 89.6187 li
531.506 89.6187 li
531.506 70.0552 li
534.885 70.0552 li
534.885 97.0435 li
531.067 97.0435 li
518.637 77.3237 li
518.573 77.3237 li
518.573 97.0435 li
515.21 97.0435 li
@
582.37 507.586 mo
582.37 511.171 li
580.155 510.403 li
578.071 509.857 li
576.108 509.521 li
574.27 509.411 li
571.823 509.649 li
570.073 510.357 li
569.02 511.538 li
568.672 513.182 li
568.934 514.566 li
569.719 515.645 li
571.213 516.595 li
573.604 517.565 li
576.239 518.486 li
578.754 519.354 li
580.124 519.914 li
581.313 520.558 li
582.317 521.291 li
583.141 522.118 li
583.782 523.034 li
584.237 524.034 li
584.512 525.124 li
584.604 526.305 li
584.422 528.081 li
583.862 529.671 li
582.928 531.069 li
581.624 532.275 li
580.004 533.256 li
578.125 533.951 li
576.004 534.374 li
573.622 534.512 li
571.756 534.422 li
569.633 534.141 li
567.256 533.678 li
564.622 533.024 li
564.622 528.926 li
567.256 530.013 li
569.653 530.788 li
571.815 531.25 li
573.743 531.402 li
575.202 531.329 li
576.499 531.104 li
577.643 530.725 li
578.629 530.201 li
579.43 529.544 li
580.004 528.787 li
580.342 527.928 li
580.456 526.959 li
580.184 525.568 li
579.374 524.507 li
577.723 523.521 li
574.918 522.364 li
572.159 521.361 li
570.25 520.587 li
568.653 519.809 li
567.379 519.016 li
566.415 518.219 li
565.713 517.339 li
565.215 516.333 li
564.917 515.196 li
564.811 513.919 li
564.963 512.208 li
565.428 510.704 li
566.198 509.398 li
567.276 508.294 li
568.633 507.429 li
570.243 506.807 li
572.102 506.429 li
574.209 506.305 li
576.077 506.386 li
578.063 506.63 li
580.161 507.026 li
582.37 507.586 li
@
565.043 425.146 mo
565.043 398.237 li
565.043 398.237 565.043 398.237 584.188 398.237 cv
584.188 401.347 584.188 401.347 584.188 401.347 cv
569.176 401.347 li
569.176 401.347 569.176 401.347 569.176 410.607 cv
581.983 410.607 581.983 410.607 581.983 410.607 cv
581.983 413.715 li
581.983 413.715 581.983 413.715 569.176 413.715 cv
569.176 425.146 569.176 425.146 569.176 425.146 cv
565.043 425.146 li
cp
@
564.78 370.456 mo
564.78 343.471 li
568.682 343.471 li
581.026 363.04 li
581.067 363.04 li
581.067 343.471 li
584.452 343.471 li
584.452 370.456 li
580.639 370.456 li
568.208 350.745 li
568.139 350.745 li
568.139 370.456 li
564.78 370.456 li
@
569.02 298.923 mo
569.02 291.981 li
573.122 291.981 li
574.836 292.048 li
576.284 292.246 li
577.465 292.581 li
578.393 293.047 li
579.081 293.669 li
579.575 294.466 li
579.874 295.443 li
579.973 296.588 li
579.842 297.965 li
579.448 299.157 li
578.795 300.167 li
577.875 300.993 li
576.7 301.632 li
575.254 302.089 li
573.555 302.368 li
571.584 302.458 li
564.879 302.458 li
564.879 315.777 li
569.014 315.777 li
569.014 305.564 li
572.028 305.564 li
574.752 305.413 li
577.174 304.961 li
579.278 304.208 li
581.075 303.152 li
582.508 301.83 li
583.532 300.286 li
584.147 298.51 li
584.354 296.502 li
584.1 294.197 li
583.34 292.292 li
582.069 290.798 li
580.288 289.712 li
579.124 289.348 li
577.624 289.086 li
575.792 288.926 li
573.622 288.875 li
564.879 288.875 li
564.879 298.923 li
569.02 298.923 li
@
563.659 261.091 mo
563.659 234.193 li
563.659 234.193 563.659 234.193 568.629 234.193 cv
574.54 250.761 574.54 250.761 574.54 250.761 cv
574.584 250.761 li
574.584 250.761 574.584 250.761 580.395 234.193 cv
585.577 234.193 585.577 234.193 585.577 234.193 cv
585.577 261.091 li
585.577 261.091 585.577 261.091 582.198 261.091 cv
582.198 238.006 582.198 238.006 582.198 238.006 cv
582.153 238.006 li
582.153 238.006 582.153 238.006 576.088 255.411 cv
572.616 255.411 572.616 255.411 572.616 255.411 cv
566.575 238.493 li
566.575 238.493 566.575 238.493 566.534 238.493 cv
566.534 261.091 566.534 261.091 566.534 261.091 cv
563.659 261.091 li
cp
@
565.305 206.775 mo
565.305 179.872 li
569.432 179.872 li
569.432 203.666 li
583.928 203.666 li
583.928 206.775 li
565.305 206.775 li
@
585.307 124.739 mo
585.307 128.54 li
583.262 127.704 li
581.295 127.106 li
579.385 126.747 li
577.553 126.627 li
575.551 126.819 li
573.743 127.397 li
572.124 128.354 li
570.684 129.69 li
569.502 131.324 li
568.657 133.168 li
568.157 135.223 li
567.987 137.483 li
568.184 139.761 li
568.752 141.822 li
569.702 143.667 li
571.03 145.296 li
572.659 146.632 li
574.493 147.583 li
576.534 148.158 li
578.79 148.349 li
581.514 148.095 li
581.514 140.992 li
576.459 140.992 li
576.459 137.886 li
585.647 137.886 li
585.647 150.379 li
583.565 150.967 li
581.538 151.387 li
579.569 151.641 li
577.655 151.726 li
576.133 151.665 li
574.68 151.481 li
573.303 151.18 li
571.993 150.753 li
570.762 150.208 li
569.594 149.544 li
568.514 148.755 li
567.493 147.845 li
566.581 146.841 li
565.788 145.762 li
565.12 144.612 li
564.561 143.388 li
564.139 142.088 li
563.831 140.72 li
563.651 139.279 li
563.586 137.764 li
563.651 136.212 li
563.831 134.736 li
564.139 133.335 li
564.561 132.01 li
565.112 130.76 li
565.782 129.587 li
566.575 128.487 li
567.487 127.466 li
568.5 126.543 li
569.584 125.741 li
570.749 125.064 li
571.987 124.51 li
573.295 124.076 li
574.68 123.768 li
576.145 123.583 li
577.68 123.523 li
579.491 123.598 li
581.368 123.827 li
583.307 124.207 li
585.307 124.739 li
@
565.043 97.0435 mo
565.043 70.1401 li
565.043 70.1401 565.043 70.1401 584.188 70.1401 cv
584.188 73.2456 584.188 73.2456 584.188 73.2456 cv
569.176 73.2456 li
569.176 73.2456 569.176 73.2456 569.176 82.5054 cv
581.983 82.5054 581.983 82.5054 581.983 82.5054 cv
581.983 85.6138 li
581.983 85.6138 581.983 85.6138 569.176 85.6138 cv
569.176 97.0435 569.176 97.0435 569.176 97.0435 cv
565.043 97.0435 li
cp
@
420.982 311.294 mo
418.581 314.068 li
418.581 314.068 420.531 315.816 422.978 316.692 cv
425.916 316.692 425.916 316.692 429.46 316.692 cv
432.29 315.417 434.392 312.864 434.392 312.864 cv
436.496 310.316 437.549 306.886 437.549 302.578 cv
437.549 302.578 437.549 299.09 436.883 296.238 cv
435.501 293.9 435.501 293.9 435.501 293.9 cv
432.569 297.418 432.569 297.418 432.569 297.418 cv
432.97 298.886 433.167 300.606 433.167 302.578 cv
433.167 302.578 433.167 306.1 432.541 308.819 cv
431.277 310.725 431.277 310.725 430.022 312.636 cv
428.23 313.586 425.916 313.586 425.916 313.586 cv
423.817 313.586 422.208 312.851 420.982 311.294 cv
cp
@
416.321 311.269 mo
419.271 307.759 li
419.271 307.759 418.874 306.286 418.679 304.558 cv
418.679 302.578 418.679 302.578 418.679 299.073 cv
419.3 296.361 420.551 294.456 420.551 294.456 cv
421.805 292.544 423.59 291.592 425.916 291.592 cv
425.916 291.592 428.009 291.592 429.619 292.306 cv
430.852 293.875 430.852 293.875 430.852 293.875 cv
433.203 291.079 433.203 291.079 433.203 291.079 cv
431.255 289.326 428.853 288.488 425.916 288.488 cv
425.916 288.488 422.359 288.488 419.538 289.763 cv
417.429 292.316 417.429 292.316 415.326 294.865 cv
414.278 298.287 414.278 302.578 414.278 302.578 cv
414.278 306.045 414.956 308.941 416.321 311.269 cv
cp
@
418.928 285.751 mo
418.928 282.125 li
418.928 282.125 418.928 282.125 422.554 282.125 cv
422.554 285.751 422.554 285.751 422.554 285.751 cv
418.928 285.751 li
cp
@
429.259 285.751 mo
429.259 282.125 li
429.259 282.125 429.259 282.125 432.887 282.125 cv
432.887 285.751 432.887 285.751 432.887 285.751 cv
429.259 285.751 li
cp
@
264.542 315.777 mo
275.061 302.12 li
265.444 288.875 li
270.332 288.875 li
277.586 298.86 li
285.302 288.875 li
289.326 288.875 li
279.53 301.536 li
289.875 315.777 li
284.961 315.777 li
277.02 304.827 li
268.565 315.777 li
264.542 315.777 li
@
217.936 309.141 mo
222.067 309.141 li
222.062 291.981 li
223.981 291.981 li
226.116 292.032 li
227.865 292.178 li
229.236 292.428 li
230.23 292.776 li
230.943 293.266 li
231.448 293.946 li
231.755 294.809 li
231.844 295.86 li
231.631 297.13 li
231.065 298.159 li
230.23 298.969 li
229.211 299.585 li
228.09 300.023 li
226.958 300.31 li
224.961 300.511 li
224.714 300.511 li
224.714 303.086 li
225.03 303.086 li
226.371 303.211 li
227.84 303.549 li
229.249 304.038 li
230.43 304.62 li
231.534 305.452 li
232.321 306.417 li
232.795 307.515 li
232.956 308.75 li
232.856 309.782 li
232.577 310.641 li
232.088 311.328 li
231.418 311.833 li
230.492 312.2 li
229.236 312.461 li
227.676 312.617 li
225.786 312.673 li
217.936 312.673 li
217.924 315.777 li
226.036 315.777 li
229.528 315.68 li
231.907 315.39 li
233.632 314.798 li
235.155 313.808 li
236.119 312.817 li
236.806 311.656 li
237.221 310.323 li
237.356 308.814 li
237.246 307.481 li
236.893 306.278 li
236.307 305.198 li
235.491 304.248 li
234.442 303.421 li
233.15 302.723 li
231.637 302.151 li
229.882 301.706 li
231.258 301.276 li
232.467 300.721 li
233.528 300.045 li
234.417 299.243 li
235.124 298.334 li
235.635 297.347 li
235.942 296.277 li
236.04 295.123 li
235.893 293.661 li
235.454 292.389 li
234.709 291.316 li
233.686 290.438 li
232.358 289.751 li
230.735 289.264 li
228.815 288.973 li
226.602 288.875 li
217.924 288.875 li
217.936 296.995 li
217.936 309.141 li
@
465.772 363.826 mo
469.904 363.826 li
469.9 346.666 li
471.825 346.666 li
473.953 346.715 li
475.703 346.862 li
477.079 347.113 li
478.075 347.459 li
478.783 347.952 li
479.292 348.627 li
479.59 349.495 li
479.686 350.542 li
479.467 351.808 li
478.904 352.841 li
478.069 353.651 li
477.046 354.269 li
475.935 354.705 li
474.792 354.995 li
472.807 355.192 li
472.551 355.192 li
472.551 357.773 li
472.87 357.773 li
474.215 357.89 li
475.677 358.236 li
477.093 358.725 li
478.274 359.302 li
479.379 360.131 li
480.164 361.101 li
480.639 362.197 li
480.798 363.427 li
480.699 364.466 li
480.413 365.325 li
479.932 366.007 li
479.259 366.512 li
478.33 366.883 li
477.079 367.148 li
475.512 367.299 li
473.627 367.354 li
465.772 367.354 li
465.758 370.456 li
473.879 370.456 li
477.367 370.368 li
479.743 370.073 li
481.473 369.482 li
482.992 368.495 li
483.955 367.5 li
484.643 366.342 li
485.057 365.002 li
485.199 363.499 li
485.083 362.167 li
484.729 360.959 li
484.152 359.881 li
483.329 358.931 li
482.277 358.108 li
480.995 357.406 li
479.473 356.833 li
477.717 356.387 li
479.097 355.963 li
480.31 355.406 li
481.366 354.73 li
482.253 353.925 li
482.967 353.017 li
483.474 352.029 li
483.779 350.955 li
483.88 349.805 li
483.736 348.343 li
483.29 347.075 li
482.552 346.003 li
481.522 345.119 li
480.192 344.435 li
478.573 343.949 li
476.653 343.655 li
474.441 343.555 li
465.758 343.555 li
465.772 351.678 li
465.772 363.826 li
@
69.23 582.848 mo
73.3618 582.848 li
73.3618 565.688 li
75.2759 565.688 li
77.4087 565.739 li
79.1597 565.89 li
80.5298 566.134 li
81.5298 566.483 li
82.2378 566.977 li
82.7485 567.653 li
83.0532 568.519 li
83.144 569.566 li
82.9321 570.841 li
82.3589 571.871 li
81.5239 572.683 li
80.5054 573.292 li
79.3843 573.729 li
78.2495 574.016 li
76.2622 574.217 li
76.0073 574.217 li
76.0073 576.795 li
76.3247 576.795 li
77.6646 576.925 li
79.1343 577.258 li
80.5483 577.747 li
81.7241 578.326 li
82.8354 579.163 li
83.6196 580.124 li
84.0952 581.227 li
84.2534 582.458 li
84.1567 583.489 li
83.8696 584.353 li
83.3823 585.039 li
82.7114 585.543 li
81.7866 585.911 li
80.5356 586.171 li
78.9683 586.33 li
77.0796 586.378 li
69.23 586.378 li
69.2163 589.486 li
77.3354 589.486 li
80.8228 589.388 li
83.1997 589.098 li
84.9302 588.511 li
86.4546 587.518 li
87.4185 586.53 li
88.1001 585.364 li
88.5151 584.032 li
88.6567 582.519 li
88.5396 581.191 li
88.186 579.991 li
87.6021 578.912 li
86.7847 577.953 li
85.7358 577.129 li
84.4497 576.431 li
82.9321 575.859 li
81.1753 575.413 li
82.5542 574.986 li
83.7661 574.427 li
84.8218 573.754 li
85.7114 572.955 li
86.4243 572.04 li
86.9302 571.053 li
87.2358 569.987 li
87.3394 568.83 li
87.187 567.366 li
86.7476 566.098 li
86.0093 565.025 li
84.981 564.147 li
83.6509 563.463 li
82.0298 562.971 li
80.1099 562.678 li
77.897 562.582 li
69.2163 562.582 li
69.23 570.702 li
69.23 582.848 li
@
0 lc
0 lj
.0141602 .0141602 mo
.0141602 651.983 li
651.983 651.983 li
651.983 .0141602 li
.0141602 .0141602 li
cp
@
1 lc
1 lj
4 ml
622.218 630.669 mo
622.218 635.372 626.032 639.226 630.722 639.226 cv
635.416 639.226 639.226 635.372 639.226 630.669 cv
639.226 625.966 635.416 622.218 630.722 622.218 cv
626.032 622.218 622.218 625.966 622.218 630.669 cv
cp
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 15.0
%%AI8_CreatorVersion: 15.0.0
%%For: (Tobias) ()
%%Title: (Front.eps)
%%CreationDate: 8/28/2015 10:21 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQBIWOWaG4!WIlN,!a"^(W,(t_Vp$HbcD[68e4I]*?>=lJa-i?ggQ<S2HsAPY<RBG7tbOF;)P-:3EE)X8ukJn%s)f=S,#j/
%EqAGjf3c:?rTBY/s81t\?i%E?\QH%%$WhIjcbB1r:]C1ODdRn$\LY)R:h.:FYNlf/h!_GQ$i$P%+Pu-;:N*uDrr0n&GJAG#k,T<U
%I<U)1lHS)PIXZG;qt&E@^O6#npri90s7aL5=)\(]Fn=no=8rcf3W(*"nb2(F(Un>>hEQL6jkTMq;!7k'oDQj6?iTEgq`hc=qf@!g
%,C&u.NVY<c_/M(`r\!\I]`.3HpKt]1%1N0olX/GbhnPr$PX!TOhn=:/%c.Gf6SJ8iJ%?M1q=CZKHGQ3r^BFK][]?#A^45n>GW>6R
%IYM50^TJ?`IemutIIZKehn=C6r8#OTYQ*e3FH1:sI!bnkmD".+\?"`&\6S^9<3N<?f75s]-!'iqmpFk"qs+!h(PHm;QKqG$VdD47
%["mks!.VXVYW0nhX"RcJf<-^q.])5f`EKHc$.lGj+CF@`p#</.?i9<S=9&3Xq:@:Vb(:Vi^AHa0rr`%=0eNk6.t@E_pTIo9rKl+h
%h[(J;^M(8(^O5YGMcU7\+`:XM7s$P]>lRmnq#0fnIt$nt8F=[&mh'h07oGMb_5cBUs8._`_aAnOm>KT2J+Gm<Z<r=nQuJm.[?:QA
%WPE!)SBI0ja^;HP?F`Z=6]uT:k2?*Nng#1j#M$j0>i"9;^&7`ob<NahrU[6uKd:d4:N'Thh8uVjX31Ih>@#k>^S_%Qj8g"ahS"09
%DZdq+r+-rVG0hmlLX/,urqcEP*nLQepEqmb>-EKL?bQ9Ar3_$I^VLK=Ik*0=J3X%u%=I-rCE3-&(VetEeNa&qebARRIsV"SqepuS
%qO9Fi^A-sOlSj<>E<Xg;qr3M5qQm5pdRX*4Dt*e1T>1<tBCGZql,>TcD>O;A4hq!^McXi2*<nFCo@I>VrTj'ahgWZ)Y`W9WIsXV6
%Yd*Y'rY>G'*8[o\hI.K_/1gD%0>;a&?_Vm*O*KT;iD1QdW8G@<rY7!&eZ]#F^YhcSI0%-%^NfG:Hf>r^hHmtlh_3hJl0%O7!\Er^
%l`\(0H1Jub)Ar5mPPa1nn,N%Be][FLD86`m^OHeeOgs;_rq1&uk1f@>qodOYhn46b;9Ci=T/sNqIE17@_*#YRSim)Qpqn-Mq#&[C
%Q[aJ]r7f!!r+\.hjR;f8$fCn*.f,%,5'u;c:\M$k2guUi5t$4onhg]hX5A@*o%f4a\Ms9?U,$i`]>$K.(;Y7Ym;Q\[2uO>5oZ2["
%r:4:aS?Hg:O*CNNgZMqY"SVleX.PQ,o\ZhNoe5ffX5=!Rq($^2'FY&a?ep,.m#-@?p;R(1ljM6Og_,p_Ua7[*C!0qq=cU[N\TQ2C
%(L;(#<S-$Bh704A\QcgnkIhBiqW+sf]u2#jNBd9'5<o%^hhEHP&4-dcPYf7@gk9/sKl^LnM`uk4@u<:tf]"(2`+(pKF1b4?Elk5@
%@S3VqRT_bJ@lcdM,+\=g?1p;@KRu;;h!uWGjC:C8F1s46Lj*2mM'\KdC2%W-b"Xm^;`U3!\l<p*l75Q*`X3?i_@X-)=rU_%H;fmt
%<6t6G_<X&3Hijhe_=UoGn0f7dDT&/7]7K;#:2lc_\o"p3jT'o/i!t9j6TDk3*RXtcGCV+^@.48Gl$tuWE#mmu_0%rs*c>m3\cAik
%JA)sfdnQVgh7t"Ki!"$+>qj)6H8#hK_`u22'3o1[DJsERY[Bt'S0KT%0ut*o8p'/>k^UWr]K%$oVrRT[SD;5Y_C;)).A&*&cJ`m:
%m#1mVU^8\R_/rP61/:4V$W0EE$Rm>/NH?X1_^1NK1_G[Mb*lXm>+Er4&rLBg1Ia7\G!e1lF]kFZUmsU8A>>_8Un;a(\*6pA-k%r.
%<((g2gZpDte>Xm_A/'.tMIN"UWZ(*D'3tWMNH>>'`g"HL"k5EVQT+b=$EHR'6nC`7"-!>8!K@\V0oZ@20r;0N@n^<%?"]laV(88g
%USfT+FE7P&%CG/G<YE&I"ld/qlF7#_n3e/Ue38C0el8>bJQ1%]!i\NN!iZ6CpD"3A;[(R&;8u-G8f^SE/*[,'0`"mkQ8O),.7@n2
%/2Y4C6?E8cO]So!e7)[<.4#P%+K[?*F:Q5O81:@P>AneLdEK[kk#=.5RqH(6j`K@dVjo?h.*XHb-s$JM!LeSq$5A-BJolTlk"IVk
%M3f?MXD-Z#J,V_Y3kIL[JS8;f*9itBSS0$5S5D@GqC!T7K8a@+7bS'X-CRugLm3:7p'&h5/^Q3B2jB3Df5?.K"%g?61jT5gF?l)t
%8?;h$1'K_3]EG$O!%L&4<<]%m;IPSN4_L.$!%KE_(It,$#OA!jeISn4\%i_&&1=XL)'k!8Ps'Y63"LANJkS.qcKF9t1]c>Z"$%FJ
%a7K+SHg>QXb-r7Eo5G'Gj7ZMfiqE*>%%iS'PR\fU/$R,(lo2f[*ko%PDrLR@)!(tAC+s+JE>+9Pc5oBnEk4E):FCDT%6V=pJCDD0
%1<_,_G5!,eQK.B&$s`'']]oL8?=Dt6jr]/4H(`UijP^t%it:/8!,kuu4YtH+"KM12KRbC7p7;9m8"fb^m",TA+iD$MJ0>GJ>!T*[
%@0[f]2]Z:5<PW#I9LcgqLL%F*SijpY4Mj9F^ug80!nK0c5/IYO=GI'U_\mXr&bc5*3'd_NOC=t0XI"]B>OjAIh[)9a%IfSd%%mTm
%8\fBKE$(ETNZb[RYj+_\qZBY["Zj^i%2!9j"(a%R(AQSi.-1ZsV#f*\TUc3"'S%"2\:e)EN@3YI2aCk)^`7p^12tVHeE;Ae(Z;N1
%TZAA)jT-2k"Y.d4M^-TM#MNJ=/b&$=;"G,mFT^n]5iW1GH2rhH%eg_i-gUt$3U@/>$ga&cHNkN$]?&t!qb.ZqC#UpCI&;`2TS[pd
%P<[p:-*pR@lL*qg?hj3]?bT.rYD$ni>P*uKo];S2n>S8u91e?4NNeN.OtF)<-pCkFll.YCiIN*F4a\#[hWb/=1]Du?IsgkT[kBFq
%TYJ<fAME%VRJh(.q0.!N;1YM?f)H-M4noOWPi$.Zrf8_\LesKDU>kK4$MI&oUQ?AmG9@V?F]C9L$B\Vk#=fq$,X7'1((_UOi!kek
%&n+/`(s!7gr^_\Za:(=36t/P3_b!B3M%[oC#nolDN<qEjJrqDt*'g)dTLUb(%]$$<,1B4=(6p?%p0Z0oK'e%3eJNd\o,$-[>6Zc:
%!G);M#!b0j)8V.DHXR*\.gX!%*#b)Q0&2QYY[n+pj_%pofn(s`@10pbek@70\ggW<o4jC:?+5anfY[$k)Od`t,h7%^((Olb2.[/Q
%94GEPDLpIBX&VXDfdpQW_dM*_<UksJ'rYf`?JUp\OqEu#&/T^h(i75?b]La5)4ru;H\'-_fkDJ!Yc0R?<\YKs<]`!>ZnhldHY*YM
%Xgj%&Sn*W7mO6#J,HZVhCZU1N1t)DT>Vpt(UOHe'^o2fY1S[E?c-6#LAks_=?-!j,(-kr_$V_t@bJB.SlT`F3ql'$%QReEZq[DZ$
%krcQMaJfDZ_I,Wu>E>>$lI,"dQYPrT_^.5_llC6/W<4fKh[+]43(\K73V(O^G60)RI(Uc'N?b>B](H+ZA9@3MA1+#i<H7RMn8\62
%'E4LfNOf8qDaA<t)-L`?6:Pl!HGe*F!NHs1KY.D+iT![jb6K%<kZ0^3>@hoiboF7SFFtSOVG=Vg`pJd"FgS.F<ZS\FS0U\],=NSf
%m'[q*,!fJAV6?btUH6_Q37"n?c!\d]9'D`"P1.t13oLugG)s`0i6'uXXBhr^eq)VYZj(0tj.l5;!S?K::@f4o6&s9rJ(]*2idHl1
%i0P+Y:N/M6pC,f,CY1^aCi=8eR,6kKL1S6l8s'7H_L'&dEg(:DC]+Qa#dM0LOpJPfs5Z5*s$+nRP^g`3*K<!u*U#_t@$TsUC"8Zn
%(]BCJngr5CB),MXih4JSqO>NT9a\Z(,0!.NV-j2)=a1Ha)+NtS4T(f3P?pg')Lc'X`Z0uU':pl:FsNSsQ$KM%?fHlS1=>mS'2cXV
%dD^Z1[KCNt.QW:_QUm01K;&+:5Q</W,$Vdl`TU2#2*6BC]:AESL.pQ"VQ^;&I0LaES>;>4)aMM6UDNV=m#J(_+:%MU(R&$-?,8-H
%g([o\`+Gk(/D#`],=eejCELV$c5IM(Hm7T!VQD4gK(Z9F#+eGUf4!$:=o7cqgNYZZ%:$238Fnl?e-pIPe[IeuU;!H@aRB-XPA?/R
%Af'f;R]Qbs3%2QYM-LB6!H5qMA/g:23*;iI,n1[kcNVFg6%_b]5^;cTbVYT7Snnqqa,0o'QTjIk?at!o.f^"];ZMFh/h`Rj7(LeM
%V:Z,"6-+snXT<B5Epn`n*s[!bA/X6e'O8^_FC[<7Ob\cMlp=UTP-'!P8iX+u"<%7Hq8'lS2nAj*obXLi^k`mScp.Ve$ArY[VBH&%
%nrcarU;4S_2/NX@@/*"(W1]DsaGba`*)>FB_E+@D")$rHfe0'-3/o(uV'8X$/UD?L!gP$foS>%rV\!?O,,5Vp^Jq4qL5,eUdPG!7
%Rd;2CXtj;E]#o2]mh0#;rRYSnb53;:TB&2X*gQc%o/G)kJJFbp!Nhs1&de>FUX0-))'?t]:"r,%6b6bZ%-d+P@2^fQ<u&E8dhOiE
%;h7F]=$St-.9p@$(@6>!iO$(6?g#6l\`cAM3Y:3/4p5c2EZfPmSZPrOT8/[R+:VYG`I%]$],nm8TWUV%(':m(ZXLZk2;Z6Zk\,s9
%0#Q(N\@"iQK.Yg,$AG%KcGR?mE89]a?s`5o4PH(T*Jr)PWrR;iCUo8rCUPa=?fHFfE_)[C-7:iB;D+*j2qsn96VijjF$_Degf&K1
%UsNL-reS3!0n-K[pY!'M-[J0e#e]1!5LbVeU@Q=!q<ZCIh:d@fm,JcFD@pckrGVVY))pg[^\uuHB"G]t*)j"7_?'48:/+?HE,_$Q
%ln-YA"^n)O)r+,M:k0>liRja/FCLhUP)N<KH?b`qIkj%F%-PE-`?M@KN,g3(=g>hE=WHc`i=A:B8efI-ln[4mQ*^nK-+4+/@Be-/
%kmBpR8a1OfTKk3q#o%EYK?_E8"f*T/[XbqU'\f`d#_T7gj(Q2)pm<Wm^a&cH.?rU>\J*`BiqICNiF:M3&#JUK]3V7lbgVAIk2@d:
%fiaS&^R?is/*l@efBDP@4%FE!Djl=2d]eVA/'^KM:?:@jO_A6!G?]C\`DBdM$pKWA13CWjTa>C]83Wg!!1C("VFOkE]G=sFO#FAB
%D_*/.=a$P$N#'9UQ0;/gN]<.[aD8$[^K@5NL]=lL7rt^5`^04>6]/r5=cT6F%D!V%OYL8sMcAAEH(&%W/N%:+*5uq#,]6D<as8VM
%6ZU[.V3SQU-%%&!#Qq7IHH"h.JaCTQ+kT+.9;4[fU_&'SE3(;9n1=fTc_P=Wq1.UM6fH]#KkSjhX^hpII@<^2":Ee-nh2U0[`-&L
%RCnSN$K'^%=0bC/[ur2.adu3@cAc?AGRE^sE_bMTQ$XkHkE,hY2rkWh']uO[Rt+3@FKQYi07JY06GL"l>sQ0AOaOEhPt.O0@@&BC
%&]l^m!=mc#i%W,&DX#\I&gb,_.)pf^)3$bsKjmN><+h40"nF&$JhIg$_Y=^V"6=Yi'$n7b"Mi#3%l0h776T'GE8EtFA+89jk<f5t
%%&*D<\qSN4k<5%^_/rn4BUE-8k8I1c+nZmUVm&3ik\O?a$m$>+Uc/]soVVrHH\d*+YlTT*N3.lhHSfCVAQ*HVlcXq#bW7QEhT'>8
%-k+gNO0a!-H0q6Nps>H,X[hpINDUl/`D`;jF8Ee(L%L/&`BfO.0b.KGB4nMt3$K@h,)ngFfKc?/>l$^jBs<:B5,U;9,eGIdYCM*<
%Mq=LGAp5I3]*$.uNRpb?Nk?)i?>!/7/AW"_SHFm%H-m=!N2L5%$V!g4gFnWko%iRu9E@V#/1/TG8:L<8ouAL+@k9C&j`dSGiWpfC
%`YO&_AG*KQrYO/`37tV:D)eu[f=]M#n="]1F-s_UMl^NOVs=+qhgmB3DS9d1og\))enZ2Q?=a&(PsTC5Z(W58dl8@:l8Gn.:OHF-
%F^r@mC=H"k,8Rhb$\*'9>=-I=R]kr)UPfOG1f)bLM(1#f+O`cq:#K;9Ucf]C69%g9ObdAb+u^:LR754SK%"3h4]3W31=?Fb>'At_
%V;OVr4q2L(ND[h[dbF<(7<p95>Ojr_H4PH0S,YB5p"9$RkTBcjehKFJ!7DfHM7rK7ke$>Rk^1Z\_#-!j8q-r6s1jc8>KRgA:2HQa
%iJVOurHGp669,>B]@^$IX$:+lXj:DL07)h@E;aYHH_6AhU%.$HGX^Ot8u-'s+_ndtb:)X979078m"O$GU*)X8nm4mO"_ASa+(2iC
%khbH?<*A"Q0lO/RTKfQS0s3`WR$m@V-it/P,+hOBD5;`g]+n\kM8"(I'"OHSM6H-1os7<rI;,`4-*er2A3QDt7Qm`4/]t@:);[^.
%q/!c6oMoogLZNS\8SFF;#K`N&)3#9_1aA./9k'NY1M;5R43f56baCsjlcu^J%^7H=kthlB&o(4`s!k-O!-Wbu]+%h4ULbKI"a)(q
%'?sQEm7:<1Z^$980Z6-9HgLF!LUEgKIU'`KkXBQ0#kalW)Zjh?U^]?3Kh`?Z7t$3$+nPH^N]G9(d@HsK7I&&rh5B^sZcL#tq(Ohl
%%WG);%Y_;Ydik'R89tu'[tD%P%apO%AJ$;_kr3,rMfpmi!@P.LD`0UIFee'bF-C!"Ze_6%5ABM!0V?$j%p<&.jI,Wk,0hF]!^Y'X
%id@J,`5R!M#GO!!/)l.Hc7[h:%JIZTTla*tP.bt!16+UX+'.KUSAi@mFcO3.1.!A9q0a,hmMQ(j?-n=bU`7EJl?Ps6;%sefK5hN9
%$q$%QP!#R7GtNcGPpf/BiWgCR=r.Q1>V<P3RT\asOM3g=cE+^-%i5_Y1MF]s$f#a,phnEQ=_H0aEbV?=C[IJU&R7hoUHPAaSPul?
%Wd-R^aYXgVMU3?MZ%T0)B-/Vp*/coiX&?Z3)'>s2LR!(4E/#%F.j$>1r7DE*M7$-#S3AOB$$PWrj"s>?0CV][$O8N"P4=lt[E;uo
%3r7g+a!>[Z'.WYZnR/f891e;B2^Toe#M1Gc![NkBTH*ZYm9u;r*to(k_@#K,IL/ZJ$i].PJpi)a[$l^U51+m9]*a9m]],58RC]\/
%UU@QR"qV7mLrEN"I0nNM"o/,JN';Y$`=\c(o(s4FWHARs3V3Lsm*!nUn)Rq^I".t4<]GDg!I8jslkb0)e3/K[R&UJf2Er#.5bDbF
%/i<DN^n+6[&2h;jnNGjEn>u]:$bTfD_f7/%1a(,)(^He;/I=<h/NVh$;SbiBXcmGe<8_(mWJ2KAo]]k5A?j1YhYd%,Q?ppX_^JqA
%oO-:ti%0_JF2LbHAQ<<J<g#oeaV6!cNePiPk2uskf(hGfO(uU/#X;cGP9aF-NltR'3W]JN;/r</-.I8a8FM^JQea0u.j\J?ckocH
%AGo-/8O&a=e&^IA^cn_ASs"RYeS9/_TIM.U!i-1_cr!,/&5DU\B/ut7a0f)a8dMI@]l[\PefOR.rh-&,LX%,-\NQ?ZX)?^:lIo/!
%el[r/V5)+6N$'Ub-,'%^KWaHYY%T[_kJ8./`tL.!EM_G#m`qrP1MG(Vi:^.%V`I&e"o@Qn.pl+CBQo6sFkU-uT3K!:`7sep2sS;I
%Hg#eL`?$5+VDEpVg*ZaX">@qp['=fTD_N?e35#">i^[uD`>=KCa51=/o+o*ICPLlmIg>m8EeRQGLQ;-Af:Ju`J,M>sgk8)Nj.iH7
%GcBaACu_?&78,AR9I4FGfrj2E[+i+T-??]f(/DQMcb9soiVCA8g)&f&l9E5@d@PE/P`5K^9\XrO)rIbe=2gp_dC*F#I>_)-CCTd#
%9q""@^Pg$9cf2,Ml@(2]b)o-9.ojp.<rZ'&:2>?+j_p9+lPOC@fakr+j)sNj]ToK?#IV.`>9A[0!e'KbOqOZ4r/rkDHX/LC?:i<t
%>,sj14K\9dJ%3*p2Qc12HBG'LWEX#d\VARog<-,\J4g+_n#/hTQCc5oSRu/E(38MULURBM9UIHW^"n"?Zm02m\nWq<nH:iEU`!1\
%M9_80QXE<kWo=ocO*XTRNJ?04;3KnBO3p!#Nf,E7Qu61t[Oot7"?6]4>5c>@Ti)>cEk(a\/%J-MJ16T,7@*_*5<mR_V[)Z+*U%[.
%cA_WGSVM)Bq"XqTB.Bjs&.pUG8T]ltQA[#qh2m@j5\M:4i52Jrcp=J@IKW8/rYf1b,Q"Z0=ic)1Oj/Mj?%M^2)kDPRUUrDc?U;\[
%!)AK#ciJbgBi0G]Ok6,F.]>W(aKobm+.uN(WN=4:do0.")Po&3/8:9_%4<`@\45-2R!^&'q4)uPaX;YlTVlB-7q.#fKZUV$UG+c'
%>!StY\AZ_:75X@Pf_<tN-;I0*rnr1<k^Fj_:6L5]AQ"FqRMEitpuCX#XoA@?dX0n:Ea]bWq7ps8ZS9t=BVCeH`f$3l+&!I]#>5!Z
%U1"`H8J53-U>^0NfKUuWCdRk,(PQ^!_cA'mrM&qb[(Gns._DbL/kq.:_f_>O2nSCc]2&;;[H=idGLt\Rg7r6Zj%7-j?X\.]QH1O$
%V*QO>95T#MDYrn)qb=4S:;SRUV/oj)E=`U7ml[RQNeA<:cWU"7e.@oMYr%E9JZNu9b&,$!d"HpAH[//#S$88=$+6OBhbrcD]'`"T
%6$(cR_NeMqKtE()j<S7>>EiC]Cl+kS)q=TnfAQ`&Fbb8Pkk47"9V4;]-CE3=eUsc<(M<t)"=MHZbh$1L[0IV<75R2O#jDPYZ>5GI
%r<oQm'aHu.:XPT=3.<fF=%OA\[YkTh*]qkAL(Sn3:H)@iIK&g1TAKJTUC#sNGi(Ud(!)ebq3pdSal+>F_0Z8NVZ3T!:D+,Th8a4B
%*9Ai>mD$sAf;sH5<%t'/r]B4A<WR0*8'It5<cnCPhZ<%&TToN?+^]Z!!gqR>33i$m/bf9Wa9h-7=ZqPR$c4M'].b5C@2F_B#Z2l8
%CHasc-pIN[`8Uk>NN?b\>ig?\k`mf+@)Qon9<:3KoH"]0Q_[tIRu;`'`:_GjHC["HmJ7`3+/fL`-TATm?TK:[(Q91PH#9,Q,E=Pu
%pVQ=%,L6#^rFa'A@^]\i?buQJ(9;T3\DpW#b0/u'OXJHqH&Cruaig.Fa8+6_@rce*+cgr@J,I3_'V+i9(p7/BZ:A7da:U?Xb)cl(
%7+_<+,ar[&+"!K</IY_9>tM3hgk@)'n^hX3YV8aG?s'gOMaP+b1!+I)C2%<::qEJk8bWOX4l(-P\6SdYn"',uA%,\-Z+g]Y&=3_I
%N[qBB9q6;U6-p8n27ArINRAYZ)3ZN:3Xh?)AtZpJEjPf4_fLIa[o3]:WoJG+9D8s0);&&aJA=4VL!D^#e2lMUjlTE\"-+daW3Jbk
%&QC;7J.'K,>Pji$g2Z?-hL4,5!p!tD![N[@Og8q_r$N't2hU&@M[^=>Q3'[QK?Ec^M%J^(,O=qj[\o,/.%&^%;SoZ8$6P7,/6u@_
%#]=d%gh_-L$!gNo&0JJ7j]@>YL2o!Xh"7hqk^<imD0V3K"o:"$KQ\>aU26_LKW+eJ`JFC8\K@KSrC;hA+--.=_haqujo6&&WrE1t
%afcFT;Yi"Ojl8!2;1Hn&?>4`)h1^9"_Y!C@Ge*31QK@7D[hl4=KkmMH8uIPF4$IoFXKKH[m=&H]r_nTQ$s2:kl,!T<8UV-B)@[.Z
%f3Y+t67i!sU$F'GN'c,Midn[l1/hD`["BV0$8WW'=X,8J/8Sj)`4j;CQWFo_>'HE:230!*;MMUIcRsY7V/tJ6Wd;)5aJ>%hN=8G4
%du$/Bca*:R=2n3d*NAZ2<L,Hs,\BQhN3N"7;b+d_Y@(m.b_.=mnXhJaIZPfR(f[70n.A[-I!1!gG(2^&IR2P2]@*%k^V$qnmm#QG
%ec:0MJA8:oX>I='e2%Ppd^478=$4Ea\OH&R9LEYmI,!Bc;AoB.<'rh#:`C/Do.]QJ_p.G#IddXj&h$=>^)ko\q?%8&@N:0ol]\;#
%\#V:N`Qi2b"kgR;3t.^u30\+B[9)_gMW"1@ol;]^LA!--o9GnAfUK#`L>9V'fmuA,"m5E4&)K$<7R(+_T.S`]-2U)ui#f,gI3.pX
%7s#7u&04upYKg($`F"?8nN@OdRtoQ<6[bn/RaaaicaoS2``dV%"&EVE#uYNh`,jbOo-djUh=TntgIT]7[f#99*9WJ&.f>$1*[A_Y
%*l>AI2Je=eS"n@F4YVWlrK^Y,.=Ydo1*!Gd>XdBbfg-<q%##`hTl'BrPUjgFI3IKee4f$n*2?,94@cLRO4$LX>KCe2p44.XV01;I
%_gS9ZM#+<9X*YfNkWY[)mep.-I?(YK?+eJ[5j'@B*%tAh!hiQQh"OfWWZ&LOjBOXrQ$ir`N`"HVQ>'mMS>ULPb@_L^ZO&^^Yfe@$
%(_e!.h,7G!FkRK3J#0"o(H^/0@M$Z""emG&!0HM_!6jFC^0+OJ[ibW]IVJr,a`761"#=_%4TpQX^[@#Ca/;.2&=s&%I+b2ck3^1L
%jZ#HtA%j8befU0ZNP/%M4kH1<rJ>gVe!#5Fr6$1M8cAOqDn^YqealjD^\e$'G;%f]2Y@ggK-njA?5mo,X-,WAPQBg2cBDNcgF-[_
%mcrA-IFVC^%_:-D;n[BSf0!fmTMCZA@<KqoY`8T28SnRjWp80IIJZaQoMIZG\"PiDc[)C^#D@DQT6K,=LX,*!l1*1.>Vi?tXaZ_N
%JfiYj6`i5UQF`5?\3C#=DpLQ#STr^]4bJ[(M4ad0C=gKT@..r>nDVV'*n:h\U"Ra^HkJPZGMOWRX;X9/[<bBS'(q-B;0q0!YEb!Q
%<jK<*ji7]S&G9%`#eG;2L!ieiZu1lEaqq$a'X$a,]T,uaC[\PN]ZYU,?C`*e#93!AnhP":Orf:C<aOq9c[7PDRKmae[T,#BZWlOd
%Y4GG9Ydk"5`rPcZKKUd:Iq6I">sD90\:(Z+?2k(u.R0@6T;7b&Y)sHaFmg8P?#F.0Ddl-eXL*NnCgskh@'slZ2)_WV>?=\^.VW*E
%=AH(d]'Z;Zdt?fbS(6T%7FfOq65=BJ2pG,&mZu>5YIrRbelQ/r:YcN:jk&>]-b]13Xcfc:&c[efHS/Np\B0pq$kD`Co!E<(FP16q
%3#>-#c4A"UM8o++]$07_=s)ccRV<]?#YjaOgE1j(#lWA5#d*cYe]F?IF#cI&>$)`j0VgsOk\,ui4iN(M0T#c+R&?./5O&h@2e[D)
%S=C-12pEE;B*>];=i5JrS2F3k!"c5*DjZW@dt6t7;EMoeZ99f"o=W384KWWcO0UX(X1V0`WWuICX6"#\iG>enP!+q\O(+*0q3QQ/
%D=/cnoa9k3(!aLn=^[^<eUBM[>gF':G*;Xs'_*t[;pd&RNOF;41FOFb-B==)mU^Q/JK#*TA28**SUcZ0IAUa/D7W)_b:)`^bpM4q
%]ZY1@S>56nn;0Gh"EdJfPH;p[:XMoFZEo-j"e2'1+AI'+gDr>e$)\_,I$aeekakTBj9L/S2'm$'o4L+*2\YAbTa#&+doOn0Dh77X
%QN^)!ck>R?jT\Bs9iZ'VG+b!KCq[sp=&$i>oIS9]kA]8X-*9hB%TI1cCX'd)[1g/Tp",8S<3/tr1"&Z[p[$aaeOi[lSbr!PV]D>)
%Yg6'+!cbm(9@kOVXip7C]bT2CVhKJl_brJ8RGOlG@jUO2GVL1K[X6=/ldkrYOrG1W,O>[$rA[pJ\!mKd_oclc2LDpb`E"(d_Xofe
%bR!O&?t2p0*P=*H\^:rBd!Vs1<M)3rYQh>SYr9n2qVpY205_`/iD)`LS3-H)XeHdqRB=Fo58p:=MK*DhS_gA+HZ.]%!+boI3160]
%h&PWJ8O)L@+7n$hbbSmB*$V5)Ad?L8ZQm.If@>9"4f>mS^7'CUe,>-TWc[9!M+=`Z:RdN/8TDg*@P7eN#7-?sr\p"IWSmku9+E*H
%@+OCajO;'F.T!o[dMoIJLsj/b=GnR[g5sj+;qA8$iA#Z2W*UicdX%.q7rP2/lbO8TD;3b`[g#!YP[$1M/tjk%:ZSpsZ,9/fXI6+e
%U<k*b6Us<U&sf)&Eo5/BR^rD_Q&PHskXa5jFo4LQ;4XX0RG>\=,XWSpMpLHpj-jr\]K>\q"57EA2KH7^oOF64iPmb7l>d9.ZuDjd
%UG^F?W9?qdjEO<CMlV*Moq8#-Usg-&8KA9[lFulHl&-f?d-^$Qms3TAg5d>=bj9%5[edpBp7b,t0OnP8^:(]?<Ac]W$+:7"h:dt"
%\)cr,h7YCY=gdAYa+RT2?M;qUkL,*tD;\bm>j20m9)YN[gE5g=e+0Nb8P#J;OA7m>ZQF7ka40iNlI0_-\K"FaU"tnY;-3n=-?Wd`
%ch_V'6pHE4>&OFbegV7qBqhM"UfH-%]?kFjNguHcM4XGk#L3j8c$sF'KH)[Ah/TfXG>+Xm8'CZ!$.Fh;Xf1PRU(<)m4M#;*d"MC!
%Os77F^$7i$*&hjs@%E=b"A*fQ)UHh'SCTQfD)M'LAqS-I27MYjB:ZlI?KXH41&#=%I+kJ-n0pq%+^G1[$<O33""0P/\b/PSHt))9
%9%VbHa!>TF#]dX[N7>?.)H^p7o5hh=FL<:&/Ok!D0M^R=K35EcMlX2Q*2m4nbe..-fXZ0bJn:LQpM!!BA4kOiroN7R(]Wmfk10(,
%rZ1UP<hB]C]fda"9K1$^Q&I+-*H`r+)i;(iLFZL5ZE`"#Z6V7e\<2@ReJYCb"6g&rnLW,WrN^@rOg[nHf6p$%A$S\AXUJ/XW#hX=
%);&!gOmEocX8;FgPEE.Nkd=EoUi!T:ID7&u%)IP!O'&fm8Tqc3C#pWZrBt(7X=Bj=,a*<qB19tG/?H!/4fgHA[AHf>1<kYR#l86G
%+/V+_W'-9NaQG]kW_n3>OO[X'@uq=u#LX.>a"ga\g>dEfqj?J$ckTC1@H)93[N<JSc(d.oa-js[W2t3998DA^953b4FKr!.q2MS_
%%)0^pFcLN./'6):36=/q8/^O=5(G!2<,jqaCt,AnX1l>6(%WL"=cQPORe;P!/lj[0l!m@08gEM5[TQqab1IASh[t4-B4b:YH8mS)
%`.f)1o#iZ_W@+9PVAmmtl@q7b.;):2X&Ic3/"Pou'2JiB+gnCH23B[h.+I`2ou(,3l-1#jG]eLfKN-75Lbid98mb_\K8a@+hBu)6
%U?(@@0;RK4)#F3%`08[IrS<Y*V?`a='Rmo0WCePjS:R[AKq0prQqssFO;"3mEskqY@-',eF9:=WJL;.8h_Re5:Fgblfl/#+IKc-Y
%"LDi'"&6Qhipb5*m4>Jrd)+cu;UD`Gm*5Rsc(B@S5L[P`ReTPiT5!:PUOM9OWHhY1k\JQ+17^^<C.kgh\)O..jl=)LM2.NqSNJ"n
%jnBV`!;YZYhRrj4gR#,$]mTeA0>AKdr:)Gd^A-6foXDVcqp"_Vmp<YT%JKh\s*Xk?`RSncT't&(+$X(WJ"?A,<953LPOIaY$r)6H
%4+I7unGE4ekhcAI=22EE\,X!DIJjTSn;#o\%=PI-qaeW]iCA71n<%V!>CVu'^?,\"p7k50s)>d.h)-bZhlbth04AU8d>-/7k[T:,
%TOqO7Ii[RtXp@RZVVf+^6/Z6fNZiE;;Uk7#2Z/di%--?4I\gQqNddc#oMGab1%eb!Jop$s2Tq+NqFIBBPI<L?VCY"2L>?Q"VD3fC
%cOd<I%fN0[l?@/Y9`O`&LLiX/^;Bil3Wj^BrDHlpL60-N-f+$b@o"18&B=&l9Y(c0h3oJTm@u9iI;efT")=,Bg>lJ-l-Mq+B`1sZ
%JPI9_1kO*Koilj)RsB5KTT?\:2K,)YDV"YqrQ8_DkVlf5eZ3T7YX/pr6GM%u\=%H:&AEWs:V)`ts0BqCcVhNc+]ub_ZC^eU#^&5t
%N`uB^^Uqh(0?LnUeE*Pr>%(e]ft,(kEffs9f%co.6pgWi,13;#K`9A;ot*0SmR0A`FiA4S2XT>%Fje8teuQ)g#iht'd',hK9gZVF
%-b,Rd-PF.C=\lWtZ!f\9A0W>jg!K)S-e*]<2B,A_f%31%e`YTJr@_OiMsLUm/Wt<1N/u<RhgGIKX64t]J[0Oq7!_-*n@qa8^c97q
%rrOF-+Jf\;=3&'9rC+ZkYGI&ij;'F%j0ES`Etpo#+tu1pC@qUMWQa0#i3)-F"KD9g0MCDkSpS4u7"=JUPs2s$,Sj9FBIMO7lS03%
%ZnJ'gj)h"ZO[:9PN?D#>YWOYKr`&\E:Q-/*^>QIBD&3*)j'6s4I@IU&S/7%lTr0KM;=CIST5u=!U9ejk/NIa-+<TWdEP>_dCXA^6
%Pm;0G"oSSB"Bm^IP(4Or+9Wh5CS*L,_K@HHA0O@_2*)3:2KU535'qLe1a$cR[L.uFKG57APc;nT5Y4_u^47oiZ!f)c:TfmgddCVZ
%L)"L@>6WT\bMn'U*3*n!pGmuoOKpu:@HDf,5]lK")&^Hj,OE-r]fbL/$B*N'T+)G_?tSdi<Yus*SJT*tk_>M4Mk"2n[iZ8+D_^l>
%XBhTnm7PtC4pP/aI0S+[P4U1g,VVG/-2jq>"(tfQN3`!?oCtu]b.M+:<qFheX&h*M]Y71G0k#_$5*$O[TOJcCW@k(Hk@(%uVMbbe
%F^X.p5E>qU5Tq&<Y="4^pN]2O#%Z/8rr_;gmQQZ<X[(\B*Z8"GHlfbY!G.J2+CL#&h</dA.SR:UY-[J7rTKUu3^Xb[$Q.thTK*)i
%Ff#.XX*>HiZ95@XSaTen=J!E/b)t-e3i,]`/Sl?0EeMi]-_(:E$:&G3(.pBap2PHdKc,(8#)o8>h<,Nj;4sQrSsg!_iV)kX>n"ei
%#P<[%mG199I3BI315TP;03;PnmlleSAj@P0\u?g`[\$'A2OG&(9RrCoGFqqua+1J/!%SQD@J>'&UC&i4K6[^0m6@d6O91,Ia=8]1
%OcRY8;S-7-lEX,K_sPi5@#';g/hiOp9<=b,^<Rk\KhX&D?T/4N9^0.J7biHI_7`M<,m=AA?Tc'OZ692'I"YS'<A:UAd(io)<s6r<
%`jbgRHDk'/3<k-We-aKpJY_.O%-?2EA,?TAT]q"Q9>FYMp:JYb!GaJ/VEgfXP5,P*MT5$rTZ<]V97`a6j9dt.H!h:6TXUQB23=S\
%aaidtdsVg>-"aX`>_!B+12IUT>W:#,FHn(h)>tuMa1+P#4s-JtrpuW20E1t$S,5FDU=qi)8^Jq`P_4ac0+E`G@R=!_"VOTHrabD=
%1[t>KPgT;,2NM)Fp$6h.0dk8Ci(G]X%1=R8`5N7'(M?NM-#YE4K^6o-b6@[8H9?_C-Y.\"/Qq^?!J4-MJ2c<+Ra\_d#iI+X2+LKL
%Bq>-L$<mtLIIs(5+JW\_Ghe=H<7OSj=0%:WYb[/S!R"]@)=t=M`,f-L2$^Vpk+pf@,:4OLNhs>[$mLej+qoK,.*)k;q\5n0Y,<?B
%ktW"(qrmR@5'Ue5O\/PU,['+N+H39I!on-WZ09^6&Kmeeo^+_;M!3U#/2B"h-*aOi'+bV^q5-@MajpUVWq2];;;d7GS\_f_!T(*"
%opR:FKk[%U\0fs#J*NK<m`RJn"KfeHAI*+#5q+@^+PQ*82;>A-'d$gi9sn]&>]-#m'hG+M]`,K+n`b3&r4s3!VB!YnfcU\jO%/]0
%$%O?.Ej`tf5rrQ-HMa6?e0.n##?)?gE-_E,ZTiRiJ3eeSNfr%?0,k$>IWLc"D(&Omo)]?aGrI(hhZg0o:^+*-Kl(hq)\kn2QFQe"
%55WHf-,IJ]]JSONF?uTS"Tl8.F(mf;_X'`S&hG&(2_%XZ*5<LK'@qEek1QB</tdt$+Z)Y`d,7K(m&_$mJLc-6f2jJToH1OmUVPF&
%CnL];9*:7#($rffdO9'gEI.dm)^ft::`V:HG'0\aEQl_ojQj049psi"l&QQ0"bfF&CU'&]M5_re&g6P4RWTX02]!`eSJt4aeVsW7
%NOXE1PD^3`2j1HJ"ep`SiarOS1<%jcA9B*t!NA-@q?=[;CeIq>QdqY!YVN4QXB%ejXq_um\3d]>1?6NUf!W(fJZCN7:OdCbCpc/.
%>bPE#0WpE#?)nnZ\AGbh^pl;WL\J:S#fGW9J,fAkY?kK4mbQWahnGbFo*,7c)Q4EbWhr9SRsC*Bq)'&a*e/<)S]-'67$a$,9+-_g
%cUA]hp^8_-'(Atm&.g&bOF)^1;<#gM9S.e<Vo1+frqZtOQ(3@AQKVE#%^8_1\^Cog[Rh]IYA#.=G_kQdQ7"QPVjALr&W?8((LOq1
%?f+%srSmY=X5C[>`@EbIUI#iL6GXWF%!_E<Ggs283L2jWiASU1%knmUq"jKm'hlAh2]6NHf_Eh#%!JcSp2+Al0OggH<ABCG^Jk<Q
%PkUraL9#o0CBpPh!_'Qn-JO`u$X,.<Y<\&BJD!Gs=q*APGOQZ&;G+k<kUjMq`59l3*/C,Of\Zf+2csc:I,b>#S%aa*f@;gc2Hj3^
%^'3(IkSnsQK]dlSeA'6I)&&Npa7MAUG3+1SYPd$amUUR1=qR&k29AK3k*!8c/`elag4T/h?s,gG]3<9Rbg('Up`-[_'k*&]M`^$_
%Mu;U^iQ!M>QJV$_;W_dNZUn*FTHo)fL4kqG/OEeS)^%:5/OB4o!,4b,SF28)XRhMJXk/J:1T9H3a^jb.2-k?[b#5"/7adlEGH7%!
%Ob!dV;'hQ:;^V-CcEnIoYLOE)pQlGmluE<"Y0ICLc,bWn2;aJ!S[?>Virh8MlQbbcETMijmRPoOK>2W^DarNp;eJNLp9\9t,40$I
%*?3b;[Z?DBr9!HdTARE]RT*AcSN0B]XJPWX1tEh.L.:3+laYtFq0ei/j0?Zc:ujMZ4lJ%(SOer$P.Jc0U#?a8Op7(OiU7G*29bSj
%B2)e"[HN]$Jc,X>-Dg'Z-&p5B^of*Fm-R$jQ2Ef^*XR<6T"TGPb\kN:bV$WXIKuW'7#GD+3R]u>Q8+Wg5NMtX4DoP[e`/@,S]4@[
%JSgD'!DK.>AAM:$pm`YKs,HL@5)`7Aq]<?HPk==bJ%L"'rHEarZ$uPM(Os&[:KQssc^$)_/A(brhk#5s2!h@Thr;\=Ng5Jb]I"LH
%6H2^;?^@/Z2:_e7eX4a<6@<\T7c*/TD87fU4thHIbBNP4!W8C`\B#A69bmLiq?>J4!@OT5qcXe.T;(Vj.upOVhM>-.M5s]&-9pIH
%H$D2:A-AV.Sm!,dI)#l#`8h<@3-gc%Y$m5WKEmkRbSu)7,$.>E`,Yt\[O#1V#Y%B-i@B5lV8?_M63,>TZV/p>NbQ!@JTUqsf-opu
%L)5l`$LT+bA+Ku0f=lddL6(pCVJU^%7["+/fSk>NaIl"A5agR=Ag]>Ro?d!og,0Y20JE`n5n&^NIhOM9cND[_Y$q4T!,+ZN3f#`t
%N=aIQ5a(r%aRLRFTViQ!^%6e^_I6OJB`N%m:2V\0Tj]__Pe]pkY.Z>c7K@[,3jQrA6i_=OnH),9Rup_k&:#6d/e3[R;Co`F"39G9
%1un^E?5[[QOq5e()ktdsC2L&l'KQe^Oq,sXX:i&Z6K!pg`$<u@O^1LOG!_4F>$A-AqnnoZm+J3@^`%;a+G^=SN3-9*q>cSEhPi)D
%GauG15^*"*/NJOm[)O.LKEL<j3<gc)=G66U=2;ld7Nu:k"sdQ&<,.9pYBD_7h'0$2;ia7>;-+0V-,tM)ZFlaQU#p_CA\nnGEboDT
%hdT4dqUSkS(bji]!>C/l<D)/MS^G=7Gh2`)EQ^",l!d%YQ9?ppZftAkEDLnSYl]VlUPmZc$>#4_hjC^XF:mPj/qVM&W.2+'aJOV@
%P):TVa6'6aTo4Mo@^ireC[2^;'^/J1$<3a<r]2VW0Xu_369A_oFf[\Yb$.5$Ap]ABa_\VgMnOf#g^,JXR!E@\_GW5W#YWMkKJcY?
%_'RpcZ#8h)iYu=B_s%`D*.di_b8oLp0!gDQr!15GW"T_]*(OuM;"s92,;%SH'@P>-2r1GL[e5jibdk]a[Hq#@Lq>Zqc7&K$g!BE6
%F>lq!IqbmZMn5g:*G(0<Fj@In*,`n/+!Z7*Ft5@#$sQ3ZgW`0$/.ZR8$_)=N]k=ucauJN7B$ZN]Hj[6I(;in<MQ!'L07&[CcL];^
%on`SP5e>FsN+:ZoU@b:/WuH9dAK3LTQ(&%u92!1IW!pem\[.mQA`P/G['X;ZF&k.P[D&1.[5V9hBMp$+/XTR5UpM[(_/`(_.L!s;
%7ZiEkVEI'KpY=.pkGhHmr?7,*Bl?V?e(;0aK+DMZ?[WK#h]lBt8i+NjPmm#+TYK8@=!uL++*X`FbZP(hI1+!ZL#6h(/7l]40teIn
%h!V\ZQj7mo86VCWiWb/E8)V9AM"9"qD8LGFAq>A3R9MQB?'F\#bVrDmh/!R=*!'0>kfL`e?.k-qV8[3Jodt>k:>X\]7U;/)[Fr:3
%qf;&TmR[TZNnNbIUGJAW$bOLJ-G4?@740X1a,3C:9rVo#LR3j@7cDh00Lbu;Q("l?ScEqe0aa@06_C[`WLS3l>TYo@8.+C;0iAk_
%QAN=q,Bh0dmb3Q3([KUpIn+V,D4*\X=I#6kLmU'c62.;Gr2],3daIBt<&o10ikn(iMg@dG&J29lF&b(I(sn=e.BJNGK2GsX`XWX=
%]]Kgs(0a[uQeiXG$%7_jiY=s=9%^9$'1h4*9:Sh2lc/"Wdp?G*;]\-cp3Y1@&K,.40pJDE[!.@'k>XU@s!c)DXj;)8GH3nNL+Wu!
%;J.JOVS_]!'FE!;XKpddY+=3ral(H<Rap9C.BbX=l'Bb4f@#"apNOebf2IQJ(B`fk@:>+V`F9[<B8=\@fr,SbHVkhC\8JS/l_$cO
%'eZK<gXT]L2Po%<pN7I,G]iWe?a;\J!d9j*a&0p0f/X'>erY"WbQ5YN0S!f=55gWbR6m@uh)J5-)I.>.4Ka&?,Hk!t2Rd+gNSJ]X
%s2:oC,mc=O`BksD0f0tg.fAEDNSZ,t+f3%JC;@-o,kEN5mQn1^50AU.V//[Qbf!;IX!1,_]bC4*`5U?.)5k^pV+',HNh(_JJ!B$l
%[21LeF>lpVIqba622t:*>PV3Fg,kqbAe5Z*8f13]+pON0JdOg+AEf[Z'ko597JMggc9+aJG?0p8_cG'8l8S/.W,@e.LJT4-`D5pJ
%/M4Uo1:>qs1s2B/-2b(D!KOs+2s7>9'GE\4Zum15Fh#!JKW0-;Ar"VY<=ac19iafqifnq!@('"Z4Qk[ML;2KF=9GnJmLY&"Y4TqQ
%5O&I`oA0e5*ij,1RSY/mYA5$RJN>Z56n*IC0Z5:2.)38UfYtZ1ShCY/C669.a?\pH/N[&</ie[`,WB@R(;^?#4-R%U-*c4mLc-'7
%,U54s:s"?6aN,el\QOQ%"Ue;h!&R[mfK`a"N.-ag7J%2:?]pV6@i,irFH%hMUIJB?!7r"WRMrjqQV=;H/3+[)e$e=TE+KkD!`03&
%;]Yd*7`-iDgN35#;-qZ+`d"`0icXa8oPa@mZgXLL*g7WJpDAH$7Tb?pK=[u$^o#F/e:oBM]Z$2(oW=+faiFfrnMb800@>Bsh\<T^
%Do9gB)$N7-/*OUaIff>P6eF$N5H(rQFh"elo+dkF_Ob^i">pCZk@k%I"G7*8#h.:WH'6'%UqJ'&;b3gKnm,@G(N(>(b6=o9dI3=P
%T?."7YmF=[mPbm_<p%POf;*)7Rrs3]Vi%-_C^CC9/2hN-Tnbd-3AG-Z@0A!g:W$5?Rn_5E%3nNWg9^u&EGp+^VWE!HFoa.hD!`f(
%[$'f1nkg^84Z8q\T%N)fI`khSSu1_dZrYY0D,/!.!spgUjpc7MJL[3Xl$5KL`9jhBjT6sPMbXhFpB%7Q,cp(6VGpB^.65ODgFAkV
%cDb"B7?hpj-0^BY?=M>]G(,SJ:Be^:V!R0g6nWWA]W`KT4(l"H*ga8Z^*V!"6L2h#G,VOtaIt&*.d+a/XXu!CJka^q<[h1U8$DX.
%>I-`$)EKU5=^bb]YOfeLfSCfpe(TYS[]tl>oLcfd=I3A'&]'GrZabLhDKZR_k&o4:=8NL?+l8G)<.d8(5aY+5L!UM&i1I#(4>E9:
%k]T"I4DQ=-jK6%S;jsPF,pC\[hlM'6_XlhFN!M,E!83/[i)>GjZ+sf14lneWK!WY1)fj$.l$:`G^'Bi#G*G(bn`agp5f!S%%j?(^
%*]Qk>S7Wd*Q(p0<-H<pn`#PVh<e\O[$0io2=a!T[c9GZ6N2gfP;<]aOmTI,n<&=OY@*aaNXK1d[AHH)r]NL"P^Y%)%Se:2`rp/g$
%hNHO*guKC-1A@lgd%+<JGh1T:V2pPjRFSY0_CT%`J@g1HB;H('*UgVPFr;Vh0Ts]/4fOchpZB*KblLNpKO2OpCoO:i3h_'EAW5l5
%dgXT;Y3<jCdV0K^4C<5s+M"A.SkV5k]A+]HmO2S@q[;IB,K)%]I\Y)tOZjO5gP`)2:qIhNVrD_L=SG^<\#eVUQu\08J%<d^At3YV
%ihh(fdKZ4Zec!5=$0P1Y\00aC]"h9bJ5uQ7B4&$HTDn3B&-#8:;rtsnp"/N@M%?YbfG.B09.AZ'OM]-_QL#nE&'?47re1B%[t1=/
%)d>rFPnXnYn80bP^]KCo5As$o8R,cUVk^/STft+uT8d^RME(IDgN>9oSa7914W])d:/3CBJ8GB!THl+2Ee8hlTaJ6^dmmIHg>L44
%.c&l0d1G.P>)dnW3@0_I_NK:T31a`(-1<'b?-dX'oJ4[LS!CRr*VC^7<ZX"Y&d?[UaRj`\-@)%Gn`&g[s/sTHG)*`:CgA$h\uJ#_
%QN/lWLqQqX*_,Yahf^FRRmW=-iOMC-e=)Y.^t#tZ_?TIW8H>5+$AoifhNfFs/2$(NZFeP-b50K!*^1Bc.$]T.D$4Zt+YOn#gmeI.
%Sa//)FEKI3_f;&M&^!@<Vl8&HI\#!39Uo=*p+g:='KUJQ+mI,bRiWKS=i3dUBhEHY-Q9-+7XDAc'20a@%)TtJ%UUAQ29\.j9nTLe
%^l7O\"&V]UlM"6(WJ"72Pn'7)*m>?H1GDK[#I@^aE<!VgQX"'A^smLQ<C5+&7)@@Te"]NAL.CG"Aljka.Hm:ec4CS:(kIL5=5A5@
%#5561@SNO%ckiUb*4/FW[;&]N_KN@h$uB8?^2Q=XJZ0EEN<C'p*1!N((-J*Vef1NL(4f!.\2"L)14kAeb7(9c5(3KC"<\/)(Wo5+
%G>'c/L\m?fR`ls@Rl4*(^110e;.$!1?QLO'6Ab+`O,;GrM5W!BIjI,8i7PoSHJSH:`12e8[g%Z[Wk0T#s1DEX'L^r,H:;ABSNsH-
%KI,t>_:u=XA`,8X&s[UIKf;&Q>-a)*UQ5HZXN6r*o>:hC>77]TBjTCSE;'X8.,dRra3#lUN1I[e?h]'j7j>I=n_>(r3=49&,d.ZG
%>t?0-dG(V8Wo;fc4X&VXTJt'd!k.Q?!fT2*AdWs0g&=sRc/pYgIHRl64L&H&G[Dt26^#bB]9EII-<ckNc5<WFl3P2gAbQrVRbS<2
%duB.H6XU&i:\T,_Mig)E2)`n+2F=bc"TIEaLdu%!SX*Q:,Le$]gGPV'4O.RSTl!r,@#iOMjuMA*)sX1K-8Acm'Vg%pNAk*D%HC*u
%$9iGY6)Ke9icQ0:$i&\OIFV:=Wpc;C>Q.DM7;8SeTrRD-NhZVc3AC4XgE@%c"*s4Lje1*mD5E:c.AF^-#llamjIbZ]_L&^J2,YCG
%^%00+T82@!`*jU;?lKY=]0oY7EZ2aZ@60UOgkf4#f(;ll%r!@1S>hPTa/2lfTn*@o7B)e?V$-BUhR%k7;RBgdMXuHW@\?MsGssB5
%)gbC^@kt1[&\ti=A[EJ/ZG6e*`QJ$ePLE]'GO$Ire+L:N4:=0^fsi>!gaKu#(9c%^P6p4$#A$@Jl-7nl\u)ZGjGAG[eA%&>E<^c$
%ArW:6oCo(8A!$j8GjVa&[(QPI,^D<`@OTXaW:S32[]-sHltIHL.!"<FN.r7Z,>jFr&;`k`P=]/,CJ$UXCiQ>`S3:[V/)!Ytem48o
%6<Sq/%Z!_^dn*pST<3Nt9fZ0GcD[XtFl]'3U>6f2HBk#q<M$]gFWVcO;,*[1R1+2C-Kl.<&$6/SX'.F)@KQo9c8t"a$p*Z]$%pB4
%EmED"6B's5\Pm_h%qJVop!qUiRl:DLh0c/qjQrIOLr.51@AO#2&ql'7#2s$2'RjNp@\I6CUq"ENCHS.6knAog1SujH[&=/%ShD)7
%KL'.^"G*T@NI)L4W'OEh3Z(8&:<NT)e031kMQJq::W"0*d&V2."G5$i'h)AtmkEiQ.G^F-M/\`<Q(7nqZY>b8$PQ@Bq]mU^7_mS3
%WY@P8EB].!_CCq+Y7f*j33(<WVHu`J[\q&?WXaGr\f]"UcbRN!n8-BV6.3D7(NrKDB^2S0VrJL'R(1m2hhedq&:K50WS.r:<Q$J/
%YXM1FUa:t.ZaYj1k/[T(qo/_\Xq)M8q@AIZPlWQs'd"1CR/h;/_SK/1qZojH1)Z-G@.g*]XW/:r=E;cIY_HUi#4P!WR/1&Ben6NW
%q!)r(@p!9Rfa+k8a?K/fJ7@Ami7G<1!J-rD-*SM-2l<=kMn$R*l-8391(0$.N(U^(L6%=U9NtI?_\$_>j,*+(N4J5nG1l!XAm4gN
%#2t:^NruC;*suq2"ND]<U\I$)2r@5^\T&fE;FAa,YsonC`c3VAFGoP;"ncB52$mn^Am'atL^E1HBZ!9l6#!;uJE4LRDH<P#TEQS,
%qF&ZJm^ar7$\1Z#2E`h^UlHJ.\Z'ZZSr7IefN1U#Ig"o"jA''A:u0!aa<S_Pl7m+qCK4:ibK`++H5Z%B('0`?gf]&7DD9t(+QVCX
%L0j#Z/Ni'J@s^V?Ms:RcUjl3<UMuC4G?/rq'$p*J];3__0hkhMCg0Y\Es<s9ACbc5?oO?uEd`J,K8LD30#3cAe\u>\(ihKLD?GMb
%b.NS("R);s--;04i8TXZC>SUqC<E9gPp.Fu94TX0^Q!e)kf+r@,U7iIPuT^P*d1rkc?Nl*7,$^10hF*0!>:A0-==V4Jnu)QSjNYk
%blG-t%DT.9JlcAuh>i4%A3*<N)BMr8Z2'iXg`VQe,kDeS_[KMla2`5Ee"JO+1a3>1ASY1L-2LgA#d'J"(6]*beqYiS+KY6uY,Z:c
%GHYD>H2q9);U?[gl\RY+$dM00MiYVGkT&*2F/fbLreFXoK(NMfRG!>"[o911^tH1l5[dJCYBUAemoRE,;nP]c%Y7@!cDk&BirapY
%3RPrre.L3VN$HD3\ed<31joo"d43^,!OW!?=*X?!:L:'#0nN.'g2<GH2@8lS:>D\GEhnSp3q$`8\u^3[mlRnKg"e@H?j9`WIEJ^\
%Pc@'nR,_#nerrqj"8o;`UbZU\b*pNtV3Nsn)0GJGR0&50DtjH[:.]ZJ_P?&66%N1GDS4G''$50Q&5M($L9&#q;U+Of5fL!:f5hdQ
%>2P]8chFG7a4c25LsOqGRVb#)8n7STf]$;cdo<#kasoUW"18?:,%r\M7I8dO%PS$[^f36DEG*:AcfU"7l$=t8o#PECUuk.\*kX93
%'u#nFAg=6F`$-LQ)5$[t"!3f2k"74P2;B=7=p1!t`@Sdq),,bpAd1nP%.C``LCeF0&\Nh?:bT6hJhpcFBU+r[SWqN8]nLZpm3JF7
%Qo0IcYB&b<.H3Y]NT'sNCPRJoC]TE9a8jKe6\sU#H47Sp<O?P)0qI*dFXJ!'m&SY\3$VYa3#2,UjCsk0F9JL^cI<LMh5Zbo"_V@`
%fZ[1*Cug22@Ej_i<6o?4GHI^q#DbsLi7[RP5[C`c2E%-5;gVK>`Jtq7l9\WMo)2`k%JSO)H<ndm1mpCZBK*\YO6ZF+p`OF=d%!Nb
%:u4'8Gu2K126NVq!bXBJ(60=W2/#[[=F2$`-W<5m(mb?hR&eL)h=(<8^)9cPRi6TV]^?OO'pmuaP`Z'V+OR`&G<U]#BWb=4AuC^R
%WmV2SXp>2=C>O2P+Z07X#Du"D/"Y(0[(S"Id60C4Z\:<EAe0sBkT3?$%iZ[ZrZtlW"SuMt5\1Pk=g-tc2T$3d>tHEqRnV&m&!\_c
%B/>&&qCRjd/Q*[W3E4'n-5rcaP?^8-]u\=Y@:\n<@%Q;NM^2&7"Es)3(nM15/8Lr`d=%p/HneEtn_7B_D#,3g<*@#773f6%3i@<_
%.3>8Lbi^PB[)ZR^^9`,a5f2_o@d?l3(SFP!T;F>K"?,(m)/-(3i,VgB?JL57<('o+Z%h-,!4hkY!+d3*V\K.8b/9f1TPI[bYd',S
%d1e->X9if)?Z?*G.t-94=VL@J/tshjP_+5]^26%n%^I51)hUY%U=H=/aS*ub$>e9^'0ZMU7O:IQb(@)f.ra1W*Y?QLX%LO1FYce0
%BX4Ym.?+1a>ST$2U/c?r#bLu]]EFC]MckC%<=ea*iOP2tnc6mVNUXd!,=YfQR@@rG#deP4R27bJ0hXDrl4ooD'9qWr%ae`]ATTlj
%#VI"Jb$-,T)Q0$.K1G.hV0lhl!CsR4$K2=OK)+*LTE:cI++!E]i5QbE(*.p#@QG>OAqphm%7[`?(+ZWjE3UgCC9]a51N-dclsre>
%Cs$GT4AZmrbjHIqh8e)2[X3'2'b@ANA%T3=1B8?Ii\Ej*BR/p%=Y*0CRB8/>D8jZaa$rnG#f`%[F%\G>i=o]4:6Ed`-7,n26nXcW
%,(a_3B#*>?k:'h)K=]P^41Xd$Keu=,;s(be\Yr-cC/tNtj@<$3ei&F:cEqMRblD+NWe[;3(ps#SQFLH`=N;#uKTUg+gUY0-bYJF^
%9sZ;8JRMs%.N?*)nDcL\/^3"o[bulo8n+@uYV$a^]F=VM=/COSWUg"!<1r=L=P]]F8'?hnSf"U'@1CNT$##K^KpHFRQ=HdpSB/._
%9@_MV-J[):.81R9T.7fAmhMG#1::rGGFG=/JPPY,]*mYXO&20J*S[>4gc6YmZ1me!7FMEC7ab.P_5St8j2)XC)"=hq7J9\9Ci:ZI
%j[pTl[`"<sD$O2\M_'HAL%g9s&hY!1$&kf&,3(D\lLHG\RGANn13$_]*HM^'=jG`QOuZ5L``bAeLU!2u4:.DDV/1,W<eN6he<hdQ
%;p^ne39"l[AaN-'m?MfohA]5R[@2;8/33ueI$,?Y#<qE7$p)YM-<@oO!3mt/&?MQcVq_en>4*VWPF:h8'hBpk4Vg,26%XI40!2Nn
%$q"i3q/$NB6*!tGkd%X5#0V0W3,BAj&RG\rZW&H%Z*TqAl.?dXcRh'lUIm^5nj5/5elh5se>=5nHH[Gh9@PAR0SDE3a>MCrLVOWX
%A/T`s2iQ*7dM4b;[aGcD)B5d+E@GAs!Q3r,L.+c_Q$ZahAj-l-E5qTD`(gcA#qb9nNd:-NX62V-+X`-YK"s*J_"RmFKP*+2$QG@U
%g8^tjWVe*9$Bi4@a*(W%Lsaja`4`Itc0El><U2j!04Q4`EuJb86`e2+Ba.)/gcC&UFOlbDqI9\-dTFf7L1a7pPZ@YWYmiE?@L+^j
%-B'?AP&e['.Ufp&WOq0^_%p0:b0%94'ta8uNJ#/eIq"0R;aJOI/0fMkG1J[K2$(B,H]c<3Ebpie6Z@J331+SH/\PW&$dhgjrAj)(
%W*3Nb,I6&Pp!g-*mL=]I11J?Y#j`Vj`*'D@XAkE:8aIOA%^kVaZFacQ"ZG'-E$q(Nr,TZ'(p5s5=rS+>r*u<dZkXJ2Z>TQf8fQo#
%.6JbO/la44ZR0*R[LiSQE_Du=)5.IBh9rp-V(j6j`\Aoq\s$kAU:<ImoZ:;g>McO:_Gt1]$riFb%U!q>9KoRg+CW6m%!I:b%0O4"
%;AbQQE\SphFdga@8_>^sQD>-J95,TYP6tKj5ZQT0-"57f=UJOm.'q,g<XI.$\U3chg_hh:Fm="Q&WKpmaUcho"\2+`m?1Pr7aQiS
%[`C3K3K)^gJ^/75"BK))6PEqaSJE#=b8"r%b*LPJH,EJV>I3riSUXA4.ZGSNZ7/G$-1Xn"ZW&N]#N^lCra_4:#uu-(W3G:,`,F).
%NAgHfL`rgmi/3.*!PuT-Z+Y/D;&@f)Z5DGNmj;##Tj`ta#N"_<4U,`B`B<V!r'a-&&.0m2:4YS$S.n=061\Z@WpURmQ>XK-*Q0Oe
%@inh$TopZ!eLDs7Rm,o(>#NWPL.4%*?1N!?j?q&H2S<ToJsT(3"I;J>gpYN-g77$EipW\MW5m4W7rdlc>?.!9T4a$_=396Z'Mkgn
%hV]0Sd*OR$P@a>7Zb*_jc9tIYOrYIlCLFu3qecm%]fj-B=*XI^2]eG8\u7$CHla94=XmtN8rC4EU7?'lc>F+TRB0Y*\_icH]N1<B
%?t`RaA*X%3aJA>+EN-sb\[dClYYEN[;:i(-]8j/*c/[MhL#63u4H`]]DgO]cDC,k[4,%<G=btbgc%e%.1a?or26#4W8o@1A*<MN4
%pJsZq4BKijB(e?VHo2kohC(<=gBt!&ei'?-,p#a"\MJ1^B>7s5&&;ohh_];X+5!/fHQX0-2f5S$$mr%)g/Y/kYuJN]401G`T[bc>
%"lWaE=`tn<RmasGCDFR]CB([o!-bFhd^]:o#-PC-.@b6"]0R'%AM7Yr/`L]tjoa92;8Pk`?,/sYC!F0'e5(7>+b%!99FpZ-S5CXB
%h-s-eZ7&ji"PU7Y)&7P0B-O^MLG("]1cFr:<p9T.k[j!`,m):]bbdj1oF5in\!b"GU5<H8+H=?>9r#n:7t3#.O1___H%BWXd?XC/
%0<*`3'8pi<S#[Ca.O(n3UT<P`rb?ub==#?,;+?9KJ<=L;:J.?N>q?S^g"*1e-drqAq73=L-<Eo@_g?UqN7*G.`G4b+i9!2mg2CU_
%.!F$[p/X=J);qd"kFusU$oRAhP0KhOg<*4?/8A"7mIN)(Z7,cH2G02s=fV9+_uVJ8T]935AgbSc_4HVJ-5N5'.;"05hWd#9&l%6p
%!F@H!b'ZXO>0lW244<lY9n:-IdjtW!e$*2Y:02Jt9-//PHVOu-1J/Fs'"]'4.B=sD1=%I$j00E%!'$n`QK2B>qc:TXWCq2?EMaTW
%dn4Ta?:i@tbG"Rl/ZrX8fBT>''P"B[]Oa"^&9Y_$WI.LulL_[tf^fr<\,<OHL0Y\!*"?HnEZZ0U`]aB!K'lsC9aQ.QB8b?R9f#1+
%j-'M6H$(V`Qnc?-MiH,*9Md!'NFQ^$:p/A<\8i;NW:I"\'oN"uYj&$lr_ms\m\!J>5(Y4URWY7G:md?Ep;-(/:Y.ND_TcFR;Y`uN
%?dRV!jG!Pq)H@Nq4eT$9MuZni;phTg63JVMWbT*Y;"(2`2Am[EYGI]B:OpQQ]f.`k<Y[`--XgN5XCqmf$N_E:e_*"-TpN2cg5*F2
%0SqQ<F>C9Y<k-9S!32DPJ`HD;^_YJVWeKJ\oA\"e\+9^+GsmUk!_,0n-827A<\qlh86c%9cW_S:Xk?6M>_K=rQ=5k]Ba?OsbRdXq
%bFjY[<^O-&[`"*"D)oYDV'4=H!DTfjZDY4r&HqCiXd4L.rF#=g'WjmE:.d">e?).f1U"-p0*0]_GD[0h#a?-'8'`Xb<<*_SGS!\O
%e6ZpN/(tBE-lN#eO/ud_+:]R)3ERCsJmR+!c"W(;$9!*kW1))/G#lT_Z/osR_'^!s4@0oUW!<"LFErOpT)$Z\,,BM=Tpj5d,?r.I
%:bIhC-\h-3&rOK<D\f?2.aBHuP^4*\n3EJJ(C>,A/HReZWiVY1>"$!rBR<4fh(m\1D`is*^OD)%,TA@!TTZ?m/pt:0I<DnIL9*05
%UK(Z\LZ^M&TnQCGPufVRdggg01ipYb(sh@.BFlgSg*'1I;R=rO`eb,ZM]R38HW_n$`d2S8Y\6!jCAA-K)r1*_"Ll+mi]Qb,ofcqt
%2gQL<(tJqi0u>Ls6urn?R$)(ZBR1R+X%P13`g!(^Qd$[M*:"*/LToh?!T%>XU%_\@@igLWe_!a>e=/!BJLZ=/4Y.J&K6`]_.$=f(
%3iZn=@@5Zn[1qB*%B8'ULL>=MMeu#e+TT,MUi\KuE'9aX;W77[/]q(#.4TDl(=U\L;"p/G_#]V$j[0eu+GUm<@?XinYALbSEh,iK
%Q@P:).'?GJJdS0&`;7WLo%15&Uc/bbUX?[?+KUII!.Z_'!D6Yqh70fZ<!dcfOqkCBH-p]_P'-(U6_NUg\aK5FeWNf<-P"q"O^fUt
%8UV^;8O[AcSF9Q#.m\;fiF@dHDcmt7/3U4B6r[om%g">s98/'X6ML7gU)*f<+)&#H9%3hHe>!o$4V\,iG,A3+EU*l#M*_gTCpjk0
%-<=g#RUPAGZ<h:cnF\'*)Ru/,jIs];)D1F,]#0W[m5.IAZY6VMOi>(j,itI"*D(+cRWu0jdG1d)Z"Q"o4oA5'G@4uF68GOeQsXrE
%el<:Q4uEk!n;-($4$a;m4TQ1G?1/79qnq8]VHB^5En3?rHg*j7]b3ogc;kern]er<Sro9kW]R38Wl%`C(2qK'-5aU+m#c0V\^!V_
%$6^CNVCYZ8qOurjP(:JP^45-%REaZ<1<0=dcu/,YXOUn9'([;)j,R<nUWTg\OL<XDk?qHm]l7QZhVY8Y9Sl&'bItI8>joe!p#o4H
%P:6Ah:d5(9LD2!rd`mrR["U.BCDGA4rnPi9OG\[[RuNTdmhNP>F\!*K1N-XdnN8B$\[sPU@K:R9a5`QJZl5qr.-?sXc,`h(Vsp9*
%-`oY<VgB%X#?W(rgR$@PjMi7J7!OjV'TIs5q`1C<Q^bN""bBiJdKX7sVm(ta[&G3@9aO8;`aTlMBhMI#2CLTlfDN(sjhC;'@tu;N
%'$'t\Hnmd,VW0j5FJ+YJheLJj`:i/qP)[B$G7"R%.hg%[!h7Jt[7!F-_kl368_gp@Nu>c&KaP@$mhDo>Ygmh1"H)Kt9^0Io.:S+A
%;+S1?8ZFO4EIHoeHmqK@&F?E,^:(mQ4V4P8_oaef,:CbU&.2V5B!(fAg(90'oHs6@/j9&&SUIf>-2FG4p7t2o9cG\)W/bLV@':V+
%%9l&L0q+9ZXO%l:2VGpiK,o*7#$SA;!]FY*9#B8A'ojH9<2o#h*I9nLme+H4TmqXW<d:OK[VidI)1-E/Q+FED@H_qOEn$H&^+U<s
%cN>*8A?F(umhDq8e]f(OLpO0dM6o%t2-+:$aHFKlY`UfrJ.Se/]kY.R/9C9@#f_M:2"b3c"0GY,="=kP8hFdN;s%8]i'f^S<,7sm
%gVE+K22@T'rL!%0#dDs$2q?@6(uA1?aAS?:]JWAu:3W$OZf0Ui_sYrVNa\?%'s786"_]M!R[D>C"Jp>8n[DtQ\'7MfYYXPY184Ae
%i)U%mC0Yf)I*1AFlFiMqXp99T:Af"[l2XYEd\a:L,7]j;C(2?5;/'T:a=iOSm"Bru,P4%5*%]8G3stY@+5FR?q0:5-Qb76IqE<"7
%e%\QlW1d`.-jVAeZ<GqD_SB!Z@]uq0)Sr<5K=$jJ!A0;%nD.XY5:EnXEf?sQ]r@$TArZpE>*-88W,Xf(O,-(+_"845neg+,7r+=?
%3[0_EA&*mCT.L7N5kgrfX1^j0qCCcC$lp0bFuO"Y0eb[h)%p_l.'0h\^[Ve1+YI#f;eno5&XM'+\A-WiNi'3@gK8<+>)i#f>C#E`
%N;!Q/)NnDiGeAaYHW.C%!]:q&%H/gjX0i.Ma#,lQ\(JqL,mid8$_U2?UWu0%B@CTK!f@kGAP"%N:#F6&*7*,SVIB[&aDEP6@78T(
%9`bZ;7(jgG"X^nr]s@KdfQfr_RUh<&H%LsS:uX7GA'6]Hff6\g,C%JE7pUsu'-^82jdYsN!;k;Oa,RJ0)53D;[_Y9r\22Qr"!qo[
%,lHOVfa`RJNOH[&:%2WWC^@WOb1@Q$Y5B\JHiWnAe4K-uf7-VQ!NqGW8N&GNYXXVcPn`2Pl;!Q@.(i]p4Z1J2Usn92)/2(&g^c__
%dllHcZl<5]#ZSRTnD]S4@GY'9&tiJWhLm3=6+H1nXqWMd+*qj$KpO.,#[D,l>QO*aNbnd%AfHDS>a"cnC>.s)7W=[NT]h5b(.NJ8
%NM,\1)OJboYZOe?lR29=e(EF%dfA@\1T+pj3s(]71i7l%4j3^t-l-_e\@*l%l?5Le*;MklRUfCBmV,%6.hA^t_,WS/:%PD^:UV]c
%*2rO85.]@FFWpSs9hR%Rf$?/o4)>i;U^;RA&h+[i3dV1'9c-[h8_NqX[;5(]J7/&.9*r+I+41ppFsjiEP4F,A1$Sb9IB8n6[LfCj
%]5>Xhh9YHUM&WGkD'*nEFnkZ.2g$edVZ#!nqL0`G=_WKq?7Z8^4/>@KkuXduiQKqJSL=0t-TG#B_b1#gM]fA+p?YF4Fcm":%q'I%
%N!+IRfGaF64+4BNiX@6S>f6bJ>JX>N[=g.k'?:6[MZi>%GH1<Ah;c=(;PI!W\cVD0(X^p`#KJC3(HW(,]V"PL*Y2\a`ZX;]/QiJ+
%en;U&Op=K&nT5d7nM%6::6+<'l8k8`11/&(.Kb&\4HC#KA2omCRaYEVmDEX]Hd%!4W,nZZ]ua($""u5&9d3BNfbWXgig]g*)D134
%eq\.93Q/QC98M,Lehg&ca*,Q"?s[+n>\%'N^+Ue'6&`UkDPo,hf>]Dp-(7t;k\UoI;1)lu.'hg8eDi,d'X2[:Z;">fb*(+t*6)#1
%LcMhJajjfG_b(D`lROuc*jWi!XlQ8'ru'\*Y0I,`)K$!IWu=bEj>=j&it^4JQ;pVs;"(g?]2)p[Zd^]bBn5VT(f#479LPUL`6`!"
%:%tOe^G=Z^'K=h&f-D^/j482lj+T@)it:=PKe7=ij,*u(QM5X120jekGP9O"X0O,/.?X(CKGj0HeZtaO?eQq@9],a\R\gAH@t1s;
%.u1u`]1k6HF;I/rkB.+GqD"Qh[J1)A@,VM(/G52ZT?V)l?&W9M+<I)hNh)QIS`-,';<%HY(EXc3d'<h/5Y9JA'.IH.#]RBc_p'UC
%jQ>7,9]$k)N,J$,c#t+^/N.FbNf$!VC`P_8,e,urYdN,iN]E<VEMT@MUs0h6l,]%lSLsg4I4lc,"$+n5+,'7[E6G/B&p5=hOWS!\
%':FsikD;am)$2DtPh8)"Heq@hQ:ATiih4SecjQ`jInAUE-f0f9eZBSKdP<02$lCS_jmTI%H'`"'TF[N(G`gfd5:MZNm9eoDPKc:$
%$[Wq8e.FUK2Vp2lR->7/hY\"TV?l!fJ%$oEF*=UIa!?7"/"?+Ca7/k;NpqbYXS6H5BV&nq9FdiA`H+9K4W$UaTG:AP;JQNS$tI-%
%MI9*/#HQD#A*I.FaEloGEg(SnT$I-+Gj`/tL\DUh1F*EG-T6C,h<Rh?ORe3^r>qSOKDh$q:WMt;T!\c<7sP5hNlC9h0aZLDD:QT\
%"-YWGY.Zi85P2S]@r]qATOb$VNo>Z\mQ/B\k.9YuM(QL`6K:\9`Nfe&ZUmEmMq3\tC.u"@D>,]3HqJjsgJ@P[:i.W::N?%_)AcYl
%q,EDH@OiD$l+8hE3C_J7]q=lc;65L!<!TU15AQOTEWWu0:;;bX=n3e>(C+SWcWPI8l&C=,3(:H0Ogjg>T>o^IfuIu;gafB`;m94a
%D1.?l3U-qhhFk_PCF&OGq>DqU;pUBaJgX8\R;]6$47Ub-SaGmj4$S`d0FK:,P)#Q*0)BE_[rXd]*(+,^n"lY)cJ\hfqlUB+RfYAc
%cu;_VfX(1>!Y3k*=<);D)J"UPFb]TWCdHe=@\ZIfehpf=k*Ddp7+HD.6lnqd29DQlPq-Tgr2ffsTpq"s_rZ(hUCUia7u+9CQR>tr
%ObYaF3uJI)[<FB.+73C:$-.:30b!dij*0h_"LcSc@GP_161/7m-Hfu:Wf8OZQ>u)3SU+u4:;uTmg(CkO?fg.L\T<#<$;VY58e+e:
%R8V_ekQ;MaAu-0m(aNG6LQf;%7q_\'QdYeSISjHEUI.':nG7j.:l--<d?Ig1WVT"[Q5o0.pMg.qds-f^:s5!)bl/@JX.5rkVVZ'%
%L'+C_E3"<o2m7Cd8XXS1&b*;m?kckMcsp'GqA(Vg>X#F3:3qoRK+Gjqb1%t4g'q1(]B+90bA<7(HhC<1XW/r$2n6j"P@P#:Pg!j?
%QPV`!K3O"%P\S&0*Zp0MBRaNL'6g;tDodK6$&)<2Ob7:<ZdYHca?rM\'P0=-V\p!n=sE4,`L.i5C$$s9*]6D+P`[q"j]Togr$FN^
%3`C\6,gJLe1Z:3&R$X3+S./i`fi&)>(Bln20p*h&SSPtZB)C`=-CaGEl/%tKFN[>VE"ufe*Z#W2]$OB5fTD5K<&^7umHKIr0i^as
%BJ2/AkJQOVnq)&^n_Rr&c`*g)IE$7ZZ)9T,gMoB7dr..ED90i%So+K8XCB=RjrA'SXrcV$Z)hCCMu#9?[\O'J[_q765uIH>oMhHi
%%g)uZ3NEgG]2@+-atVjl=Pqb*,T;Wj@M(isZ\VecjJ;tYQ_X"k3(9B<$H]-A,M.kMFeia%E&d`fWO02:Y2SHX?L)Ug.$hPgC-n;`
%IUA$\2m#!ScnhG6BF*Rt[:\8?rX!\o?'O+[Eu.`H#2^ejqB!I[0=%RP4,TERcMW)D+_Q\PLN's8pJ2G)VHF$tjbCnnjB>YLR,;3?
%8:AqsCP4UkOS,!q'8&i,Kt1hu#1JLY4h4F==Ldr>""@*'J_W*jJWc7Q^q:*?WKL#7D7bS%8^f'q[e]V[O.#B`!2da+\MYJE>?q'K
%:%Ei.iu6>S64_><+bi27n3)^O]AostgqtZY.DT4?dd[TTNWbiXR3R0J0_mK%C\OXPKAE$cZ8)2Kc4P@/qpVC1/F%liN&!:o)FbUV
%P`?-n+."`OVJ.?_"I*WG`0rH-K#KP]A"U68UC>!./tZVrcl"!%WV2fU^eglV]p^3.;)T/8'+&s6%DUT9G7'u1q'gNTZ]YXPR<#8%
%QFO;OVE8Y0/U+M0D-Xc$!Bq7k;nZS&'_qV?3>8Ea*2iUXpZe=^8[?Ln6[3OS,.0@o+jRmU[#S_-1Ifq59hUaflfe/#Gm9.%'0Eqk
%U.O-\BJ+UZEZAVtoRoPF?hMoaKNIl5;Tn]GF(:(5<iCX9NRKP.fR^$$;ONSo#+_aJdZP2(<L0S0KH0uGr>'Bj?R\18L)q:DApIXd
%hJ(Va7\nuQo8cdkE<eC>49KpO>:I[3XkH5Xdnjct$NB+Vl6)Y?(as5_0^D.;]tr,6mXGl7Y`Qpmjb0MpHJr#3&u]IYd<K!(A_fj<
%B+_&Sb_Q\R03qK*6!Os2UTnJp$)Fu0fh4P8fW>l_Gh:Q]=*T^^UQUPdB1\@WW-4s@Sm0L)*lM_TWei9D<06r->8.sUZlm<tXBO!7
%XV*Hn-(g[d'BPQ#,.(+RV(/__2iD,S7+TPjH0H]!B'h"gBQQji;ZbcOZ_`h%:i1,7?'jd_mbdpC1eeOm_nOB4ZW]8ra]=gIWn@l0
%9QULtck7WLM0]G38\#P1`b%pqg=TWbWX0JYiO!m^*G&DspR[8?jM'@f`sYh[Hb,c^BOOt9h!XT:/Y:)ihT*XlU[H>=P-,t%Vh/kS
%qbT+FI3?rZ8!rDToe(#"@5:FAmDQMI?#?#CK8Bb@../J\PelmJe?OA#V=NuN3.I@PRp,sRL70[XD*iPI,2LN>O^=ejQ'D9ZB3]]I
%8!^YT3<MY"/csVb5rS7FjmCEic,qCq$`7[S*#3PZ,8[Ep::5mu`6JL2khWe<mLo`NG>GNChdfp^q/>-?E3S"1L4emmR;T@eSig>H
%n'ge3bkR=W&TKp.VY7?MEpk);/\q%`cBcrl0CI-q1>H,B@s8orm:R*uaOD4X,`2Ea\]Zk_+i8[jgLWV4];N%2G>GUU179>T'&&Da
%?H/sdhdFB@0kD1n[C>M;]!r\<45kEm^3<A@4C]c4i]<Dt#o'4PBTL+XVZ^I,OW?qpW\f\9qNOmt`!m0RGqsQKnKS]Y2UA\<fM@I[
%i0MV<@.,T50Y1E+72s<cn:9n$ZsqfKa)i9fkkB=1cAu.#WW;+(N=4?%heT;ah@,r$@codfpOq^fMK+ElWAC=@b@h2+S6Kr?0YM^*
%C692.>glVi&1E=T\?YQ1g:s(N&_NjposrK_$Vr-cgkl;SB%3PX*Ard%lt'[Y07)RNg0X4qOK)lQ+XL02f9Vo$k';*]^ggYbia\eG
%Ae*[+!^%QI0gY`4_ZQ+s]f/@IE,u>BCQ."?Cci<<&lZ9Y`5-H0)tG'%ag`$HO,V>#ZUB!VA;l.']^itqSg[_FBq*)TQNi4GGoO<D
%(_=1-RermTM"+/;D@fCE8'WGLcYfgbPao,R1\jET9g=`d0:m<b95QbQN52+C*Xmi/p#/GV$e7;E`<]YMjSTXPI?:711^d;b4#d`I
%jTM^1<k4IfX:,6SP&==HdS`!([n^!rI=I+.aiV(-*R;oQ0_;'YAG_Am&^QAY>0"9YO!cdR#>F0O-eVt`YUn5YQ\r8Jm/m.$82!6;
%\>6>kYhC#)C[.A/a%8>nbk+M!q6:e-PbdDqeTTa@cs,Ge,2P4K[_.2$T>"8!Pc7I3s!:f&&M-d@R,A"Dg"&r(!K(<\6uaQle46I7
%Q[A&RZ"Mn4dPhkTUnuoHZQ;HX*<DUf>SV/flk44!'$5GrTccl./kI\J.K*B&`;[`fTUoR`H>7nrTFO_<ob+mpWQ>6P#nNJi!9R6m
%$,LSB#mD<@.X5)1Y*%U=ZsTfsRa)2sRtl4F'\1Z$H&0f6R,X?Y?K/@k`dE>k?fD&aFtmDV(T?P]4mPf_<>b/ESoU-9.4lPok2hr'
%ooQm<2UWp:F]'q)Y@"WfGe!+M+MfPT$)4$,K\4l4:;(9G*o@qpK1=S-D&hkAZNE.HojYU$=+LW;rHAZQ1sH0W`&F-&HjYT2%>ICc
%",0J+'4I#%7aUm5UUDDI99km6jl5X2IXJMS\;qWc?Wc8.;4:3qq?e%rG8>Y=&?&dWmE&fTe0Bn+Xl@b#R,fU_D7M)]["1;mCD=s+
%gHFgG->-<`NWA[A5`:iQ:/ECPTtmW'a%42S`1h#*iOEH$.h,pp4-Hli4CGk#Q:Nno.H2LU:#GdRh5&R!N/t'[S:tislp=U9'fHA*
%>mPO(1IZeSC)_H0/eVI.e*_lLn#(Q?XMc,4ZE1tNj-h[3*A9N]TKEVT:DW<6da%)b8i0K;g<lY>D8SMr928UVPUXp<psXETfsU::
%2stZ%g@eXD95IR_D2WXArA&ok3[hVFkf^\f!B^d`h0Z)=:X'8&aG$!S,C*Kt!lD=4Ri>)?&[qAL"&u'o$c_k8S%.*l<Z?63,TuK>
%^RK)VlC1Q3eV1hH=mGRpmEW3g`D/qD,L6'pAulU'La*dH<Qth21un&%Cm@GqYd#GGX81EAe;cIeJVpqG:"iE&'KofVF?e&RJXabF
%rk#2BEq5lAm/MBS@IWf(V,;?Q/u!')h6[lqQ.@k6P_'sPp6ijX]l)iLda<+ak1,1%qtm,fSf"/_O1]Ahf!,@D,I3:'(0&9>M4ns8
%A`1I@?Hn7Rou(&e09=e,6O,/jj/$q?SO#B0kM,<!g'f`aM`9;8^?ag&>*)Z64_FS#UM!^<&"bP:b0ubaI#LtN'*(0:5m7Vf(#R+c
%?(W&XJFJhabcP>;T"Yp*XKNqFoDqG'i?$\&P[*6)r&La67&:95&.ZRbfkbB^7.[t[R7lOW7M1=@\$&ZWkQjVW+$k%uesYSRVph&]
%ak!/0O,'=pL)ujWK,6^,X@IQ7';;<:kb9r%_#,]I;,<X\U+6i4W.hdYP]:\&U/(IjL*UfW,G+E/aj`X"-L7E@V7/oAP)PL-'M_,R
%EY*:\G)+?j`.k\%#FU>:FT;V0UHqAb&nQLs4h_)3^b-s]@6Nd_O+iT:C;rV.2f^9KPe;92"nk]UEu=O[3#ZC;&unA1M5Fk$*YDFh
%_jhY8edl*jH:*FAD^WLBaDE,lUl7QZkuo\dop26_/5WF]54NX1\WYb!T;WqC""^a"NR''6.E"hs7e)tJm3pOfkQN\<)UWk!@d!1h
%O'SJ=!P!&oE$k>Va.Y*Z!OpKDPE<,rA9'sGS&RJS!E9MhK;e?aU-N,o$?];1m>P37Q:FTK:2oNW<oh=m>U+5b:nqa)OeLAo8s9k:
%H/^9_/R>>123TpIG/qrVg)D;Zr8=he`'LEAH$Y2`RQCM)a[Kt[bpRmc,#`2)NX',->JVm;`5uuDnj.(q?/?bG7ds-JM)snPYmI\4
%C@u%BcLepR9]P^gK(5+Wd7+-D];+sQXhMdEJK".jg1#,+CqAd#Qs`4M'?&J:Ua)Q-j<AndZ/]hdj^If^mHgoYb"Lbm]G]$:r2]7/
%P2/7DY\5LX`o)4Lr`'CF50XW$?8s?'0?!14M,C2OrDaYrNueXd<#@<?Ed.*4*??$p=47T[mPWqIguCp`+LO!7@Gt,@^RF`4n;(Bo
%YL.2Ni]P/r`P[1*Q&,tWWr[QdA2u^We$-+OBY`*";8nWddJo*$7L7*SM.8>lMG9LTDM#DGb#gp:/kXBuU(`J!?4sdd9e/Odp*H&#
%s8O0bn$6_'dThPjJ`!.K"sh*9X7DirO/0\P);1)PN==gQ8SE&k5bJDXm9M6nMTFM`C:AG%K7Nb"7!EaDfU7l2\?Ab_gQRcl"<S"9
%mLG=tC-M_tF^OKbGfoYQYrN:S_$V;T&0VY4E#.;A_3fnc#oko\%*Nq3X^r$XjS`(tDr;FWL,osW;.<h8d0*le%A.XD(1;Qi:VLst
%0KG2H@#!`m-3k;`/#GR*Rp^#(Lr[h%*$Y54S=0H`AkK`rFF*Io(<Wuf;RY8<-S\,DqR[a,RV>@m6[WgCK`ph7R9=!@??W5UBan=m
%ENEj#!/G_^-3n2W^b>`bCtLBEGH7l>CH0f0@i5)*ilFbbUN+S6=%*VLX6[R[:blJ`"IL4.0d7lL"ik?[C\sO";jiQ2[K7Ke"+csM
%DIFtTG:A2qC1e(7o05)j5o2LBgA%'m9FW-Z&_\X92)Y.G$oa"H*`B/i/ndKpVNu$N)^uB]Z?Zk:R<:i4#QE?oRWXO$"uu4O.Y2L5
%SKo+WX8SP;D'TaOa0rs9lDik^@MZgX6Wb!5N@,1&+_5n__A:KapqQDb#neE.l`31Z`Gh?:A'Ygk&U^Iqk0W^%&MnEU3THMuLVgpE
%!QLY(J2#YtI<s$dcZ=rCi\Hbu>!-R%`6OjpIST;$nKkN>Cjr?i3/l-71qZCB`aCHqc.E`r7ko[McARpKD?Y0c4\X#X[Me;G'X6O6
%'PTkhSF5:oSX2&>hk/uR:(J[Hh%qJ6)4Y)G:^+e3L622Y!/ADmWIR!mDQa;$N_P8#X%dWXIc[96jDeEa=I2XL7FE,O]IpUnd,OJ&
%G^mmW:=al;-Ti>?kg9-#3`W[t%%S-Fe@Zk&i.o#aU6Q0dE,Fd(*en5G7"/B[p%m=!\pn-T[Z^;3Cbl#$/o1P2=b[&\"tk9]g!?5N
%/-"N4WtAV;E>]eW*8^(C_ODB_d*I';*'>[9*QhF9C`($-gQ\"3D0]5%N7[:#GF!Ui_tfnTUa6A=@n\X[d#_t&8O&7OM+&#iXQFOH
%7SMCa6GHkE9fdulJ(OW,ZeN-\"Y/[I5<jfh<",t-D04^&282<6rdNaq"*_Z_mMr_u&0@>Ds"aVpJ,Hpnqs0mSqu?LEV0Ch;V'l"%
%g'LXfHV;YhSbFE_Pel%E@QTi"\/%"$qi+o<op>,+5+h$T5(C$Hr(h9lS7_oZ!)=E(5@PYoWGr$m$[$k*FPKp[2.5=5qnac4HAQ"&
%C=d-A#tr2"$V52*+0aVtk66rF-ZLiLRD]U.d_8s9`](1@n76LFUq,N,>Yk8`F>kSP+bP;dY]b4d'9g2g"DA@][2BgG3Xm#+^o_&;
%o8QP\OXNCi`fPR"@^.4Hs8O]n8TJ\q,L@6E+<qYDa!\,#B<+HX31r#cLSb(hA2!tQ@KR3Z"WjSGB6W3@&6qS'YQ3^BC&fMK+1ZG(
%#R6XW`6gth\;H8ZfVBFRTOpt\Y(GaWcY;,:g!<ZN6V+j:&hUfTQ]Ih+F"mI4b<J1OF<T&KO!L;e6Gs!,qVYc#L,K5;e"=S&Hmp;/
%AkB/8:-#X1-m#.-I>bZE+$j)==jaOWPl09g'Xr<+HNK`s[R!XbJH6bqa%=TV:VWH,@=B%6(^HeOqDB;sUGcRFok>$$oWnZ(Xt44i
%\fV*gJkuM+ON(^1^@at>Ka4f]BU,)B[,@HnK_TQ8G(U*F<"`n[)q!q,NS%-dZ(ZYcf>e93^7Ci.^PD)n,cq`e/J?B*RYX,]9&k?C
%q8,/BTo[HiZ>V<3Cc"e5&5eXT!6*lDkU+7TS@[Z`V:SmAZrdBdkGC"D-N\=-(mWT-@]NX],pT]k$qG9h!UZE_2#b3\BLp;0+WMW<
%AhdH"_sfBcW@)]4b95)$p_Rr$$g5XFjrR!P/PctJV1\9\_uU713&hoI]G]P6Oj<-q'+U+B(ODfLpgkFV\2TSL[OFYh>VhoI_hjq^
%X/dcu:1>^.WBf3QIVd3eKGXSW3j[YfX:_phOk@^nS8kjCA/5hs-1Jh?ord^HH\"]=GYLENDLh]+nRC%U)\9Qk\i%47LiL\6T/5Au
%O(!pJoq0Xs>UIk]hWMr,3pEQqTCd38-*`HCH^[k5E\udtTPb5Aa\50rhSIuBp\?JY6k:*HQ44o<lF^nh)Z<=g+Hu2gA)fMqMn_Ad
%k@P%&CQflIef)#M24FG`%V6>kPAYWi7QaE=k.<Q"kKs.2b`XmeWs7b?Wl5jGH["]Sot6fngBF^%p*oG/`Z[eRA4+'&8(NekHAXrP
%g*W@nMo!5j"h\p,`A!G2Cj2"Q$0\jk1%R/aIo@=pH14Qt1EfBHYNk^hX2HjSC-u(.3PMsF!N`,%\MaC(%jpc<0msIbD6tth07Sc$
%QKE7>.pQRTakmXo0"2WL*^@SEPHu+/2\kF1lOOITAY!O^**h@=K:<+3LF[]e0[]bcGJ4YjDXEF>#Cbn*kKKVP%d%%6SRF>fX3:']
%DhFFC^<FrVIQ<1XrKhC$Ba>=hSd6tH]*Nk>CetJkF>.OJ5G>A@^SWLK%MER:.uTXSi@:m8pQML$P[W%8GbHt=%`H7<'Q"q*_StsL
%"$@#&1[\8\/`b0(5-_[A\mJcWUZ]+CN@$:U!Mblh.*4I`]jrPik::M<6YrAGF58Z)lS_'AAQ1kJ;/"PPb9iT(ZV%/J(+Q4"5_DEl
%#@f+Dg?_FF$D-hK_Y;-U^T+VGK:4TB\_",IUe6pDUfUkP(bg.;Lm*l#IVVZ+Goi"sLH_Qt]@'W.GXlThs*61.;pCb"b:sC3_&,o#
%Zp,oU+LY#@s.Khp0$/N2F'KmX)6^:.14aS-*le:WA'r>,nVYAR7qeE&qNG2?*I9b.>`iJY9:_G<.bTm^W<W31?Jn7TIKb_i+.o%S
%8"_Y]IOGEa6P9Sk.Iip=(e+H$g4O(2;poTF1>(SP'C.9!d7g8VV\_L)NR6r9>+R+,9AeZmhFAe+m+/Ab\I?o5U-`aSfg?hp!5jUC
%3*=.q3&I:[l_R0A8[\Dd[mak\+6T0dEs.2BRb`*nj>?gD=EEnYiOV`\CrV:/IT?<b9$<'lpm&MWhA2s`[nE%q2HHu`f,q`1/4!">
%G??iG^FX74NDb0-IV%IaS?]5:H^B0YMcHE`B:[%IdDu.`^C]:uYQ]+Y$?aiF]62tJ/g1'UV[^/djkHrF,piP<17.IKlIq,lrl##(
%0(;WVXX)DsgCgR^Gs#(Cf4*YXN<u2CY3;Wd335D7.X!0LWL:g]")96r`OZ/nQ8!e%\'%h?),oMnmSt6#$3/^,jB/RZBai))=sEg.
%<=F7QE_*b9nZBk@EUc_hULdKs;a3+JQ.V"J2LW$^j'Yg,cp>f_Q7,WX;K61Sh5.-b>6EFc9l3fgm,]0WD/T@,TD-t\Z.5tGZt\P>
%OEQs#ELn`[\b.?enM%M79IEf<-MFm>oV,S#o8d$TN"Ol_;Il:7LNALTY/&.+cEMP*e'I,e%Lsc",\[uA=0Vu@_O5cN+df_aKEQ5@
%M^AR9Vr_n7n!6'[5YDplGmuTs4G*#j8hX-,NHhJuXpK;hDPRLag%=q]U;Y]WdG*fFksC&T4]`9$VC<%kC?`Uogp,imO5rh0a>C$!
%5t['dWc$6uJbV]Y];R"37_GqI=MI"ViMtbU^P,7g'']o?L*fWEa=2b+i,r^^V[_[DJ]tGQ7ntH:<@/@l?8TDq[Eron1h91bQG$aS
%>WB52KO[^5)i2HL`:?aC[d<=-D?`[ICf._j-W*qrEur(ZMIB/V\biKNFFF'H]bEZs.9rZODkdp9iWFsn8_G$F6Hg=if?%/sDu/9f
%[>d(e7jgO5)<MO7(8QsDfDfn&#q$4O`,ngC5(4UQqen7r"2J)I*kIAY:Tes(&T9,XO1_@;DR?tO,>n#WK^M!K(Oe@H=-3\m-/VI9
%a-%V%k@S`SE[6@eHQ-.IqS8(ubWX,<'D,c&YL0mpN>S>rBeplD;sWAc.*K(>ZMp?hT%p77*V=f*>U*1:!KfF@IEX5,5.9*8WPn<e
%pi?<m*D$ONNk^]5jYk?Q6if;p%df7`/L:N%3C>'GBUbd@GZJfD(1h4ddU\iGcA=mqk:RC3;UWU21tPX)/Yqm,K9jEs%G^8EVeTi?
%-&Gpq18MPO3Ws9-4;3OCL8#/="!ZYG_\F/[4*L5CS3n@@r=(omMhE(7lo.;kKnBEd7c>puBr6G`L/d6@rHjocr'X)rj25YBE<#5Y
%CA(fO;h16O"Hh-k0d(FAbGF(j)"n_`"^4sIQfEm7iM=d7mbV8U.53%>k!#J,>;)s;#*k3;(VmRU'O(Qm0jWa+TC1+4e#U3*Z_tho
%CQ5'hoG_j9"Trtm)N(j#>+:9d$\KT<<+@h4.H.0dr5MB2K>kK2hja$DEHbeODE!t/H4,68Y/P=okI13;kmQYi/)#c>iRX-&[hs,S
%JGX'c#Cf%>R\$$;otKCF)Hoi\6Q^2XoQ_<A$^8He0-nj&QKDm/3H:<OLLp>l0j^[#kZ]r.d?"kt%%5Jd)+TAAI""FB7i(-+TRClF
%dOK^Yj&S7nc>5\V%`U!4Ft*;/_5<f"=4b1:n6kf@>uKHKT1QMTWKT'-rG#KlqY1!GT?ascJFh_E1opKC(\_;Uqb$Ct:H>T1`e4q<
%!`V<YU72riDdlNF7-#OiX+H3)'cb)Ma4*-pf%OZPc/B)fL2]"_:TMiAkX#)"bh9_/_2`RZ_lZd]C[pq:,NG`b!sYl6D+PW"-f*d$
%i_!PqLc#mj[inumEYVZnlpckdS2;TYY7]C+6"&%SoVOOeUrQ?,=p3EflmbB_O2&/ZE^]gZnTt$$bOL\fO;JlK;7anqG94=C'&<,^
%>D9fohs1/48mU&F4cB>DrU"S-0fYDX1?@:l,PVrEmL#ZRI`HVW-@iK,0iZ3A6YSR]%3k'd>1Yo<fX>#/"&Yp"#18(llc?5]5#7&_
%9Nk5=d/EGAWpO0#n,S<TGrK#@;i*FO`"N&h4oP,IgERU&e8!05&Sh/^q@TTUV43'm1+'Jcr96Ti?pDTG1a7d[?RucsX--TH&;S5e
%S9V-fdXI(TG-ZCp<YgT.4uSf`FjeZY=<W(cXZQ7W%Y^3a(q:D7dm*29U:V#UHAHgNktk6V&9?g=rp?4K:XW@6h@YupQDV-10g^N(
%c92'QS4`H2qTPY;a;K%-<jqQRe<>TTo+op0oJbj8N+pDMmjS*;fX@q:h%t=.lf<(RP':)rF5;(o6'oJt/#D:a.3YtF]GUtQS8kbJ
%=<4?PY+Yqr.ihZUm5Mr;)"uNs&_KKb]D)h[e;4*8L)ik@*p9]i2i(AZ0C@T:U&,eC3n"k)(2i?[S0S^.@`qjG!b7E='C%cbGS'+;
%[kUS6S8Ya\"NtKs,7?tA=\AhJ0RBj=JC1iI&s7*9AUp=l>U$bVV0]m0EYr5;+G^59n70Hi,3WaZ;;J#08P]+a6LJrD(ekCjLCW35
%6pN@T&&@%:1$C@!U%"pC/rK#B&Sf7I4kabQ8T<mm-tkL)VDY*gM%PJn^VGZnXC$pT#)?>D_?J>:qqRDHKijY[djX,<Yq05?7\'![
%1sDfG'_`Cp@W5Z&A+]JNqSsXHn"r1.F!'!gI/2J<E`jsI.4"'@7/Fbk>WrA`BEX*fB4o>#D8\07dLQQI%maIZaTb_k>+7lZ<-[uA
%ji;)HX129sbgR'YRsRSa$>Y?EJunXO7M'#l]#Pei%N9?KUhSJ;Fn1R&eJGPX7#\&j&X(4Dk<P7H]4-O36/Q1nbDDOXq_3dg4*800
%dQ7`^r"H\+Gm]P-SUJQQg51IYf_5V7hj9tV9P_Q.`S&!'7!1Qact6:+YF9A#rIN;oM&JR3a]sB=V]Wgo`Fe\)=LoSQ5J#DDfNj3f
%?d>=oXrT>24k$UVJN/nunMGp&bNSRh%Z>(^4Z[ee>.`tfRt$s8YH7$qM<h*D5Ka+biU'U5$O6ic];"CN]]"Y1BX*=bA<e^##>%$"
%_^T:Nc4:e*LB_Pe6t26&&;d:6qUD97;uSNbj[PZs:++lb3U*+XVFr+o`>(tgb;5*'h:HGR9HjE7I$U2TUOQ?QcQ;7t8KACk7(Q1W
%NHW7BZ1NJ`;'%h2X)p.mb9;_Mc"`eYFNjeHJgl]W\K"emP[FuQq&"+aN9u"j75rbR6j:Q2kj%@qi0p0'CMRuN04'XS&?<j;;/Xa^
%`.Q"91p5N?A3m+g@sqPZj/VVr=sbN[;B:UfkMS%]s,'G)0o%qn?6s&U9k&q"#=:VGg*W4^7@;:\q<b6NdB$#=P?=\Fp@u/^fh1[3
%6YYI.f6p"Vc@@pL_ZO6OLLFb8^7jZ@_j?tTD!*'`kMbI#SHA88\L0mUg'EaH8fm(dY'uM9=Ii?S1qVnRVbNt.G3opXZWJ?,H]93V
%@!$\$LA@&3gG4/OQk.2m<qO:(RCDI85QiH_lqo'?2'QI>AKMYZC$=$[UMa/iYIG$_k^SfnrQ"/?@SCs%s8MNdpP"lf[=ETP`S+@9
%B4"hsiV/,r^I(LE*eHkT0lgTLK$J0gd*q^D(KW,"AUn7=\QqMA!WE#5s8*FPR,#&)Eu.9t@FEf9c2kg-%#aR0aqp>6Kkb/p02MdQ
%,#Eto6/=.:I&nUi,<Wo!s4BHrn2?#G]k5b3=OL7E\(/jOL4j:<r;4D+h\T>](1+a;P)tfACN6h(#>Ju-WkF-^Ca-#Qa[5SWm8\O]
%D#3AlpbYp(CS7a+p,%Hg4I=@\_'IDM^OV?qFQM(Sd[m@aQe;&-?-'3cp@Jrmo&/%bR_t38GI!\g](fC&7q9!h6q,HgKZ!-!3Tq(U
%LP'frN)2H^cADas`ioV#,9Ll-@-5MOj.N#XdI-mT\m%%MpA"A<Rm$cm;>nX>_iN8FU[t]>9Ou(o=l?6MXh:^]G!>GiJeu/t,Cq%)
%`ZVAS#G7DuAIWgf[4jEHk_cFl=NLC$@o1Nh#\])`^Vq,I4d=kj2t7H.eh:B_4FMCTAKQQi%59YT:AuMo]`p@NW]4Y<&uj&bA]u&i
%juhKWbM"g_V=fYONE5%\_"D#%f2I3_HK@G'-%$Y/V)7C@U6I+TG<uPh_jj+FmaE]S`oda"<2a;XZ3RUN&o$T?jf;P/IOZNknINsD
%Vj&&^;_(5mKC%Kq?j>0TdW?iD'=boE7?t\S.=9[CLtF)@U@OiYOa=R?AFE_21@O`&Uoo(P=$AkG3??uAD\`P#CdHX1b/'I'&S4!h
%MoaVM8DY2Hbo3:_?oQ0OjGCBW9A^XI@)258l"Z.//Is80]'U%H5:C3Jh5pr#$iiT]@H?WKUAmg=9$G+nauSQ/UD7h=iLJZC;Mj>9
%lh,kIMN>[!$CB;5^UkY9T#2OQa4@"0(BO\[AZ*m9Ss*AU7#'Q7<r&KVUhN?>b+T?ToAl6-EUjOumioPqE"guiE8tG>IsfioVTmiJ
%C[l]nX)R?N90E+N^utT85Kd2fXaH(U5A-i%!XU$t,D%@C1BikGWC]KlC9t.ln<\2mA/>KaCKKMH0f:%S`M?dNDh6`-C3pR%Ap5Q#
%B7Hq`At$(q?#cTQ1Na6#+:MHZFF)DUp1,c.;f-^S[#R,`fkLbcF*kV0iI'X^KJW7*U3DCg+*%<o<Gu=TbnLo`N''i-CAr4alIO<7
%AE\Hqb4nk45#8;@1@4XQ3VREJXo/r8cXd?:7G">@m$,l5$gF#84d.hIP_l90URjOX3d"#9r@Ti!3o3D=,(bG`>tg7'9lqC(]%NRn
%hB@Xom^0TR@W0uV(W@h7q;Z%.pZqYf!g/8_Z6sqViC]Bm]2P;.cG>bj'kVnV4bpe]leWX>6EdCRHQ:eS%1aIscVUAdam=I]L+_]O
%*bRQ:`HSibZ/Anep(b8C[Vp7P3A?O4Ka4l9+Y79[I!$8N_^4X3_WuU_k7S#CM^=KX)"+`]/p=^HPL,SD\E0;b/;2dDBOZ<#5mV'Z
%cXsM-I/7DaIA7:O&pBIfJ,"J2NBo^c\f$)[5>ElSd+"(%Ytip(MS*<[!MXd>:P-$pN&Zbb0oA/dA*B=nrJM7hl5E#Wf$]nGU!%:M
%Pp!qpV5Aeu60)_q4-OTLahbG=[GL-=E)XYa7l`AF7G@9N>.D]Wpqu=`>$F[(,I)tbRJpJ:H>H8MGbsuI`Smsbcbmjp'R=!l7'O;7
%I!2V[nFNFd=XK_USWbQ)<eE2uVrG^:m)Pam=i6BB>_mbqe\KV0A&L_@5DsFTi8E;MM_@8GD(BYB&W'n`H[7CVh$mt<"jl4dn;O]!
%)-@Ou+!,b`4^3D"T`]Us`7)u^-"bOf+_rfVNF'V124(&kIjjiGC_a,l#Q:"c/K0&Y3DMXB#dlB[[\h+@^nJ7=lD6g\gmL;`Bobl*
%(lZ+d*S=/dfMD&M;1I_HZ$$4UVB,o4OB?]s**mj0@E;nC5b>Mj[_>aSjk,iFfJmtiKAMh:MgXXQ3kTK,Ecu@OLcJg;6ls>?lD6=5
%CR$R4>0<5WSh;fKd8tpPMQG(eVaFV(JQhc_8iUUOQnAmA@^QV?O$tLlkJf"Y/f-bP0X5e8'=u?7ish8M2'1EhjqZMF(mWD:S7*k,
%a:cg]G\'J5WWt$q4+qZn`OJl.K"W7[ZKOm'*:I>!?Cu-0]&cULhJN.H3)K#/[1Pskf"I[%3`!TBEp3?^,#CFiKHalF#=Z`H;Llem
%JKApAaR314SZ@f!J&e?=1rW>E/ql-)RQs-k\osT31^Io(es\qG@)[mbeu'auDNLG`HdcHN*]G^h[9*9X$788Vi6Yq4$BO1>g*DKB
%*?IlA@u\aLdt5AdH4,0]HhAMF5/m4lBZA1o@gYa!Z>9W<ET6JTPdPQdU;pXbNef#k%.OCdGPTuRX.0==7AoR2.-Y^6c\:SS^W!R2
%(n8QuE%t9kj$!bCd<)?0diHYp]h6R#hDZ=IO@ka^YhF\%]NtZnih-X%hT[jn#RG#gY6%MJbOC7?443'0,l6LRVRq=<#AM-m>7+#`
%#;5mEBJk_SeR4$(26+qf*&;T$J,)ZN3X7?^\Y^VBcE4fC(q^p/I7gF#.CfZSj)cpe)D(k30f-='/-De1OjQq"p8.7.=VkBPJ.Hc6
%-*_I<+;QD*G^GV+p)SKBkpf;Uau0+OY"7AV*r"\?^+S-9c_L%$&+/pmA`MUaGT=Wu!"?'8,-aplH.=O&q[]c2DQ&+a#4V/YTaG55
%*J+/ic*H"fDsgQ2PSCB6kno4$35!Mq9+V730J3?BnaR^r5O2a2,^^Ggmcm0Fi/c@C`L>IYpA;c%Nhc?0l^DA];4"[JA+!hk".@^P
%*#u:un%*ZQ=r,B?J%.\nAaer=8dsG<ms.Wr^-[2G5(J-[ln"jH>D_DU(*VlkAf]Y4hgT"Z8;.?)(XcM_Ie/W20@DfYs&<.]HKZDb
%ZU1W5VgB$5_9OcT\Xbh>6Pl=1s26:d2=LE?fo[ST+J:5N7dl"d`D`WrlsOsrd?184Seo.?L\a=,>O%I2Wd*oZ#[c32'i3:5O0M00
%`(>GCXciY[_tPet<D+6qcc8FRO(_GN*jZVB*n-SKOF`cD2e;=]Th!,%P.3@I[g]LTRq\s0,&;;2nLZsO];.Q=@n,\U5)546n=t;/
%ZNHJJdq_$%>2fm*]B[b3`n9e-Vb`"E<e'H`ZQ2p.OOXNYLu&5%;0ih>aAZbs"c#Ka0/uaRAl#.6@$U5neE*\cMBZ7!$erKU:]*1=
%;BV=mop:k<DI$,);q5BsLn-hM/,'G/9skBBUZTLV#6')Dm!hg78OX/Cl:""CU#YV'I6_8H1bK20.6Z4RCrelf33#Nd'5mI1V<g5i
%+S,41EB7#5VAu23DoAY<+Z-+i5LuZHoe(W2)B.4S,8Z9Y"G>1Kd*I(4&QZPks/;pd%pIg"0AN0_P]uJjlC:"#UuD-+dV*@D/P"Ym
%A"AW>#_RqC9+23%=(M"5B(tu*i_O["/=uXu*;$*N@9W*[(6SNtW/c[KFJGk\(k]G,9"=1jM;)PGC@2>olf&UYb0sHdpBdarX!(-h
%kO`i<>$Q*UOBC;1]T1VjE(j,a7k<@5Ia4'i!3Z92<Z:[B>N1eH?$b'/f=3i]OuS-XlSaZL*G:H'=IYuQ&m@<BP+cK3kkBl$pN7Gs
%<qu5hGR=9@WAHL8M^PU.-8is2&3!mK-r$6IV4sI8B9D-3`4'+/o9rN=hWTCeg%=Xfado]hp$$27`tLO;cUk^5VXX&bX+h1<*e3PB
%,*X<O;l`lXEV,ctE8':-n+u##]=/gY=]dRC'CV_71p>NA,WeAWi#rt1q]rGq?Oo;"$#qYNjQ,QI8c<Z>M_/@,=*"NXC#PRMCRRbf
%1*&*]dJ"2Ob<7n%(c4$0(#XZ:2t85dO<!\$B"joX[/&a+6ts7E:%l2me8HY/I6Vb_mT)J-YRO2m;F-AKkHo)>Uet__)rTHMrkKn1
%U/naKWcY9`VtX^k',k6?'Wk:a%k#-dXq+<UY-[URKX.e);(#qY>DZHSpG8`9K9a-_rZI\#lGk3LTEXOr]Y)`Ihg]"!/r/:l!M<b"
%6H(Y!IOpZMaKAk-h]MX[T9rK6U:B-Be!nd>dBG=Xm]QZlW2u't_hliBR#<2e,!bEFI$CI(_p`DTeQBRL%cP!Ch1\]Dap\<pGefWH
%o,!*j."MEr<pFWMLr._<\p'P6a:sHT>>>UgjPS#IF^=8EWl'j=6Qmmb!pbmPPRhKW9aDG4oe(_8RR`2I-'i(>n]>)@S6'B&YJ:*[
%=kBe2G"4aX\jd.rfNFO7n#s@Ms.hDt]f1&?W\`HgG2$]XXo^7od(B/1<:6OM&,c1,*1+8t\r4X$a@&a52)b1W]!m-C\(.K^L;#KM
%C-1F\]53e-]iOOKFQI:6gkTi+_,T3J94/:4Z&6WX50L&q3Aodh);1"@V-*SM.PB-Mi$*IVqaM#Nc"j'*k]HmWJP@%Mn0,V*Zc+9C
%r/@FOZc2`VcenJeg#ZYdCEBoE;-=l#,LP0C53p7j_Y\<U?^EY#b<.GsSb.MSHd!`l#njf7%GlZ8O60]<qU.9"%'KitU=?Y94?S=i
%>@Tae?cI%*Su`DE'%Fur1^fm8",Zhs+u3gmeUpu=aL!OXq$8))Sb(A5='%INbj+l\DdbU>oJnOQ'd`0u^.V8iI',[gWfQ&#atH9L
%:l^3;*X/U\#_O9VoZL%Cn_$-(?-r`g6VDl*=KUcU=m.HB:1T,5U=/#FTZKBHD]1t=n@]E/mg:G155#V@q\[%"C4s2))FLn#*S:h)
%/_-sUa<-Eu/QVojkptbOeA^K:<L6o;YK/Lc1Zme)0UBB&[<bN[\*sp`a*)k5;Zu"%dhgW>$="2/F$;*00,<n!;*j=f37N0T?&:#h
%8-)q+BbeH%5E0(^YIP9XKb:SnXH@4Z0/@i*n9\;B2u5%smjAge:]L@=mI(!-!Y]uI2RM&k28@$J"rZn:VG:sWJd9^5jcKH<J,A"#
%6,6;"b^06P)u9B'8e,r:ZSg*pO-"]Q:@Hl_G0sUd+RG_c%BUpc+Yq-%_g<&Hq/6VXiq;?"%%$_22H/A`A,,o`bjdS)G;CU7+oh6H
%Vi*qjc-6#\D4Ul-!u_%],R*M!5bc%n/lE68UbE+6IJl,eQKsg<j,e6dfnFAY:.X>0Orn66]KhOYq-i+:UunA*N%SIeq^b'*(*Pe-
%Aqf-C2&@jM*1L@A[iALFaOEP^ZOte[j)+]<rX-d>p&6ZQOslV(g[i]I/52'i%::2Frp>XdQKN625HXeB(4"V-2lX>uCS'?.HP9hD
%el'nS?B4"m!?(]U)CV^+%t=hVDFjN+04oE1]QnI5%r0Foo+EcGDO05Ha$A?8gu&QEP[PSc:raDFLqM.@XtdCF]sf9pqSRVCY5G27
%o!G;9GMc]O^)6#h<IHT>_UW)qVgC9F#9QK`qL5>\6miNbiQ7Qc5"P&>Ab>Ar?T_'98hcoJqPm[*i(6;L3FR9C"J#81AS?K@?9a1n
%D$8H?r6,Z&+@k?J.d>Eu^IKM8.>Z.ib\^gc^C_aqEO]k@^$PL,o=2t-Crs`rqn1Br/*G);i6](u[kBLq#N@B*a-HJ-MJ,E[`2X0H
%;SZe@^4Cq1,f1^C(t9\Re1.`#a&5,:a,/(%:f2#IETNJXF(PQf:-unO#fJ`Mq&"9:3Ii^/U9%fZc.a(3M_<:D]i9u)-l8=Uqr>B^
%[-o%pkgOE]f_@RhpZ6/EQMM_iB*!IIFt$0N(1C?C8W^H<M-*k*\c<':q6bFjOpK_mKl6rg`+j9?^<7KeMn9`6$sl.U6.Ioc-)QCR
%+8_qC]$cqMU>@-j])&Kl0)">NGhbY^)t%VEr,l3jc6\_!Rku2*p0#==+U%)-$Wn3,5`C5Fn=hWu0gpC3mdp9pVV^pep4J;GfAgT(
%*nL+)[ZV.Qi$\fHQAB&i!\umq2mWPOXMSb&+8Y8-2BL5+jWYkd-AZpgY/KJ1k(OZ(.8d@R++'F?$etQG^E3(8\"D@9`RC1q7Xpom
%er('NOH2_Qg(6ur!g12c?nN-<>1\>WZ&';A0IPGpa4Q^,5A#G5c]!NWLme&2@6$^<I?`btifD:SY&W>fn.Ri],MjT:X&e,(D*e=9
%UU(%2G:*!H_nf2VIU9r(NO9UNq:M]4C3R++f*X.X`\?DnhF&-RH'%LD8pjgNk;@_D%6(g\.,B(jL2[TKdHK`@rV"EtOJVWS^iI%8
%YXnIDqQ]M4O\@u"*;Sf0@NtelOe&[TIf7p[>Lk</^s3mPVN%:o^>H5bbIii1^.@!T\?G,Fg4.g)cb&I^s4uc6TQK(Fqr>i;JG43;
%A2"[*9jHr%!T+j&TT*'C5CK<[)hQ)1X'ZpoZ2e_KZqPX>UKqO5\.u])O.KZ(i5Aa*<860JXL<RfMeY.bL,K7p!0U)fcr:&af1Opo
%h7_&!KkOp,LYI9fXSZl+4DhE#Hh)Fa5Ap/KdQM=#2^/0R-%;3Uj4\laaMs[7P?s*s9qqYm,=X]HR]$j>l.^[F-V?nrcf\/[p-C<&
%];m0UoQ:Kb`]bg2kcZ((<9]\Eb17/ShhEhS3uO6["kebd.X*d&frq#+dc7KWg7OFqq5/5jAf?U#+I5Lu5)Qp,62)YBXHLo*TLchZ
%aD)mq+dX6"Hi)MHJaXB8C+ct7Xc9Uudl>q54@P5'NVLrRO%iONNNGKSF'^M05aMW?^6\jrlhK"YC.J,qjaPu':RgQfa'FtugEa[Z
%r#h+lfmOJi>,h!f9gQ!];<.&(MCAPG?PV39L7n4V>X#UA)Wj/lYl-!6a&RCg^W4=-.,W+fW]"gLE,tF%]3jfl!+arB(YtOM-Q2=6
%eHgJp8%,.pWnW=<H*W6>Xq;9c2[P#mCYTYQq[S^C8L/@mm9MP2o4gCJq*FgGhaTDJ1@GZHC\fUl8Af?B$[!45A*#*B/StenFEuAA
%f(\gk1&m#[I[JQ]q*,5P;64\O&7[d\U17`/nG(a,OhuS57%QnL!5,N_TG4aLOZdC6pR_`%lD4ORn[Z:1Vle4?JV:3lDmrnG44(q"
%/Ku,*U2dp"ACdrL(2;p-%3g*W:YEjeducU&[k.Bs07O#j9,V5d>ke+"\]a*@"RhMfM<mOe^<cf!kmsM7'^BN=@eTM67^j?!gZ</Z
%$Osi+Ju1gU.iYS$[:,U=X`YjD-7n"4i^-buL9\2e*u0r%qcj[k#I,s7SB_1O06e+6\3%j9)("HVca*Yu%puU=$4$N<4$7AMa'JDA
%E8N&:j7ER*4Nct:gb0J'FaZF;!`mYN$>TZ5\'/=p;&:cmE]I;U.u>^L3@N4E-8L+J@DVVX]Yo`^j+<(B>dBpmd;%>7+'dq(@2I@U
%31pT"pG>]W![@Q#Pj;1mbRJ-"F:YB**CNn&(m0Y)7Qf!d,I)Mqaf"M;dWsJ,O1Xam9>9`HG6.W[inUC'.+_7Q:tW2=U^I9k5NepZ
%I?YQN6,cp+qQe>l<fuj`OuC0^_`sG'W'JbVA;_q+Tm_\I3N_:[DdW#E_mVBNfoq$r",Xch(TaRJOP!%s<BsWJQJ@=ajGZ(Nle\G^
%PbjH<i,Qq&DQ]n.po\Snk4u=eFd'oPkrjqCID2TBmbkM0&;M%Ei#oO:/N),3ic^08.elo;kE@k8rYj46-u,RGc)ST42^?@bT+1L`
%JgtM<DR9#\1;aK%V!Vlm$jE<pj7Ah`qD_Qgi<iIZf,lU;j1]cp5nCTpU2@Y@nAb_)+H&ahI?:\+U5dr)F@P7.jBB$\Ej-8mIgYSt
%IedS6GWhgWWL2oJ2gH0\;Y_O\5HW#UdQK/Pf!?0OdUFjrC:&SA88mp#LFp-&P',2'46rBm?FoHCTV!mt<M(Z/kYifknM0DIXbWhe
%a(WmW6(ch)C3s2W["9DF(2Fr^2!2EA]mqiUkX6>J&,eKDY'(atZTnM(DBsFP4@(gUA`p7Ai;)op^Rb?`eAk-D9AiZP*sDJL$5sip
%'(+)%Z.=>65c1P:Ihcd,L7Qk*fb8],8SE<Rqt;7t/"4!%[>Qpn]nBKalq(j+;KG)JR`9&01Ro9.1jG22qkR<L7\JpB1eqY'T1"na
%(7CE9Ou>Qu]HU:P;=ilOG[&4,hZsaNrk(>\6MW%G&$gYHfNlmR&7:5N%C<ch68a^$99[/q*Iq0.--kZck5+m:HhA<)H8Lc[P/%<0
%;-SZOQ_,o"c;k)gllk>2[Na[8LV7*]BP\5j_D2O08fZb+#:4h!i?)*6cfMU(O3@N2O$%6V:YY;3aEP,eK3WkQPRg+Y+RZ_Hq/XTS
%CAMN09M>A.qCt_(TGLPQQK,'.aCH,Yh!P=YVu)_KENb[hQJmJ?cClk;OO.X[#Me*KKk<s(:UKC%224gLZlJY#BUH2JO]bjDLku,t
%7^Q,BNT%;bp?_3OkAc\KmDq4<q-a=hr\G(kI?_o&+]a*.J^nGt=!nU&J6C>dH`X8?/i26L%B.<gbaZL9(I$b.%rR-E%S*rFLtlNG
%Q"#p,@Ss1f\R0/nf`3<nU,AKF'MItdSr#@2<O22hW^\rE_?;sUK=pCji2'sJ+E4I+e:0#BmP0LOnp^J_*qmJ2Y'J`1DsHqH"FaU/
%&)qnul_cU*o4X`:i=7M7<k_GhHWKOM_[V3]CHk;E*:-6[l&Df/N@(\Y=7Zem;Np]'QS=n#2OeQOZS3;7$'*4Y!)A&6*8jF7.?sH6
%2Z]4e51QdpMBFTH\iiFE6AF[uo/:jK1EUeldoP6RoYW50SGjdr]B#Q[%"VM@L!c*s>`_jkr<,774I5-^RF$XTN"/OrI&j/]cO<uR
%/`hWo<b0p'mH+6j3Bo(;j75@:p!m=g8a#;><nFu1UDnWmBBUF5Iq8P.Gc%uN20;(N1NHGk##>oV?GtrC?Y'XT;]ORY<oB93[/.r4
%p'&e[+&F7nG%nCnK<1;l`13/Pk)Pkb8,\L@i^s&D+6N<Z5Q4LcE'7A3*/&k-hJf]6RpsP%E9H=;bimC(A)0;L1RVkbDuPZUePb[K
%j&ghc7%H@)VGb;&8tF"k^nl#L^'ee5/"QnA\.kRdm;\71\&4]f^)e9[2]7@rYoU2:ehmqimS=0m/YTQj;)u:6&LMEa_dY;ET3_3H
%rEofcQB,OX-u$V'-V5B%6Ms%\Q+r%0FRsJ#pb)/o2`r_>j&/(Eqr9%!YasY3p>B5k$Sd;r8)2sJ!beT1X#<:-g;OY<mjp-cQ/s,n
%R>MAEn\u,;q3+X<L7jOj^ogi"--EP+CKnB/$T$g/X'&V?^P&3pdsQ!])I+cL:4HKBTKfUBIH<\1P>?Pj@JATRr/f-CQcsWehSo78
%n(ZQD\I5G3_fnVQ&MogHC`0o.gOF9<IGEpOJce+3pdZ4<H-lF`Kn('Z]Sbl=aBfjopt-#Cf;(QQ3m8/l&t`CqI8!Bpdic(L3RhUH
%5oFCjOZ5H3^+,&4(^!9$O^cuifis=N;<@n8N]BbioO1<)q#\5%[*pr3@95X/hl"0ei,aC39Xo'a`:tbM:TIucIVHV9N=Y9\;_SVC
%C?[K-%j-#:q-2<pS/MXoG!Ro_.1dK8mEhpc/3kkel\h$<puS[>F(7drVX9R\NcJNsYR_Q'T'MlU$A#*l+'\Kadt0d5`(7b=;c>AK
%J$_Qa\'sBWHeP;,DYLW>L/7P0/l*,X,];3-qL6Olhcb)A)cG0?TFO$)W&.A+7s<B*\r7%+_308+aNjDLD]_]#fWpp_oBtIg^&rZ0
%]nI=>_"(do@R/%[BXGYq?tpE-V4SaO6#=JZ6q$"_MEbp<%iacIl`SP-gFRiEIM^,$n30G_n"Xqf"m0SX1<k"[M:?OBTn5uO#=<OI
%S:d)Lds=t]%*n^c/IZ=6Rf6.3O3@+(J5<4oFhtu@p>Gkf'S]n"Z3'Z^R[ask<WPK^FI^-8`j"l&X>u(%;c0dJEX?+B?m?k-%=%I\
%UFSp6,3hQ<<#WE['KW'BI37m\#OhQWB7AXT?&Ih-UJq%"+.-n9VH#gmb(^"gQ:uQHDbn\AfG.tjk@J9HOh?=L*ak>@J?@h.)W`mg
%D%&k"/tR^-'LO^<,(Ejf]4h1/NfOg&PM9@jIh:Tc[#mMXT^A*UON*1$&M>[K/&RFHW3@ll7[0qmEU#U@V1B'+DF-SPQE!9G&t$jf
%_9Cs@O3Z!VL4ah:b5C#YNskTiPgA[p\4Jl#V`1kDq;H6I$pXZ8I(`"IQ*Gbh(;&Z]bp0lmM[jLPVJ(,"g<$^ZHDj9/&JZ9N>Viue
%Nfb<6EB?N$rf&a%TXOW%j3%h)FQq4enO5-&78sHP<&:u#q[s).EB,*VrmNLqYb`C!hbD6hNqf)W_aSf,YP4KrGmG%mil^LV9Oa\k
%q,GQfa#]MVMWA88Hl<qI6;=G(m!]gA-&J_:hQ_EHYYm=da7&rHLS]f/e)S$q(\lHkGhP0=HgEAmY6QHO9`dO#qm];b;675api<k3
%W>GH>R.bO(g0K^'1r?;`C6PYe4go97`AogZlRj6KX\B5g4!'P]1WlKp4O+9n**l-2d-,XX$bMrI1UD@W^`&Bh6DBWL>g8ga'%7&Y
%AGh0jVN]<6jsIB%J'1D7.sZLtnb"J1@D$m&_nLu^iaJ$6DTAZgHZQ@)9Ami$aFgi@jn`['%ec%Jp8!*G@QTbHXR-@?;/-#o_'UDc
%>kd$3_.YC?O;L#3K9bXGSkA,*oM('%;KX[3#mS;+O/o6t7D1^lko*"X,n?A^A):XO=@hO"A2MiZrm<?CfJ4O,f52a=4mTQ`r]'jB
%)NSq9,ig2Y)%(eXY>XQ.dTG-pii.bbMla>KO/c3s%4/n#1!i[-0$IG^O$roM(n[,][`55$rhoc#1&]XL_9q3b#>DVn]#DgpVjmZ%
%oD'?d/CST$$F>QoCX@NU^d[mS'Ka<=JnoNTO6[@I.!oF->PlUaZb"l"\Sg-e#VPa4gs,LQZ'uH_SG4V$d]#\o/Uh$o<!9:#[i.9M
%/n.-AD!o`e`KTQL0JkL6%LA8*L8\'lfM$0j%CX\='5^Lp/u+MmYoWID](S6_hDsfB3sWY!.LNfM6R=)8b973t/NJ,_FSF?1o1DT)
%#-;,f1UeCn@aN^&O"]8R[GL.FE6mkm#P*/i%o[ii`WsUKMYVN`4tPRN69f=D:P+N'FWTFKDOMd5U_&_Ym!'JZ6ujQ@U8;joK24PP
%:L_.B1r^ENWNLeUm>`gH9Sg$i=?V\=gmBADA9$gLH=99g87]#bP!4D%Y\I!/,TaQh%+9@UM\)_!eIrV%+]\<?H]uA-#(*K"HMbs#
%)06nXo2Iouqb]m[iqt)!kCn4ed\hA?'[ia9T4ItJK;l^::YKec,N[,r6XKZo:[rtmI<e\j&qr#/S<9283hbK*:XtBV>pO^Y<ubX2
%A\S/,oEq:`oK'\<H;<f%;\GEc7&^:omu#cZZQou>(3YC&JB6>iO1r_En$(GC\!d6ns(/)-neJnuYPVrjWOqi%qeuMa:3H6.,='s1
%1L&M/cQ",b?0L0aoPU*66Y][dTBI(Tls7*(,AUbD!';qU9R?odb$k'+\c-3sCf/<+jIceal2;\,s&#mR<%TD[[h`J[H:#b>V9/#*
%%7k&#:\@J>!$W)^B4dLa0B;OgpE$:VZDfAD<tRV?YmYTZ5l])uK>>c_ltY8,8M%V<agrd^e?`Z3>*>TY*Y5Q!%mK6U[ETe/Y_WO>
%(%@0Q-7hIMB4*6b^4\HT^t-cI_*'DV33Di=08@0@NpAL7TZAKN3l8p1@os3T3&clB"ON?GAOBrM,#TFb[as__Oqn(pb_O)@$AI=J
%G>$VF5o,M;qEu`k7.k$/nd>0@;Tu\*@7fQG+j\(J-UM`\dp3'C?i&C^M,*%slMI8MU,*mODg**Jh?,XApHEQqORC6(!!nJpn:AMF
%nEj!]M#"?3Vunt?2PM9Rb;_@g@omk:S>k)aTU4qodccCXO4P#"JjUrp!YbhIEXBh+_f9=e^Wu%3j%G4WQ#NmCkQ[u?n1YdU99@UA
%f+*ECRhB6P`$Mc/4+dJ*!<#@Eq1>Ut9H#`rDF@[5G;p!$WZCGsCU\(Z^\+A@R95kJUMPG8"l`]fnYt[;6E2[1UU/MA`r(OBE%LJ$
%4GYfpXR'Whm^UuArKYnf3WMT6-^H@XHmbWqLto[u%G!K.OD*"%rDt\oe[m30'Ck>t98Yu/+jS4K`+^J/TL@eD!_$n0%.i8Ln8re-
%3:Bdu:cngBGHC1r21"DI!$*#L6q?$9Cr%Z35Gkb-Z("K5KR3hf/7D"OJm6b[kr^;3i=Ta4C73-C/tG8a/r&h=^)dR;'Z"\M,uX/[
%0-mqk,i-;dX`n.'a+?:h*llP@#Ml/Ch8k2#i4/,g+pP%F>SGk5nO@KeUQ^FqeB^-3L=ZiTUsrg_J4_"^:nYIB(,3E*#)j!l\tdZ]
%fF'+&*C[2rK9.tCc^)mlY`igY4B-%4=_)Z^&XEU@!4HY!gXYZE`\:F,p6rD2cq58Y:XSB<Z'dW+-lbs\CFMo"82_^4;L3-N`]*/:
%l0#n6&(7oI]#Vi=PO(]Obc#Q`X)-(>g'#3Ia7>;'g)+=@/g$PtG**WR"?Dl<QSeVCU;Xoqft'F_mG.;FYq91:3%QGA?"Id<NF]',
%T280:2Oa<-k;+ac(rN9Zr$4WoFeGgo,,%KKQ>Vpl'hPenrp?E9I&-M9<lqHYkHIR$R(BiK^rOlZc*&+_JZL2K<oU16bRWUhk.%tL
%LdsBn+Z.\%^Ga^&+L-;\ceD$!?-shLSk97Y.9*QpCJK]C0l7N3iMC`l?7pA-H6p#[Gu[YlARHW#;r8KE&K`*g;[f^Mj1NlB`e^L[
%9*cpJZ0M]bV`fQ8Ndu_d#6Vo[CBZ%]5C=WC'iJ^cfc+L`J?#3PGY]OOK.`7@5V4n*_f7OWd[H3P$-\3d1C&)#]K6M%^K_qcfqI0&
%8k:&u.Wch<-PB5B:U$3VT$cu<#70dl.un"8aX(XQa<:d=G4f'IL*D/3+OHagOX*$8a`VBerkPoiJf[EU3Vci\P8_K92#m;ACOQ=N
%j05aX%jEaTH2ZiST!RH*e4FT_HZ\CtI@-/E6!.qR[LNQF,^eiC7X@h&%!]hl,60Yt+V^LRA7g)G2ssHk-G97\J>fTsE+U="["Zh+
%b(8C8=pV1E'+@6LCpjD#89<HZ-`/aYg-3-DH<DORFjNM;QU]K44&u+VBIJ:7]H-0.MOu3c:npO8M!\j`eGQUXa0DH:3d)+HHLgGe
%&>O5il&2^,E!W@Zjpj(Il,h&n.!nN!0j8c(&o%JR)JKFZ6NaV7eW1k%c))WPdi?*=;^!.M3ZVG8WQ<S6jlTs:;p#[:.g65ABO$+E
%!2m^gpAN,VL3a7u#j=F)</*au(SS3S=BZ[\3PNRcRu-p$c$t`b8VYJ@SNjB!f*2Z\nceB&#k,%BiF9qcd$_4NLVg8_3!ZA3(E="P
%4nNeh)ra1U%UHJ8,do&Y*$^Q`5o3r-@(ies%Y>l5%fLB!kU>CR.a*tQ9O6[6*@ZO:EZg(P*hX;%;r$WI*QepUdD1_]VPM,_He1(V
%$FY=a_YQ6LA8uR6TI,]XY@'l(cL-LIdK\EaKuU"KA^hj>V9u_V"/`?p<A]$hqGcZb#-#QH"Q*bq6S]8Ro"Q7Od?<HXCVtWqY^u'5
%+\X$2%e]+[i;iAc*.a-Gq;T%%#EiQj8W$@H=6#*DgBPjt2,dG`3\JFjnjY6CVp^*m4B_t7&$")$Y?^bf7T?008g<_L<$.(Y)Q/j.
%*fc19]5t38?D8R9!S$.IqRW?-T.B'>PVp6W#-aPnE/=E46K1_kkU]9&#E*PHL3ORh_mC?,aUOq<!qetf\0_%qBH>h0EjLGF@grYk
%lOM31-U_uGGLPqmT##b#eY-pQY)NlB;Nj;P1e/`$>5!^`8+F4,O_I7-a:l$)^n=FO)3pL"IOY0e@+,ID8KEhEZK1ng%cG(h9P:6!
%h]248?>U"R3W9:pPHm91::3PU=7YWp-Q(N>4e?m4W!,BI%(("?,@b^D(C.l]F9dKN7N_L;Z,Br]"i"_qVUQIOHg-l81Ut&B>\7Pe
%geTJAX`Em4WCO<Ldoel9<b/D`6(cNVE83o!KZ]NH9gi;-nBAtR4f5")5\'4s!("niWWH@N[,g@H?fJj?_MF&1DtpX+P?>[f=Qqg+
%e-'#7>A0Df%%$=@3Jm-ZdrNm5A:gDi';tF[Q!\I:6>RW0(WQfB%S@qV45pm<+EVh(1'jj43Jq]I&[)ZOSV3_ITP`/CK+/TB&/(1n
%8tFHq%Q-PK:PIpgb"^e]q!rXPZ;lii$[n:U"o-DQfT#'((B;fV]'q[ZW`r4Gd<["bXBZ:S?Gc>;=!RFUToMBohIgp7,'TguR/M2%
%4r]^AQo'`L6:n2gVV5jh9tA,8HF3oB__?BS5V#k"M<10%LK."eN/NdL"6PX2G;F0FmOp_-,B.C+k_(a^*Vm=rS(ebB,:R(<]Wi%h
%K"D$%3a;]DOB:#rY5$>bAVIb)\PKTVesoe;hWg#:`f$OGAY?_PJCqF<;Ks%)J.7[5iY#mP\IhKM:7^"dncr;g;Op<^*#c[F!DlP1
%erm\'9LX$M;Y>6>FdbAjbLONXAC)3/,.paq;8n=d5>U9J;(q[,a(W^b<Z$Afh;1I4hkPOPnA)Z4&XjZ=$Z0u`bnl/Og(05&...nW
%C^21cH,=;_6>tl:#oDku0B%.;64=S?[WFk_;pHqc<B<9>W5/hm+6$OYO@Hj_,kp=Q'M!CC3Zm/u%YMfpG@(NX'oK7?<?qqJ*Q0h+
%B]p'SDR6A&%W!%6<RI"t4V3:dCXNg[iNXCj%R/[%Mf^Z;c:b9KWjK11$klj_PT3KtHuXQ9W,A!QGCcJ1<g?p4M-?qDj3@E;'E+*q
%]ui^DoUc?PKfG&<6XIU:/n?)<!ipqW@;R`AjYQjm89O+pL@Bm34dYoP_nmE%JPYnb5&ZCI_I"8^DK0_bX/Y`&r\tqC'h)17<"Q)6
%dp#hNKg^(uBnF_2g70ag'(j!_4,D]*GhRm%\W>^m/&V,R>@g[jO4+?'Z[eWM@L,a;nNU?:T8'7!>5W&B\k9jJ9=BP&Y91dr_o'Qn
%_^&A:=@c6D.fjU\U,t7Q@ZuF1d,J^WTli7=@$!C_SiC),FKjqKH`?]@^%aS9Ok]l_`QA^=O1L>>%t"Gi%8%9q@^Nrm\q*8F^-FsL
%g50u&FD,`^/>9I$;39]f^Hg>^1#B[u]g/D;M_[fB?ROF"dA+D3q'N@5%)e]Q1pWla=W-OlF#^9IkF`ePA)$rl!>"#,&5n92Z8n^`
%7;hIQdi4e#2mbdCP2TQWOc+WoX&@bQS,d$ioX?cnnWW1GfEba4L^G&SeRM_?DX36LOP#ra$\&.\%9]*u^l!I),1:,*,?p9IX][qY
%lahJ9L(L,4hTaVgJ.M(Km//3(o/(Ub#kSOj:]f3M`Maob[lVm#<'Pcnr,p[<6FU^pFSN3,cGph.MqGQs#>ppYS5*>f=F67!qiUMK
%""u)^-Uu[YqIMRUdB='JgKWEAa]\maNV!m+[cD7qo`n6n>2?1;7jB?4Nj\<SEXi/(Z%\/5@UtG%\.s*#07uhjbs,6)`7rr<$H$Z'
%EfEL)T>7GISV:GW,ZdbE/Hi<\G%aHu^;N2^F],/F_4_LJAjo#RZAe<GU0#h$a7-YVNcmGNQbAK]doE";no8Bk.t<$d/Zt%=*Mm\=
%*$;NUbT#:I=,qTK);Wa_rUp(F/hr/T=Dd]8d4Ts4bo>SkY4>8uDj*@s;Lf@QRpSoZgqnMM+1jsfo6t?I=EUD51&UcaVi6^4d2hL(
%.'pD]!Ds@LifYbYjZP_R*/gP_Yc't^'sVkn5JEZaQ$)As2rGi":0!X>lr=+(pRpoAQDkGum[\j2jf5COduOs=8-+MFgZ.c"d%ItX
%_Y^)A3?p@JFY3n^3mALi:nHLtF;hCfOY)(NN;%7&ccsERF*O<YUM!*n1`q:)HHs`A_32;_rRFrh\bA>?QJlaVIh5U(E?DttPXr%V
%k\/(6q20Je<-#6l!hKY#(E"c+iD%3"Q.D2'l1R[i2E&-*4]Z3p.!Vh00a\sef@k>TXoS=rq%@PU\uL<WY0lTU31+)Gd/h[gOic9&
%"_sJiOVH>p.*,qu)Xb72,r'EWRiWHrWId<U)AsX%!^,e_akIY0H4j<KFltoW5VgCQ,hpi]Q$nQR48n>Ao@SB1@f#BX9=b?L%,4<b
%+5.-S-DWIN@432)HHg;8hn56p6P5$S9c0bJ9;g5'/^eSkN>>NulnF*>.Eu-:b<qb$EYKM;Z#B95`3$t^kJm_N0HqHJfQC9MAIN?h
%^o%Coos*PXU<?'s0oTfUJfE]%];I+K;Kr4o_t5CY^t1Dm[Y_ng\gfKhkMW$4kho9<8@WpQ]U"oeXcEWO.bht#Q\fqjGgm?.lZ'fi
%hXLG$Yrf$=:iW35N/Y8N;M0Uj>aj;F()f=D>DYZu<0jkS"m0#U\g)B*TaQTCFX1[PW!K,KC=0u1aC\\[CQlReH=nl6>f/$X_oM,G
%f,EaHia=QQJE;+N%=_4Z9DeZIr:5!'frDtq,F7BZn^a*e"80)a)$m'j7@!T4P4rKS2dY;@1%]F]ml/'I*^^ns@O#++f4Tm)Q^4Zh
%Ct6!-3o=hqC4Ia\H:)JTfs9_a8bC/.bZ8mLYakGS9Lk\*/VoE$_:^]JknOop`*cs;2SC*oin8k<?-6`4=aU)3#8phmfT.HD9*WBr
%aF^QHXofVf[`&l?@%7QGDnH5+>9IHC+nR!os&+n>I(d1ELf!UAil:F1bte.f1RW!\JG^<hA1QAT)M]RJFfij6A-ZBm?rZDDalg<4
%ZP*Xae<nT#%+MYkc+R&e(GR0(lu,'e$U3;-=JL]uH4&sL/oGS?<BAh\nM<]e\u"Qn-d4P,B,hop&GW'>cAu3"IL53*MSYUhml`2/
%k#TBEUY1B:I85)@8)1&R8Q2$JZdl[\gO!sFa0!(8UlA5aSZT:Q#8)Y]<:>,]Rk,fc0sg`$'qd5C:tTd.e=E!dB/NQ&R%(jhWh@7<
%*8YSkXtD^tbAL+)b#-]"NV-$N/5)YYQJM,(d<*Ah4!.0:]LY$HWT(IlY#T.//%)KCW7*otP>_?PX5K:YhS$HddQ03CP6h^^]AG6D
%.:g(l9q_A^SD6MK07?QW!Aj\SoHpO#=J-J+'7c35f1sl$-91AH0<9UCg$R7Z@A\TRCHHaG37R.qDq^VFVfP3o!W6%uo!-!/[)=jZ
%&S?ra3.91+gG&9<mFj!%k+V'_cE9s@Q%MHVIs]\=Qc9"hW4;QRE<>eh%6@KrhHb*6hn$K2-ZMjfF-Ss-0j^=hQ5f$Nq[hoZecL:>
%O6?fZKqIjr3!fCm3hfXlgGY^+;1sD4MXJQc4k_P&D?`dtPP@gZ\cM&1FF#==(PjMjgA$SBf(=Ri`26jCo4%oYlI`e;Z>:O<OHA&J
%#r)5m.gM-3@H*S4Ph;c`g1OO8^0A4PWe#$Pm^(bBU_T>2WB%(6D`_p<oU;3d2'f'gO#ehTkfmb\Hm^-k2UO:&i/!C#EX06LZ8f'C
%543Eu*Q;6q@o)2HSB5m9kbTR,io9eIgF,&Uig^a(0FlnrTLtij&X.8i9G2?dnPnHE*AKGuHuUc,RBY8c7uXQ^D_=04Z.Zh%5Yokb
%\a&d%r<5MHN2@8D[gfPr]_%_-\cj^2$ch3`YH>FG`;1O]a%tH/B.FOB)qu"KQ*qZg#rh8>5V0\TGU2;;h'6:1I`o-.i@_P,.hpF?
%dAJRC5X/7@1g=23*"kVP.V2kF)ML1Jc+o[K3]+i@JqLg^Pm\k0naPBb\C)#;;ARbYheAY4,:hGG>c9Lu2#$L>1q*$%EHTmTR=Ri9
%a-:%NQ>1@eLG*=LlV(]W.uj_.T'bWiMI,,.\8mN,bk:P>R1Fm;5=T/W_8`JBY3Ki!(3#)]_Fg^t'M8^=Eqc9EgXLAB=eDGHi;R`B
%(GXgIE+,tN]-%R+7?Pd,?X:)hlO4Y3g'/^dJWG_<3fL$uq5E43[Uu4K_2*gf0@&6jKeVg.=D@*dFXg%h!?g%idhN<H$C@:R\]??F
%54-]s%;ciHjjhOZ?!Z+o4[(d3R0l_.djK?5O$3&"1PAZ*/$RK,h&HPiNLs,o@geDY>IbCu'Vb2Y4OY".8.=\*E:K.%(!4&AHE>im
%W7j*U%]HZTnH.b"\\aXSd<-E_bf)6Mg7q6t>[\Vf==RVX4^0<B.li^_Ieo'6Ae,@`A12gQ6-Re&<k]1h<kh;%fZN>!!#`-@Mdpc7
%k6(l^?3jk`F`hKD[Ma=kV=!;`YRZol&K<bK^i]:fD=qtT&DJGg!GsAUC>!O.liF1Tj!n-Np,^(0KhcYG9$'S%XEa:67a\as=I""/
%''-\f!qM6$a)XT@\B^1(arl[tOiiB1!1j'f"Yf\";sdj<;8%qUBQjD9GB_AMC_B:i\)aAaqLm*n4hsY.!3I:Xd38%bY%=C:9&56M
%),4e\@E5M.!=u9rXfmK?@+I;W/FO.uRbpu.Dti?%gi=<^5CdqP6XjndhMLBI$jOR]Z&bsGVn7Fmcqd-*H>2%]XqsoAO$7Zs:4gCQ
%q`[!(Q/,'d9rel^B!X8Q0UtL*rdL?Cn;kIm*p%4i-69"9l$fZR0KZIe%r6i$BCt1R\I2ej[^^L,`(KG(!11WSTtA@>^Ca!1pt2C3
%1$EMn:%u?Ua,7*\BG#S!d!n%X29KdrMHtaWI&pX2(oe0$L[N\]bLotBHrCW?'iL645^t.INif%aK)E''d,$'U,5%`&KEgJG(iXFX
%\f4pp\`U-7#/)H2WiM/nPE??*;H5WX^uik[3Gb12-"l/X$ITbLK2?mi6I"j;cV4r$*_mO3h6I1CmuJ1)$ccS4_qSqdmQg*u9oi@u
%ANmpD]f]=8KZ!]OQC9+CZ[_Y+$,nQ;'h^_]ZM3VZF+A/[4j5ok\R.N);a.T/_gh+,%[n/=JbojSlD<%:d-:&ikWT1Oh)2#^O=2eg
%1Q?G2*0-RTi-jFJ\$0RV,Fbj'n"?":Z.9X0'\Xd/Xj9_RnG^1J2-18G!j38g]+McJBJt_`$LVdU>ai92RWl4V@\MV#l%2[/Nl>*C
%[T-jJBO?ZUKiL/Yc(eX9AbKWWQ+E:Al9I);HiYNgin/_5`nU/>efnAO`ZSU9B<9\#Q-_nS^gWj)IK8-_=s*#hbEb^B%P97-U&H86
%3T;p'*pqQKF6msH$fh3fk,5SN5o2k\.gS/VY2X+eI_NHuUk$i]I?$DbX;^NM3N1?6\XO(I^@/ZSD1J1.58!i'W-,kuegN)(k#%tP
%b(h>kS=Eg&N=Xs=1st_b^JpA[Eq/>C,QQTO.D'f#Fa_SEDsM]k(5^E[["aklY)"*$]h9ojTR^4*LCkNu#hSBg]%0^20KI-lKGk\@
%%+X>'1$-8ii+$Edk\:V7Vd)?n16t*K1#BZ?g=SEgd&r7(,7:m`S"p;/q8hD')M5K74QO#:)KOgX,<0C1ZtS(a#<<e^c<"&`*X8,F
%Bt9h"@mIk!IYs[VBWZ?#X3#tj$ZjmRb@/hO#GS7uNVccsdNqGo(aul#3Pn$gZ9Kn,cJ9kF:lE6bm9$WJK=^iQd6bVsZoItl5FVJ@
%%50j@ZfA1_qmrk55c(5K6+CL!Z&?NR)(\,$m>@L[9;iQC+mVa.^;"+[Z@Au$+Ob@$]Vfcdo#i($f++8e1cnq-2<9d/NWIU&jWZGk
%C\Ydd)afKM%?]1+'Rq85\U`d@3`bC:'n`%Y<SchPn3FRoi*9,#Xe?@[%bCP;_83IA1J?C",)@H#O,'Va2[>2Kk9@!jhBH%.GVUZ3
%dKV?\3.(NL0'2iq=K+$:*&B`0RTXY@M7tQ@RPboVG*_1C6Rf+u&fo!dGqH.P\Sb"2e\l7%"Y([LG.jSGLjJh6Cg#N"d#R/g.;R.`
%9@iFA+@DDj`c15O@joB_>(5(tS^Q-S1G(fi3mZl/kY@RLi7MGn4i850[T[L%.GC]tXg7QE*T[RJe_0&l3E-<uZ8h9=F4eT@N<q0M
%-*gEXWj`3<ET\b=W<&Y:Mf7=(%a&*hSCMj(/`"WV%M#[piCYn(X+cqqW<lY`lC(0d-l.$ql98I^LC7&IJqI^$+b)=oG+0H#R>(n^
%a:mA#DUZFUCU)L7N#_J1)2?R:HOWb\B(CPVN&W@M9[E*qPUb^d=1BVeAFb\1.+`9E/1;!$B-M%gJf8P4=$CXA5,^QD>g1Faf!r?@
%iX&4NN=-je\$\#_=$[q^`*(58C1-+29*CF+GDD6heE^>tM84s"UI8@B13<BER:-pZ[Z]B@7>bn.7pNq>e;N3FaWDHt#gHH.G?=GI
%DoiTTnFMs@7:r1^L6\h>h&s"NUF>lZ:p67WL0Z"p%4/6!`h_MP^lFsCNbhK?UP4Sl9h^)9VU"TDn<pK<:<O<@!og#1<h1EL)BA=A
%"K..gGO2+,(h_[tng=5lD:PE#iD)e>gZlL8>DY)!^W="Ur%[oLT[kR\6)Li.RiKYaCFKnOXfI<mrL-3NPN9?lhT"L3%a[VJp@"[?
%'hKsQ#eIT^K26cdX,%p%4@J6B3R]E0Hus:r^3W*ZLL!qR<MH`QrY;<o&Z[t14D^-=kIK_b?&k$n`e;;i@`'_,`iSOnH-P;'7K<@i
%b\0@#&%@)D5"FZO:WW'fKT6h6^6c]E8RoB+s.LE5b.7Lp\mI=O'm\^)qPZg?JV[4uFFV8(Of+VIVsbiKV2;SH7O[,s\I%EEM,F/S
%JjZYhK5JtFF$iNafgr5aO=>F;<5\_Z+'eI!8XbZFL,*Q/?C5am!&r;ei.HY(?c[<!$djZLCe&.Hf@F@OhI,7p"L:<o\Au#u(W[,+
%=IM7hPB0.bc_o3QI1jQY%@r9eIg:,%^V"g2;8jMM(:_BW@NV;P^j@Yc:OoeLdM8BrM7V"n>m\K)OHBRYs3]h,R1Tk+71$P8q[3tj
%@3^$/`3p>-\VMhcpe#aI%kH?J>kuW:3P70Y!=`6)89S;q67%C74b@C?hR'iEY)ei8D8]:.0a$%\0rsRGh,PC$E>;daaHdl-@Q:3a
%EcUhr%G*:O#.dSQ&Q[/4b5J[Q)j=.g>MHOhqD>ZH<B,_$KmmkI0s6b+Okq^?mSP,!s'$Q@X%WjgX/?^q4mjgsp@eU?a_q*_HOUL0
%cJ<9=Jq9!iE*NK0bG(9XY7,tf>_BJ?B+$oThiOFD\mn+Y4S<]N4`fgd+j.HFK<7;D0JSZoImh+'!ooEJT;%-]PtQCg\RslCcZ;2A
%JthR7p20%Je]f8rCc0,8YZ`=9*aq\ckV'H5q0VeCp^6n!4Yr3Bi31&7*1+`P0_J$NWh-h!Q=o\kC[8`;p4EUc%gL_%S:`$#pdI1m
%NE@G3=':kiL(#(t9`9N0%C#4>kJ^*3O9EEp"U:o4Lu]+Y#1aN<XYi8`W^[IK^H<e5bF=HdOm5`15FuY9`3SZs+]6jp*TRZ0Eq$d'
%(d,p[UTV5/i&Dq6kkrag5PI]B;<*[gF5u$>HY]*S[kZlD]L:=IJU(Ems/^j*A$22^rTh*qjVaVtS;fK`JcWR&bS:h;n*F_<',@_%
%3)nmYFJeP36&Y5i3r>rFC)6d)T\90B4Do8\_G-cTF8#f8?'beB*suu$K_"\8EE]^+:mP=q9*(:jFKbpJ**6u4HnS"'p"?HR$c6Fk
%,=\s$73D:,cDo6r1=@R7oJ7e3r-c@f;7Ld;p.lkV;3]Usd)XD)(0I\!PkQVNb1K/53>*`0MA2e,I="Hkk?*UVjfr<"M7!SLA,CQU
%'duof,?J<T6a&k;ED'CEC$gk396B=A-]1od*&Tn!CMqrMVsg6;G'kBRH$UB=i'DicZMOR9s80CX/:gPV)2V).ItBl^=C(ur7VIbk
%.!Et2-VIuVn:]T7Or1jGEM^kI@0gk:*'K(S4ns#+_`c^RV+#,An]R@d_1G%KY]0C$UG;\@3d%9'@aM#-]E4H?@;=p=jd/FY3_r@S
%[o[Tr*Si"Fc(c?#ePD31Yttq_X,O#lMX\Np5(`1kWF+'S/<A&rk(-8)SG#O3A?>(->>*Rq+\S5mnjasT-9jWcDdrLQe-G^^$9"-C
%W"4&I:ngGUmIW14HV;?UrkR^N-UH'*NpF]e0MEG[<qXG)((;Z-`b+L_,c5NR>t]:u&+-r8PW<OX",bjc8ju-_6C8?$jn6#RfV@C_
%c=Ge?n8/d]6?I(-$EIR\O6[OP4.DW`9qmtQPfUR($ZbX(6:X[^-=s[paS,P_R^DH<O''d-5\1/qp@m&3>L&[l=560.?#dI#Aabk*
%\]d^,f*sXMK'#CM+Yb"\h5i);2E9jT32Bfl!D.:Im%m7-d2\j]0F&7k4;#Ji0dM>>P'S@0'G6rcn9^PAb61fN?<H%Wj3@mjrg01*
%Or^CH>k^6658<65XC'bN+,YWFTcKQ7kTB]D1T5>99unujL[9QGn/JAXKVb7s%4dIbD-1-ek4\A;(piI&WlZaQhSTM1rmPi-GQ9n;
%V?c,/aX[Khr<p:qeW'7pOq%#>o=b6RY8Xu?&H,/V`k8^G):*9]mJGpcYAh:K>F0/]m1s]+Bb7V_5M/p-M=['TW8Sa84cR^3/jI4E
%K(\-nF-#i9kJ)#)UpsYkZLHo<H,aN,Z\3:mD)YrEW9gIoVMrJPI,fU>iV=nd<*F03aO%O-jN+-K#BG-QDIb?##`rUYS&,7VKJV?q
%Rf)mC\cHmp_<^FDGNGFU-pLINQ[WA;SRN$kdbtNlhtI@>h\S/[9oj(YL[`@Km].tI>JH`C>;t76q>GljlhNno7e'q'o;_fn4a@t=
%0dBQ7'+>7YV'7h4,;)\KX<2P(@AjaQ&jQ:@Ft^i]HUXKP2i$D'\)CWLR=QY>L&YNhDZ,nB#,m[N=i,SKG/f#W8Lb"u:5bV^rc*ef
%oH"kBE[tIJV-oD`*-s^Oc/'X#_DBf+:9n+,Z*6otP?>dZ+5N?tAV]S*76,d^G2c;)O1H:jRq`)#,;&)cQ!?)bcII3r$o*MQkl[c9
%(b^GGH%3jE"P2DW=%aDN]^<dHar53kiu%bBNiuELb/!5%dldb3l"LfNH6SI:UDAG0f.cVfB.L\;SluD%Ka;>'P(t^`r[;Fu**d9X
%iO?YL:!Zf/;#_Vr_/&UWUn<9V:U*cSkNT\%iUqN.>]Xk,7-C*c1eDAWl]MXc,+Yb;She%;dJ+S35`d3*b$<@-9D,s=m-/Z]j*:6#
%TF67pOUsD9*bS84cI'NZ7[iFp`%4<+^-D,?oY]-*9_XQ;.edU<Yc[Fc4r:J-SA82^T8)?[<nrs[l;`E161:CoV+P'+[!O"!G7u5"
%r&9ISaqJGKl(6hnnR9VbO1_7Wa!7:*q+6Hcn8V%s^;@QAB4.*THO/GOAU!H/af&,&U,ZP`Pl,*+RmG5H*LLV,aoFPj1@KZ_1X'8!
%mo9Ge9tkOPY'fKm@/fkM+`oA)[@mEjU(8W\h0eP6`ZJK-,=Yu2J^t;M%=WS;UpPL\]g6",a*JuuSCH9@V*<G8;7O(PT)m?gd$g6m
%57ZX&7]64hPBg:U7Q7)KWP*OKGD8KZQcB*@$&rUi?Rh:GhJWXo^;*RKhf\T'=Vq:.>mo$BgTY"%,HIJ-T32'dU[IP>?C@tg_XI7`
%H*7`8kPG1nk1)2?ReH$'rT7XOT@q>NC--,uq7C\6k[*O]Vl+P'2?YtQZ!G__7F':U8'6nAh%_^/[>J9E]7G_XVsb.DY!5boY91/C
%Gl368fYph.jP@rmL1IJ*07lAM8'h#llr&$#MIb0?c\n%JJ3@t$)d+Ys37J4"2YN^YLDG:T]O+"s&:s,lK7TbFeo`OT"O658Mc.?l
%DoD,uc/RMG:t2lL;e4oge$na:S49TBO52JF.hi.Rk-]E+fr]W_dp)fJN;c:):Jg/Iq/rk&Pn,A_#<NZba8*V/*4+8n<%-:rrLU\]
%;i\N<llC":bbFJDfuV.A_^3S/[W.,*'MQH4Lj:3e#8WiCSPAuem?WiMl2su,R!%NST"&OG&+TCCQ9-V+21gt'&6HSPb[G`fb-g>0
%nS#=CmV<6SlPS(VM0]!P^@=-BL?Wgeh7HpW9Bub*!+QdA4$V;-&kcP8X2'R(3kN^<hlWs%-&$Q'qVREq\"m]e&k";(4!=@P0%#'L
%rU,3%,c`9"=ccYcMtR?IB74+Dldaf2n5e74>X%SMXie.->4pGidAsE=H<B8=N)SaG]..SUUF/j[Sg-p*ST/L_KiDj\F*\q]f5$VF
%`GrXrcPF[Po3=F_&k"B>Y9(agE@W92Jk,=WSa,M'&4&X8d,KSUiZBau%n4ZOKF,?&#-P.QBnC?=$*WU<`h@]O/ap#gTA;(-jnC>]
%eoin>nC@":<.p^/gJ3\*:I+Of4!ejVbaY4kVtF:XMthRDY1F9B7^.<l3D*pkI%?pC2kTL1,gcu*$@V4a.^u<\)L*)[ZX-K2?I?7]
%ims[MP+uSR"[(Sq%,<XBI%si(3FhfL"&3DUfHrNY/JbUHE(!p<QMT>Q$LONOT#;W:Y)3#L*#6D'f0S9s\RiG5"Y?#7`8^X<;qbH_
%C-k.Cm*8sRmJ$R1buU'%=?"jQ$Cc]jZ)VOe;PP7.p'P;.F-W_j06L2_:Z9c8=rU\S1mnnB9u-6sC4)=eP6ZjU8Y59X-X$Whm)],o
%%:;6O@VWhnTZfGJ;Mm@bbpTA@i.!S:XsQ#O\&0ZBBIA-Fq^Z[LPM4>o:G.Z6JepEI#V+P'hH/`32*RtnbXbt8EOn(88@sN-6+#Xn
%FQI31jGqB)n^(FNVr]'k6\?N/]-J]+:jX%s[VHMJHSVc\ll+2rA__hG?*\fgCP6a,FCdA?Let8+e7GqH[#u"5.;r">Sr]Iq9RK8R
%H6nS/ceNn2r46Gk*qE;XLV63\MYAC3*4>6YZX$%(KCOm/^h>Th6>9-JCqRmU=(mbgN*/f@=m=?>e,(%0-(*E,V'KF/*HAg#NC'hP
%hE93-NMY^X/f&H0C3Fq!q6,]VD8i0[F*(O7MF/U!B7p;1W()j$/s2T1oK)ZY3DI7QnG`u+^sHU)OdE#J?&[,EY/B[qYss\H8'`OY
%e8fE8$CTa=0Z@)M/`U``^MiEPAQUUfldt!m_`EC,VBcIiW!h=7c6VhM(r&RJP$Q[S!SbZPha9IL3Hn:op^)9@epJP$!O6p^#5;3t
%6.6KCg)[r/`Y,X,KCu$R&<jS"?TVWo5-tTd>cNV6'pYN^MT?hkY+F=SfnbF8;Bb6EKrcspIlW;)O*;C=o;Fg4+bYa4SC--<HU4LD
%1[]]Ln!AT_S`)b+:Bg.IiZh&UA:fl;XTT5pa>S;WQ"trtlPP(VUt;>JJTV)&l&@)Hot"W`)0;.GosjppiFV.FOn4P2hE,W:XiKm?
%f[B*E"Ki/!rA`UrTT*MDJ$H!t&!Abq5l[$t]XqfE2-7Eb1R:Ym,$!!;Hr4/$0=BKTG>aJ;/aZ_dq)7"[BGB`YW5NH),D]I5gAtWV
%324(#7bSE0l2tFf(a%Oh?Lu_G1.E8O+P%S40S6LOi6H1@>]N?jK<q.A=rGlB9jjlEI@VkJqn,nfV&`Aggoq'WW6[X-_M4,iZFrI3
%:ET$XQ&:u>^rqGjL%Y1Clr[-n]cN.F,5hc^keh>DmU>]&4UFTBcPl?C)e^/kW$Z99MSYVVgZ`%u20M!&]/5$&]>"8]CjXeZqK]nu
%ZL\G.XU*@Und(?;m+7N&RI*@cn_$D,$3hqE'l"kfgja9uW::M3P%M*V5>H\YEJi0iYM;e-d*[ZugK$gPn@aYBlba8$Z-:D7Ali@#
%%![E.ad>D*8,-pZ+q)DH6Ydbumi1G\*J"oCmtbMs>Jqb!Snc*2i3(i9XQD\)?34k[Cj$"e]!T;Y,/]uJ<;k(N]-_Q#G/"SEn\7<X
%fa4K2WZ1e'qmNqa],a:NjDg0[HWRaTCKqboFeru<^3a-F*"hbrFd'3=LYp.VIA7$?&8-6/_fi<G7m?&Y@l$<G2`s+#H:&dJ"(0c#
%h`-,apQ3StR:p1!?\VTN4?6l]=l6I7"YshX\V@-Io^=_bZ/u3Z^9[Q"^2Wn[4j\Z[@[SD.=be-:Mdfm%BsY\6<eNo1>?O;Rlb`]S
%;8b>J8QQj0XpbSX\C49IHA5"H-;]Q'S5o?@-P8d'Ja-lBH\pun!r'-HC08DQ2t`TCI#4MBW3@Ju@'pb=#0VdRM_[3r!D;?\&cAZh
%!_t*,^IWI*>mWd)K\s_u4CSXm7%[1n5iZ0[mGScPiP:,+M5M_,?"%&mJ2bRg?sP.<$l"1SYMpQ.P]V[MSBK8`d1W?r>^CLEp@YkU
%p3%&;]co!^`3^$U*[:TF"F)n-0IZ:da+5N;3>u@[(g-B-&k@*^q8c;gqHR%aN9gaZ`-1e4n;=?)R#1J&`*[Gp'M1++iRCYmZXnW"
%,8s,!->EtQqj7VN,MC\nLhRnsD)<b=(mRL4[[MeI2[=Do)LVr*qh8-1;5hK"W>1SVIP*QLBl%&KJs*iQmmI4W!d-@BINj[BF*&6r
%6fKu_7%]$VKp"(P&Qo6_Rf#l,LXcO1I&_WRi.?7j!dc+40!nF8*d5Ap7bYSMIBIYt_qXZV?9-rk:UWn(MO9<3a,U/C/Cl^544#NS
%:`59o#p`K&oJ#8ZB"bDX%d-+k`bMg7S!T3+<9<Yi(3,@V)8hRW,+A;5`8GH;.+_HlZ!jraS\>\X$\"K#U<("BN&S'2O]E-3lJr7@
%"+V7sc,Ii[L%'?rT$2e[=)hV(;^3?&-Lj`iM4J`m6=G_Bjpp"f@+'a5bj^E#cg+^6X%01=/;iOu,_lIBr&@!5'@*YP["<P,d82,u
%E![#2^=q0>_b#4]P.;6(^6gF[nZ_[@/jm-rC]/SGf7\$Z=Pe_ibmO_i^)XQu_Eg;$k=jlL*bHI<ZYBe^HOtiM33buD9[J]kkZ[9,
%nk%>I-PPkKFE84BBh/r,OuT,USflNMV=$8"Tf^QS;&doGQ0_0091BC=I1dtH$,0\8aM9q2!d2?3Q:*C6I@34-c#k7aoT]L[26">&
%[iF=XbB'k@J%QKBUE'%k?X?uR*)_N8F1I/?IJ6Y+7j6/%TrepO\A72i)MrO:[25PLC"WgqNinF!*b?Q3U"`n&9>obMQGIW0M6>An
%hJ=2Dq':ud`HKL//t7F/5qg<u4+.J;r<qb6gC,JR(o-M?H12[RU*,T.$a/G;h8s+T]Itb"),'s$A`(q4EP.JF/NmMD;4iM;HrAkc
%YP94>c[Y]Xs6JSBeURSkp]('(r7t`[fDk$CrrocZK>u-u&sRnCgV<XCs8Ke4kJ-oKhu:lMp^dE(f<>5Jo=t6j^]/(sqepu]TCM%C
%MZ3oEni6[<]F+Yr+8A'%-b%fcFJt>13gk_R@N."mbgl$3DnQ^8f_*2Gqp1hb5?:!Dec9>\@C9Y@5b_V5Te/EIfLEQ%N'8*'p)[*<
%%_Kl2s7<Gp]qi.^3s@[)lmFtuq"Q8G9Amr>d^c\!#Cq,Z\&4B75AZ\b:IML/R0E=&nuDIq?FG/HmNAobe?JQ4^!#C#?[&9!#)`PN
%d=%WQD)?e0PDiIrn,(_=jsP0erQj;1eC.2V\DKan$8IE?)EeApT3m?KcK.hD-CXf'I+_%Fc:/4dd+cY=FEYN_>O0p`Ttg-ns'VZ"
%QS#-"2U[3uarX%+5Kod8#(Q?pGJ2dX,CeS:3PQ'<n)#e2Z4D';o;@Xk)cqs-\bdpXQ`7N-^>J-m,JEXCf=J<7T3k:p[!$2S:e#N+
%P$`._N-s*KCUdA.lks@YWSI-@>_j5.aqU=O)UTI/dJ8l*'&*SnX:[r0Y=M-IOF37VZ$`c6s$]:JBVNkLM%sr2q*t,;-8`F!lag)t
%]+k70Des4FH!_<5pSqo]]RTAhs,kX"I3<PSP/il:m%9DU]'P=KO',%_`"ljA@#E>`f5QeA`&s+V[],;Vn7\_Iipc>WB<meEHn:o<
%<p/qXqc!4ma$+OY)@Si*n&'ojF8C'+c6:%j#=^n5$hl\*(k]m%Y^STf9tu(gJ*oXN)r$uKq]*o"fA2YH+*p*Iqr=Zc`ljY>ilqU3
%I`',m\G,lY.47o$pp4T>"&=om4F^f8/@VGZgU%d+[-HkD:mOTHnn%><3Mau-0D$2\GO0_dJ+bFeW"h@#A^uRIiP*l[m9_uEnc?M(
%7.,!mHKVL[<"88=>s<]W_k4Z/aANoSo!:PU5A+sVcM'C@(aHG+](>_chgGFih'f$?r>53/FJk/s2rF(!%^bOC(G]_cK)EogelmO7
%s4EtAWrD%CS9%K"6OPif;Z)!653eC(RI2mV>*gH)$*ki,Lc(S8dc\WR39^VRX,dQg9VPdOmb'-!kZ8#oRnmu`<kq9sgT2k`osks'
%I6>BILeR.^>2qc"cH#?X2>TTLHEV-QA$joL/:"TobhQCX>,a=LkG4l,Qam7X-oZ'"_?hT0]f=/1,&.mOfU=m+6RY?;Uc5hu$jO*k
%B5j[aGOQ*eEkU,E(p?NWZhqkdPqeToq:]5;_Xi>7oC=ma4cHP``;WOHD3i'TiK#h&%[5HSI%:`M@Z/h$2]c*6HmA>ras+F5>&23W
%h=Ro:8&C18#dB</@a2CF`Okm`YoLr"Ui=s:ENZ[@QT*4i8leP*F?7-30d@!Z@CS^=a4HArn0nl/GkP"$ScFEkpQO'1HMJ8+Y[dV)
%3.cWc$fM^)d*.!0IS=+kUhIVgmp@uiG0V$Lbp>X%ens#Le8*XYllV#PYB%=k/_EK-)=X?1?)IDqiVPk6N@eocN4d^I(%K*XTn&_9
%RNXV@BI+\\nhP`O7)Yn">l]YNF9+odP\-Ikm,M-5DK[p$[4g^EA\TD)TZj9@V]d:HGVEl?c,t*U)jfE>0;$0sU['3foO?dXnQq7&
%ep10qqPTV%;l[H1a[e95C`j)JNA@7Cd'\6Qm9Ju;.gEd!WnMb-7N9a7q#-Z==5m#b@=[3+CJnZ$h07@,ib&#cnF`DkO^ESsp7BY`
%8ZYCKn2@"n%6d3kFS?EK^N9D'AVj[+V;!tTP<ku<(s[+=40Y6p>=]MO8"P;))BmL5SU6Z0c=*!j1qYIrMHoc-jDRE_F!lJ*F&Wh`
%.<:_W^e812i0-_8Ks<3+2@U%MoV/"F&Zqc!8^*=B8%P4&cttkP_$+>,l5=JCW\t6X$q\C+6d8%c(,[Nh5D9=Xkc'ffWDhoM8@5)n
%ENii[3']&OMrCJ<[HU9$62-Gn/_>e1fp?Q\g,:qC@\32uD6`Bh7^5V(^udJ](p+Ij!Qj)>V]$IWf=.Lhd;flA3`d6aW9d,HH:BL+
%8ad"g)Gc&UO@A!Ee68="NjXbs[;KGATrP`hm/+rl*:&9P2@j>)Cstku.#6FMMj<*)8@0Ea-h1G.2'XB%,FQE./khNH4%^V7fbW[+
%)fa:lJ:au3/jf0?A2S=ROeao^HP'hd9cp_8I?N.&Qbk9fKmDp_LjbYuBKbk^7;euZ(u=J78N]lgQ]GL^TCp"W7f^,ZRGh3He%0_V
%=N1A12gI6"8COGJ4aT\8i;N1F@[7UQ[R5`=S5ioTFVSY60[RO'X5&?n2IY;.j*C'DP!i:IY`AaM]f0kjl:)PEhnSXOpcGj6J6?^S
%kj/j'fOd)#Y_=Zj[bZJ-m5EcY1Ybe+W]!F]mF-6"PMb.W1LWh^Ng>i-WkBfSNI&Zd0fDKM#DOHW%ZiE)1A20PDM+I1(l1Rh&ld%"
%bpT=W72L.MN%)TN!@C29%Eti1^kY_kFpa=-.H<j)Q:CpAkQl3aJ20S'(eMQgQnT"a41PSJ@P!2_@?++c">>bah_kPAW)qbIYZf0C
%daWT-`4G+jd8]4d)4+U(9WVbj#8%Z/0e/5=VD993-55'4'$T%&_]\W536a8%OD&+O+JOL=5Z2t8?*FUY8YcD0FkU_PW^;+Sf$fOE
%#)4U;)MX".*VhlF:<cVO=S=5#U(Ul;lR1qfinS+R-t!t!3pDSB8'I8[3h0=R!@W5r1:Mh_fY%HMV3(V)igad2qK"MWfQ,!A2KMC3
%F,1r-<)0L0>^piP=d&ofc(idZ@s0[bE:a\C+;PfQ]d3alWl)orHosZ#/NSVakCTjM8mZ+eX&8Wp_5u8.TG8M$^bm4HSC6L50q!Rs
%KqC@V)T/V['2BZi@M88^@P*X`'(Pe;3%tR!3j:b4MKlLI@AK28CF[::%C'6%(7N*N6F96EJd4ta9eLeVgP=T3=b.6[Q=6jtnusFj
%$@$Ls/.B0!=FER<F8dsC/SP\9/!<a*%UrV+&tKYh\(@lUo4GifL4o)]jGB/Wi3qY*k-Ss_Ak&;3!>Z?0m(5M,S2D%<Umj\YQD.qr
%#-4<2]X_j7o;/jFnhE[(@O])A3<oVL(u8M-:mG^KL#`W#eW.V>9OVQ(guGRLQGe(:0iJ3ci>.]F\UC;qLeD@*Mpg?&0MR8\M;JbQ
%jsNB",(hs4!DFq7$R9@N.H6leU8pD>cSM+G<R?V&GdK.F&6C&,/HT(rY]Q]OLOZKk#]Ll[P9>r_.l]iGDc11OW_1&dfBs)6OGYg5
%>blEQO,EEX(,H+@0=M'D[:$c4<!f^13?adLS]ZVR:TZMb:5b!PGlqWVHpu0/`PqgNMC3$@Oe^#j3:"RuUP$W%'%)kPfT`o0Y3DkH
%oMp&90A)"5_eg0pf5$o*X2k."Fg?uoBhXpLan&QRgfU(_6]ZL:rnPdbP@5N\!CTfK9N4;'b`P;>KT6?g!"E;\lr"HEDfq2&1/FdO
%4hFJ-<9Vhj=I1cW[pIW`qF0;aGa$.98ue,,lsf?T9F+.L;bt's($&J[;-RC7k'8qje+nh60Oqj&#76XFS]](5Dlm(p>CWnCY7coO
%_"*Z>:"RWS[38l5==Jqc(!#l?US]dh_M=F_gp&\!\Q!me`OUGU)j!sLo!3bU-/g/C(2%K->,PiiJNL;\(_b>!(!f=c'oEC.+b:Fc
%E&3U9)0>0j?S.9MJ$F)G#<X?EAUBN1@rd5Q@Nd)MRq:KN^G6$P7q#s9G$n?MR=cE9>I;#>$+ULGnA$N,9n?dY1Mj7*+cZcFcBfMQ
%fU.p/R#oA^beXU+6>b&+/:O7F^hgf_`eb6Y+"2R]bC7ZdYJri;=Z9^=<,N6;a$'s*Q<L+YEjF''XFS%j$GI_2;-SFp,,^'dQK7T_
%WX[P^_ccTJUQIQ8fFZo9`1uO>6\U]VLCM<s&;3KlV"uA7m<jJ(3Z7(5frq[hgA:ep?jIcRWImhs9lSk3]\P0lI6pnYcHJ^,#Ne:p
%,Y<Bg?$m.%--+k(;=+$qZ>=iBLl&HDTKFh1RP/SXi^,F@.[[<%@tf<9n(u)g9$.JH(F-i-.l?D()-1.pXl3o;h'g*oO!Xf88D&d1
%[f)`*G?/L]UW#@ArA)W_9Vho-T"#=Qd%EdHoqcZ8\F?H,`bEf#S\a4(1CH"Y'AfpDLJaI\oC1c^2lg,W"&B+h+)h-1nEs.f%Wak=
%50nr/Zs@7[]"5`u;em.>jnX'ORGTF`G91thP6qgKI2:.ep!WEW$eA\G=]%*P\g@9->@$6Om&bGY)8\>5E/]5&XS1*GQ[\p?.M1hi
%p6baU13MON(E#T$A+^_Q7-U?olkLFoA0\I-l+/n!I9.F`/$.1<C_g/-b_oJg@f[E:2E'FP0+/.#>$!sqBb#V7[<&fZ]?$;TQ,b2:
%r@NF*@9l*=O)+he$5j`3'C<F@Ai?bS<,N%*?s?nK?KpW#n:W:CJr:cDY)t+k,)WcO?q/.W8EpoBa#*I/CbLodC4gGQ3R!@]Po7gC
%&d?j?'PiSZ_RBc-14U-n*_::C7P#TX3@"^N`-2`4>m<2l<i%=\WeV]/mj.3s#UoDAaH+J?&:5@^"@=o1;f)i('bhQ$3F%ZaZOO4'
%YSnnrji88@,[FK60NUcfAb$p:8:CjokDAks@;eAG.7=].LlG/-N84JDd9&_piQ19qFDOt)TW6;6Z!p]]eF-d`'<IA77dn-,dl!F)
%MJ0MMSPUHZ2SI4-"/raW%rSB`B(*U:HiY,a)F[(t>_A%k@mk)c!%Xe:Jc]f>0f?cg,c?Q\Xm3ZoCiJf"hT=+n-0'r3D-D'4k.TI)
%XlUe@?Y0s<MFlQ=BKp]5ju?Mb9!(3'::XmY"gr/)[/YIj)BE&:$L:O_"cbW<VhO*!_Nl=BL"4!.`dr=RmIbI<HZlM]UOOe"[g]W,
%#TWaW75?^XN3'R]#2HiD]')F\Un'QOee!R?2`*(#*f8UnJck^KEc`0G^abP&7<j-^fNLilJQumm8r/;8PRn6>,d%BG30&g1X/C*>
%=*QKqW4HL]kE=I"J3)`T`[Y@u`&8.o[>'Y93:l*<TC?N&'2SjMBn8TDX,fg'<`<J\_Kn)*Xg\s"#;5\jAe>KG%5m]q:bWVL@l@CT
%G1'X".si&c1g5S@Om1Y*K7dBC%*Yj/rfm(XeZ1TPhb,*j"ZBaqi.4MrhMV8#"'nMk4G/AGaJJQMX[%PY-MA816Y3dZJ!9Ud`.eJI
%[u49n&SWJcB@(D"7?6?WCc:oAG8B#>i]QeGA\$hXXN\&u?Fq&\C-Qe66$DGF#WerCf5RXTiT9rNdfI#6X_f=jOjGh1ZV1fJp<33-
%k)O2G.B#;j^K5K[Z*^.sDNhbpNl64_dq\cjn#HDZ'mEYa,Y_F1MB&>!ea<Gi;M[rko:ERG=>5l"]X`B`Mjn;jaG35rP3U,4O=e89
%<S=JISFcVUR"iPm<p0/ir9=ag*dVn7IeCRf35!kOTDMamc9G"'B?@hFhQ\L0jV#01Uu5LN+dPR<M7q[V&\8&#$f0s:i)H-!:Uiu1
%P)%oLbAe"<lK5QoJn%#p<uMZ,nPm$cfH%0rW_07pEkm:FC5I1*2]MVhRjB%.4302\]]4GU/9ifT%V9miS%ia.;X6kL6IEMt3>#rp
%8LZJd]6b!WAZL+BO@:D>"$<*528`8<3jt&9:>\\X.`6'`^e2Z=-FFGMC6J>m%7(.uO30GG\,sj41%$3<5dJ9G+K:-mPM2VkmJQ63
%fca^=&nUG-$9A,7R>ZW3.*b1F%NCHg'flB#FG^*f_[(NVS`;ic+q,IhNQLcU9I%jD/FKj+o)a&;SApsZKY^NO+up)l:R-1N7Tn#H
%Kdme0VDp429V%Mj$6H/pX*M%j9Tt-V9rVV1T"7ci)*N6Ti:qm!8g3/")VRFYnm[0/(3oE8co>rD(1[K-.)#e@^dhEg*(ZgS.%m#T
%e2Rg)0o'kaRUif+$76EM'Y.:Lm49VLQ&S-0K`1ZTp*i&PB7%.^eIO#>.f:L0R0S*KZOB==0[SSfPJZ#pfO>dk;'0-cNVA-Ko*1#-
%[1SeFef*]5)hg2NX+pkW//X8!\V/#6mSlijof8gScVKmR4j=ER`u5k`b9(gqPT=,/[N[DV2bW)Mr%3kEj]C20'AR_O0RMOH1kU1g
%Oli)?8X)hQL_,FU7U07C$)uo[LoE,>,SZQu-=?u%L/]Nmr65h6$(e,9P1gDAi#!eQTqQL'aWSrNM?m#LKWDRZ&fLm"\^UnKWmK9b
%Zk@;]o4D^"FJ]@VKZ'0P%D6_m!"ZX*Cg`/A!&0a>;RqfAnW>):QNYVJ/o;c^^;IlnNk#ai!&LX)&7?WKl[UL9(YXV3'`*]thI:U6
%F%9,#fiDd1F/`mT3O8%rTtE^QJ70Q8c6u'dJLXNUNAS(t>9J-uSN:>ATl/nH(Q$,<lDF%a%K]gTkYUP$F9`shZKE)PM]uO["\ke5
%$Z%(e!8,AW915&\M;@b[WkrMs5oKoI?^".n@[9Xn2pD6PL1Di@^duaM/u)jS*P.^iQBP:b_>bXD0t\Lb!L;r'_k'DQ7;^A^'UdDe
%6"+aQ1-ROmBAb9gAL7Lr1&&#@BXWJm77%38/9eQ,KkW$/U8_Z7!-Q/TR4(K0![Cq/23f:\"4&BKSk:SCFuBJ8JX5l5:d#bJ&>pFK
%?t^'L:9c'DR"[%V!?W.LNEpfA,)FX3M.-'\l6-N$VSlBU3.ickZ.*;24p,QaG\,=@fGm01/(8R(87To&aDEZ3R$.%1PtrW26n05_
%["WKJKo`QB*hZ%Rc?$*io6BIQ?o5l;DFlWtiMA_TN1lUE'V^3u_2*YG7oC&GeXM/tE'+5(6l&[@k:u^]EEr-bAYG>M%\q*l6FG>/
%`U[0=/nHsN6RHSEe%F#-:2PPb9gp+kTn2u3W_*[h+hWsB(.KJ!0uZK<<'Cb>eJ!37\/m63RWCW/n,=b?`tT.Ug%'XN@22?/f9jb8
%J_[4[Y4"q#/-H/bbsu/R90pC->[pafg-PdM4DUsd`>p@00G_@/4_Q1!i(o#;BjnuC::W?P$><b-$7D/aX]Y4/>u6qC)[4)7<AFZL
%Xahq0HE0U:$/6As</T?u60@rAW?8(8"IOr%8LXa8M.'R(M<kMaq6"JQ$@i4hCseKE>Zhe7_q?(TL]XBl0pS>_H,Y?*KC)^,C@,$@
%-FbYbbEXAn`M'@ab*--`)Wm#mW5TD%HF'bh+!`RAEr>/jMBJaOQFb5;>VX%D(?(!Qku.-oi*e0AEXLlmJ6:!KnP#c*+l>R0#8bjr
%fcK3gcr/p3J@Y%JX/#eNUIs)?e<\TnEeHjC`l7m1PCjQ*Nq`ktTTMR:VK7pDV2B<Qn-P[";$1*!*:VC\0KfGZ/Cg*7kLfL$j4K+p
%0[0`f3ahASV]G"F$KQG1:0[pVWTFMV=4PS>[Dt7i)S\8j,j)Dm.Uo2>3i/4eGR)H\!?Sa_3=8?$"rQr-n0"%c0uF6=RO.co)+5qi
%WlLsW+WZ9=6(Na0.MK./A?oB1eVEWVP9,BiKe*o2eku2T!oqX.YneE<C96Ne@6n,ceo&,*Cmm_]aQfSZ.P<;K9..%,1am\p\[Eu*
%:Df<kAF?"&W&SQS8F=M"`gR\*Nd7!);ZhIm@4'<R[eCCs3jQhV4pZtEC''!R496[20H/i[*U*U*54NKbl/Hna.Yfhm?t(br<`A*?
%BSmiV3#B4qH7hlF,nrWfAj0_E>%uT@e7mIA:+MK;fjJhU,bUIjYo*rUSk2kT:2l6$S0k>=b<UDFK/g,\KLC`MhgfhZ1"8(CD-'[Y
%)h>2VYuDRo21S&R+PffEWA6<(T7E&0/XFQA*e4WaSY5mQ#fKX+1gFpqpei#?Akclnke;]8^QsX[.\-XY$[HS=_\iq;;h=\5;7@E%
%%Ol#p:FqTrW34u'0SYYq'Z$%(PL,EG.0QnE=id.gOORm_U9)eO[aW5&e4d;o=j8pFfM.3k6fN_\MS6G$F=`U"-A-9=jbLJqL5'`P
%WDtD/Um,V^6Hu+PmV_,7[%Ei9+aYf#CJJF-fkie60b?#f0cqo3E"qBMEsp(j9W"POa>cTj<a\[fAfX-uP)PagUjPZT1+(1H;AH6)
%B399tN2G),,_Ka4=`NM:RR+M/7J'j<,-tDrV<!3__nhue+KH:"2itEriDQA2apG$L&8%*\c!c:\8us!A+fQIT@(8ODBJsh.U)[$I
%G,X"/1GB=W(df(Y\EDABl_Ik3Bm?cc%-gl1V$8u?!-8Z@SoK$>lr,2R=4E4MXa,"n8k*r\Z&Yc7$s!t,3OS)X9Nr9b16gmFVCK""
%8L2Ug'X3oJ[@h6>lW<!P#YV!&b(r<aiQ]nd.K'P'65Lsjj;0Cq#U[h@DCi,a&Cbj^6_;E2E"i%-b37*IUPMM&kof)r3d7U+W0gFi
%*Ls9g3$%9-Z<RNEfh6R-,(:o^^7QN8nUm-1krC?.*2$b?N1HJa8lQe+;RE#k(Y2:k'+_StDi`2><]jF@V.Vf`dfmY2K*6HZ!\"^7
%\X2jZ;ln,qn:"seT\r_bV.Kh#arE/P@T2jPhQbC`%XGo73cNLDa+^,$ksp'Mi*Db9oH<p^B<3`ti>*<(J.(NeXIm>,?`K;[P)#MD
%PVf^c.O#AS5"_ZGDb;nIiHd"7\uDtMgu6]8\Ts\]&rt0Omj2A)L91(T=V)g43O*YCe@R!9jI5`opg+P/8%B=rO6n-aegY\=n;n56
%L0CLVKa'%3EDoug<,k?BP[V*-pX[;_pPsc+1nK6A+@2Qo6r['=1Qu#D)>#`4MP1GK5bY`n'7D&tF$ZE3"KmL_P5EVkq!^Q[5pS>A
%70JQ#mhaBXBmY[,S97P'PY2O<N^^Ft)Mn`kq*ak5nFl3>%lK=c\o!m'm=]8A<f[L,g7`e0)0=D;Q;'aX(Ih"RPWH*22!l---dk8B
%=jjc%0P/'oXt'Kt'p-F4fcD8h+lpX@$61:t@d,&u1[4[RF%MS6C.X!6f/u")@K[Bb+JaVS";JHP,RJSE_XZf_-&</SM';U9\mE<W
%+KV0C9ETT.-kS,caqfQ=5QhEn/b=:@5g*u]`*j9-*j&1\'848VQQ/99\sLi)<&.lj-9Tg6Ph1^pZ0p+^TiL$)R+k5P"p-X_7F`3c
%/1T/%Q6+7s'_(*SlBt\6l'!NGQuSf3S>?rK?7;h7,Y3Ut7_'?s`2j3TLe*n!?Nl\K(Wd=)+Vn(&:Ed7QR)^Cij!h;Y]@5<k.[;q%
%]fkQj?p%EE.U%i.Zf5]uL3s-u(k-4p5#WH^7;;W#a:o\.*dk:"&"uSu>_#Q'71I?<qS6;)dkHM%iL]q:k>J4oW,Ho.6__\mYBj!d
%oUeKnDKD_7FHP!A)Q\2QJY>f"i<D&j7?Cplq!e>`CTd^k'WU],"Z(Xe]`X7-M!d]4h%.o(^pJhu,E.kbODGl#ojN_tAdAg<KG<5!
%&1X!aO\kHGe6-`C_\D`9FK0q_bpm.b=c*CNM@mKWTd2(o>$XhBCZ$XSBdXR6PjiW/#t+/8EB.X9An!6400'Wc&2H2a\I`Hf;F4'T
%*/fM%%tH^0])o?#EUOE8:%PBAFUIGciOlI$,Re'NL]Ip8<=XDAWF8Q[GSn.Ud`Q8N!L-`X($M0<aO*s1J*)bF[jfgQ1D;I$AO8L^
%U.>hM,RuuCYZ%K0*?jTVNhfE:5sbX5dE)1f)('8&=<\c!W$@3V0T:7VOg]!9?0(<>FL)OGU.LOZg$)F_$)"^C((__\0gjr<`_hR.
%$p[;X3+TNidZFH4UE87l%3loK&CY=`9LV1#<LJq)"qT(>["LH0"/KlQ6QK",:cJVY?A>)n*IeUQ,%L2HEBSt8AS3rK%-\bUoC0Y<
%TGd<7BX+:e#;tXsY`-F9?OF91KLep,A``WAPBJ0);bG8pk`(B]`%%$r%ZH2$@qOY,+/)ac6sE>Y9*X8SJn]oL\7T>o8*j2pJdd[:
%YW'9W,\.%NoH7EpqTklU)?d2u3Ea=1FPmHj=3o_*^g#0'6N)p09Tgg=RMA/ZNodf[]#7/Fb_7XDWJjgqd$U)]&4o42?$(KfX:5FZ
%IF/<.*rfW;fG$=99e*PG5S/pA,:<sBE>_n`+c7g<E=W1ci/\^8Au,f3#'53'AjOFc2drkFfd'soL.JLgZ52rR5Qo74Js-HF2ZZVa
%#h$(C'fp(VYYAZ^aOs+@<<ac`,h"5tX(GZ_8-9:7)+<-[U</KD%JVP";1Ws#R"Ye/6_k>)X[d(:'@*'&f:7!%S9M1bj5Z+:iiK!p
%E]8b%ru*dD+:A`o&]FYXl2T/9,.C0VWAe6N:_kU7btf#i]eM[)@WDa*VNLifC;U]2!FM&/dBX1d*UpaMAZdg'62eKI8/]X3F?&3:
%$)Q/)Y6/$c1>L.0g7Z8K!n%GfhOJ/$#k%f'3.-*-Mh1-N%dZYuBFR+do":DA!XTr38/gRsRUitfLr#q5&A'n5:V'NSd79(M+pi)s
%eE.qe#)nN=11cPpSe`;W,^+cLCQ:/5Ge#4QDIo=Y%H46pQQ8Gf*bHPgk8&l<!.^_AZ.kbq"V9!WRW7A<(g_.iPAT@HlNS1>d#qT+
%57+#%'fSl:22)'G.QKhr9i=)"+h8t?#B4#V3B<Ff_F)18EDZZYetOF!\I8Q#TkMr9TU-O<L`hP1quY.Y.Q7CkCn7VE`(n2S%?YdE
%FrNC_F+?)Yq:QS/#F_7n4LAoaL0\TW$1_>c\gXj&=@uAfIAWu\7+[86!tUA$3\%Ml2AAI#'..)?n1sQ(Z0`LPV4^#/j<b$YlQH\T
%+hVh]6Kor$:)@ICH;[,YGscR0Z6hqm:b;X#o86,?Up[D7J?7e,HdQ5H,BA]fb;6]%XM%1bG67oCKGh3Uk<>Zgpo)%'$9^Ln5g^PS
%6o,s7T=T5MQqdYI=N^i/]f#,u8MeK(#g#QO%f`tmK[cp@KHr;kq?8%^_"!1fL0ABPQJt;82-_c65^3\^i_Ue*+4=ZO)tDcQb6>W-
%.NpmMZ`,(0MBM4@]+0Cd5+toM19o#kS#bd%(9Q&-"T]\+_CqXs&7MLYY!'ri%;4H;J"<jP'Zaa^X:kjb^IjX3Ku-=GP6.>FH,uMa
%eP@U93e4CR7Y4fL;&CMgT1+uNO-jPpKAef."S,0,!9R]]BR5]\6e+F5dga69n&1r_JffMg`]el4Ac4l%l4g0>fn5BIY<(B3QI-^*
%`OEZuf[7_L2"LpMBf#R)!B4P:^^V#8</hfK/Hn[H#a?p!`!n$E,2+;=Q#F\M/:#J'9h9I7lls$S!K>HKeEt.K_uA$6r<*G;(R/Ll
%f`YiiASZHA7<WM)lH1=@A4?9*&Iu)dl52I<rA;@hI`V%Bk\\Q+rGKU9Bl.e93t.]Na:<j]`d0RV+G6Bk!,6U55OU&3IkZ9t:,9^B
%M?s<+.e]GB"i-3=)jV].`X-Wh6"HU#W`0NC&2dY8,%RL,0lZUdU;N3u8I.pDZhc!V`A8M"%pSL4#q\J'VW-\B*bA-?ql%6j#<nkB
%JE"_bY)2?YboG*+8AH4Pl3P=[1=WGZd>.tSe-^lk-8G#qiC&mJ@sEZkN+;t=Z6_pm<1F=/-JX?((-FjI.8h;o$$#.O.$V#;'[Y-a
%6^!9N)?</%e0PUl+c5O..-mc"Sg%"4fh`hedB9_ZNdW<09*"L\m$8,BnJ%U"V)Y4PZ+ULd!n:mSQ"W^OJ9beco&G8=#a"%s0h7m]
%c9W&Y3+\8>(f<clJ?`)dpDf;S@LB,Y'P-d%PS]#E4NLY8_J\aYlC>qu1Qt+t=J@QS"V+$f"dS;6pI63[G8%h1;bcbGI@7=<K4[6M
%TRl8L+a,9,=,-0t&q;bR=T'JoA'%S8Y@?6RVM2ud3CQng&"uCQ5SQ2M8L"_4/^3I-7Y\/8EZ6j:!K#IE\CN?eV\c`kTGkUi,\"_t
%!;.TOqB.$%JD)@.0udZg`o3Q2H(_U'kscrD%*8H:ZB-3+9*E,@W#ek+@8\9=^(tQ^L+)"ZM2$g.Ji<4pYrE73*J]qMi0c:f/Jf4t
%Ab59ra`RAb)Fn>P77'?H#Ul7pI)C$3s3MU:V[SRl&5I;&c2";ps6ZeW'pQM2S;2JQ-2\JQVHhT$0r-'>D?pZH@E,2NMr4Mq>8E;P
%%`kEdQNk8<@8E(C3hn>N'/X/uSDpcI\b':nT8,W(>7Dd^_[hGf-?3kj]AZg/%Lu%N#GXt]g@h2M+E`?KdEP8G#t!;QYdJkFgQht_
%j!2"/K&/*2bj_=SlFX:+k1U/)B0B56H76QXHA^2.1oTNf4FR.6ci(btg2M#8CKQ,5pGZ1t^\"b8c1<$4K1_5IR"1%o+&<p@\hel&
%0>'FTfeEFkOG+T$'?[HS,!9F^`l(HuR5%/i+KdK#Cdro+4JlV?IOS=(O=KntK1[F-q^lF@3/kHl^'R'5=Xs[.G/BToM*12Dqnms0
%.:o.aC-t13-itX?&6D_:5nVU;*]ko1b%*1nRq1HY3tRr%Be<,Amn08uH$uW/&d)i-!1IEg__t8DnW4'0r#_Tr)]4Ni<5"s!i`A+X
%jAjKT-VHn6A2d[7.1'`m_)EYc"Te[,h?;*6'i[Eua@)RI2UkEW&d6RVR6uN:O3kqMm3.E[a/CQ8&&H&W6%B5?XTTK)UC*soi3@5a
%OL\=Z<7MR^(.P8"<+%kI`Jo_L:I$<1^;f^flk?Lo1*Xi\_!7-N,L<@Q2EnNWW*"^?BkU$1>t$K_[R*7n,e#5Y;CZ?TB.V,,_T=PP
%5AAc#N.j@?/$aO1ZUmKLHpi)W.]JYZE&nddOsOL:i1V]ojihhbOV!R97GA.(5BpknRBRX%7AU%@C:^s@95UK?#b(s-MK60E$35mN
%"T;*hj\D9!_K9+9'7l`bZj,<#_+a46>HY/>=faH6`u=Xp@llm\mRb^J$(F#mr@($f,Im!\nu>NtM`e'L$QpSm^u^7n)c%[;=2:Ip
%[TQEk44bZ-s%F[<NT)CZ-11cn^I-'3KWHh&UEjgF;5.M--RlV6r*^P.;@Tdn0Yn;o'?5'DKe-aX_),._Zhh:ua[/72$$VIT<tPS*
%s-k";8.?;A-$Im+*X#0nd/SWIUn\+D'I+cRQ^?6&Sd_-$(?OHbT3?@^hnIT$/:q#[KH-9PE]e<5Zo/Y=pcU'-;tN@W0(&q.'bll?
%N+6P7>+t(63NN=Xaf\UBAht,@-A`%]rT.7HOgjtCfZ^9!\Eu>bb.*s!(I1\s4:%<h,Eif%TtAj405tG(Qr'-8YVe/B[QLZI^8RE!
%grU@(`%"?=*s9J&fe]=D/b>-)A1Qd=a!MP4ePQU8$Z'@De6_Dg2^BiO\^VbK,p_;351N&mC-rnB9S4;glr4I+X&4(nS2Ml=%;2*g
%qh![om\MeX?\muQ'lbfW<*]iR%di9_Q2:V7;M_Z'=X>3u,5fSlD8_CTEuZ[1k9Qlk%^',Hi_URs3gb_1H=kj7OI1+W+V6,\IM=lL
%]+K>o_f/SqL6`U=&fG^;,iVeH$5'5F##D!o;EL$fc7(3\#:e[Y=]5W&=,=jhQ2%O1jP<@_P6$EoMXm^',Y]S3ScLnkLO@]N1:DC,
%-Q06<@\Ela%upMZ=L7Ku3=\+[a(3ib-$!f#ltFH3#Dj3<7$qX%Mc1,LMc'"?"?qr`b!oZM%!&H2aQYM]E^=FZ$N"QZ9pSCKLGb;$
%:pI,:fd;HnbT">rK=RU+SFm<["=\0i'ps\L.@n7ud4lkGU,0V(S(Mui,ilqeNKo0:R&_W]L+)^5j6QTuWh0S@.^EqnPkL>51:eTV
%(UJt/]32CObkOGd3t#<%0rZ)LE$M2)+M/::k$p!C1%@/2:RFeJ#[,1B%s!;hmgYb%2;W&c%SoX%6'ATs/C:(EA+Ior[=pT.cjEkH
%Sn(n#Op>#e"J.<ifLuZZ_*`!f6LP0[UF5;&R#.%EV$m_\71N)TM%FG<o*Z'eeheTok2kR0EiDq&,Z7%-%'e&Zqp)p[haP_RCOCdj
%:=;Ffa`/*gh\`B2NQk`=:_fH[(W41+G>&MR8A3pBJL$jYYdt$!]gPH7)E7_+'W^VhN;Lsn*q="aPOAo;#!IZ/Frh#M/*7m,1P`hW
%@VjlpL@(h.#I,BU/eP3Y&J>9mbJTT2:=]]=rp+2#ec8\YnckuN:^oTpi:jc8n<dZ%5ms`V153s9#$IcoXMsNJW)1GeZ4SpDVh_"M
%&U<f'W!jjr3,X"?LbcV9!CYY_$p\<g-0"4-*']<ekXqf,jCWDm49VnT<*dQ%)/j+*5m.im+QI*fdtUKZ+j;iT0/O6s6.AcQ':Xh<
%Y(<c?W3ql11h8>scchht5Sk&fg_Q06h^o@4?H8_4Ael05(6Zn3P?@'k?mq:+@uuM$p/rSX=`fNt8aCohpt866`J]:=a9-`Y3DF$L
%0I842AAN7U1GU]6L2G-uP^ubA<,a+M2b,S56*k#k#3%O"$j*#*Z^7=W<g`apA[!T$!Z)3o^O\O#:dCJ6&>7jD/A.p6,\[mZ0m:A7
%%4gaX1Lc0T9.-8++AasU'fLRDa?YI[Eocj(A1gl=2/e$O+(@bVW$%dh+#4<!X>2G]@P_bAc9LH1EM1oK6l++)UZDY<*015\JI.(5
%#m#;X1*UbE_9kWi;<=('kAkRJ`3O5/]p\bl>\)q*kWKWno3"CDG6mi$)ebnNKJb-OprH@djWG\:r"!LH>-q9OkKLE5&f0"[@`%+<
%MUEJF@=VsVEX"RQAd5D)MI!T0;Y"B=R?-"=]D#U^SKu,ZA(bd'G6phVpTY4U'/kSI'Z*#/3C.5!8:IaUO,6a1Tfit:F%-jME9+/q
%9\FK;o3s(A\2$,+/)tVOT]9[KIq6+2$r1c[W[2cSphkpI&NHU9C2GBo@@ml8pEHM-W#ng_/;d5u]qcW""C*4b^K+!eZ/"]>(P])6
%*>#iL;1[K5V%Z%RB27uR3X-'o"Le](jX.B,(uUeC>$c91*=SIs.qS#PBf+;WH&i/%M#pY=AMM<[$N]oG/DpVs&a*sF5S\iM!X587
%n8*&U.PV$uJI*N?p^nMV?[28q8D%F&Sto=P-ce(Dr2Lsdf`F>C)Q?(<;p;ZBDIB)*(T@Wl6g1E[@2)0\g+DHo-0(@k:m9H\F@#HT
%16gkd=,#)r12F#^"CV$1-`TUuP6IK:4@Kt[^]pbInYtrQ36rJj$RmE2Ng[mKA`O+Vmb[3L`Hb40!sk(&!fQPt#N\2MTZl>5!IeA9
%o_O%bj$3HP4=`HJ\K$pA]JY7'/1%&N*u60R=C>GqTIl!k*Ch1A=Xp^6G\^-=.Ia)I?"@FCAMZ)&=Lf\dVd!_r&nHk?0JF%>Jm\:u
%L8:l'&m"TB7Muqe-ocH4-.)'_4']Wl`p2iBe!U^MrniOCPL?9,D7H%YpQfh4%5:;'?"r17M(!fY\5^a8Le\U$la\n9*_O6K)mMjP
%rKaOigbIDi7KD3IROu9V(kYk\@H]Y=$UAK:<S*J2!0*\8m36-E*;[sdo*k8a.GcTJ_if$i3'e-sX??e%$p7Ak(^Qb)/'t1_(uPU4
%()6MY+bDWI2lCndS2>;gqT.'YM/KF,hiM"d#-8$(><tP'MhOP0)#/YO$s%c:MA&%DO-d8WJo[$[(4n^cEWD:KP>DlAQ'3AuFrTVf
%&H:Q)q%#Y6-`+HTG:<GX&&gZa^oCSd`aU[?Y!VH_&,N%D@O"4&nC*1rF>1Zp,*,i6^jLh3'snJtf$oq^'HN-F/J_%klVGW:,.<Ob
%(h:Y<*H5n^A^\N$`\]'lYuM0OQ9?c[CYbS>bF9^upqIPf-R)+])j*#Rl"M&^_'u-UE[M@GIK9%5cn`W!bn:lY$@m!BbK*K^EZZC5
%r"2_:GCcoW]AIV`);"Ek8E-PqmuS&Ajr3:nd`Wat+U*3lQ@!P'].Q:5-^7[KR9/pLOq"FsS0iLK0@ONMb:.QKO(D\f=HS;h1:6-W
%PR6lNA3GJtAuW_A.86)c<)?QHXLS@e5qBQ^8@+c,CQ%/:e:W&$3C(._VaW*iX@pY8WaUZJ,gQ`)nhal"gN=[?9.FpG!9_9RR')ZS
%-h\D\L,(^/aGgB=8@E/PC"0qD6blSp\ZQY.,p?6\7kas"_F,eQ$g8^*E^<n\)*/q?/QRNZ^dQT\6McUnn.(U1<Ba!q&B,Z#6KfON
%K;+$C&Aaf._?P]OKk/rS_TKM;Yt^`O.*BY"]J&>EB;)Db#\"9]N&bBLjlfGH6oi9VId@&$8f6Z@"CB!W.'a5:2+Ab:\l.Ai83N'U
%_?.oV.>SF#%kl"KQ#eQC)o39BZq.D-&LB)d3%_[(Otl&oN<4=&,N8h<Lo`-Js"Hf7+s`8m>Rup,!VLCDB4iD2];eAp3!95CM[@18
%F_:A,Q,<tIcq$ri.1tgpK3W+.k?(D+`"IWgl,9`VrS8XE=G6NT=>IjM5\$W-PNJ6fRZ@ohb;1Iias'+&JhjUK?3HZJ^-W?@N_\At
%,a[%6f46Mu-+n?A(lN2$P]CpRoTkf5RfV\8,'"r#ls.h1"2m$A#h3Zc#2a53E+VeNYLssV8-pn'9--&taN$seF]8nE:6jDi7Bh6/
%i-_O=+#^CA@sh"pLFl%BDbA0aTtU%-(eQ7)1nM+*Z'd,\)BLaVo5SDM?9Dt?P@AOO`M:H.9h^D`l);_L`=d8l4DG4/HfV+36&R"3
%)ipGrE`"/c&G7e1Jn]QG>).)'e>Lqe3bjUsc>J4]9kW<(V2F4LLK2,BPA<tT6lU%hEloOl2!LoZ9Y/G&"he,qZgphj`&C],&*==A
%+/3Kn"^XdjA@hBbJXL9"qm(_dKEfNR[$62ZMWd#A4GNmPGg%[_%"B0:UVDA4LM4^P"(-ZX'`K,mf^C``D!UjU]>FgA?)b^83_YC9
%m[)id3-+2F8-rdFK"(t:rG4Ca0,'l_K>9E<Y*tkY%.BP@"d&qT1ekeD9lT?0Z_@DN1^(pe1Wi'&AR7A,82-]hgkQQD_UXSfeKW!-
%HU)i:+f11[CKs"PAB>27@Y2aep_l4!!Ua'eSC>E&NDm%IN-+@d$Zg9+Do/Y]DeW36#Z'FZ'MuB/$Ao[,7$1fLM@Da#`+!Oo"@8^p
%@^j$7'+4ag:4Rn,r:l9-P&7BDbb'Cj[WD-<FGm/.^`c4+90a(L.eNK^gJ9)$=l+Z=<g]?Y]4JK9^%JrC'TiJ)507lkNKK.:*%%gi
%+6H;5#J7OX5.sBb0MmBA3PbNg\[d@[%Hn;1&+gC@5<J=A]BOSGgJ-!7lln3u`X_<@[h`)W>Rp2X7,+hnB.J5ZWQX$OIqCC;8T[!T
%++r5U,N\`em$GLa%P=t32j5.(%H,*U=6\J??qM*OG<%C0P"PYmc?iXpnU$S_$PIcc7@KNW68$5BC9%jGSGg;LJO;=b&BtIjBsoFD
%8eE[UBh/[6Tln8-EGa>/GSX`?5o)gQF5:o/KDT@baHW>dVLj\Q/u9OU(?KF?Bil7f#%$MkRQlVA3t2c+P<]\SIuco>5Db9mcQL+o
%kQOgLQ>*<5KkOq&fg+IL*TtfW7\qf=^ju\G\tu$m-uDe!:kiVfACQ3WfFXln\'pVbo!bq\cdQ_AN_e)48m2B;L(VCJHr.HH3WdGp
%>)$,UC"T#@>R$\'dG4oS'dZcHcFX=,,0k+\o*u9XX-&9Yd_,BWTK(Z)cqB#oV=qdj8!P<_+9.R0mb7tH\u8>n21G[tb_H0c=uXm4
%!g/-AL]%iJj9R/@m&>Ttlck/jk=9mX0r?MC`@6.Q-s6QX@Cnsq'Gqj^C>i#Zk2rB$]H`@;UN[pg"C;u?Pc%;uU4e[PT@pe71$/0K
%QJgWhFkt:3C3pmK"D-HtDkt#u&/r(Q*5[>]2me5sPSDFI\CWrMEj,V0iElP^+JdY^P4o9iSQ8t@Kh"`GLcbT9GbLc0U$J<$>k`O!
%pqS6P/`-9$I,C]V^;52"GM=!a:dd_1g7RlK"BKXP\Wt(f#t102Rc0+:0UQ05$n4a`q=$^8Eje_4NZtGM;nU,$A8QA=Z2g2"AbKPk
%,'8U[8]@*Ii52u>:'j^i7SP)#^=Co\iSID)O.73/]u*1b;ag&L<`p&4T'+N6#pnhM=XV0rl$fsIfZg%TN\[(sc%`5R2?\_<,T+lg
%V+#*Q=-^6@`@Ug7j^F_s]ktVWLBRmnbaX/JIq"Znk1g-/eJO[rE@=LV5Xo:Gi$$UcSlgqu[bWVsV'>D>dk(!(;!Z$,.t7:khCQ%2
%OejP:2]9Kj`>"][p-I9"]EH$<N@`71)7-O\f=KE)d$h0_Y90fD`Lp'L28nuLk*]0-kK$P2ZeSPAZ/&n\+VdcZY^dELl@bBUOGlqd
%(QeQj;NpZ=q!IK7qGAmL>d8'+BOX^9:`me*2@Bp28-P3#9ooL7*<jNuDS_Qk[g9//D+B;QP0@!]fh0/615PeiDF2E5-E=r(;R"70
%C6!]r30IQ!JAG'^+pOsJFa50SMIC,/O!3n@<#<Zq'^qZ+&*tBE85H>R*8RQY^5$9"\dl$!/n^9C\l<#_c*`[_]fV*#/@:3j<`,C0
%*^\;7aN?_%BuLB0:s<%+0GJQJ=[?0$NoVrH;iGF.29T%#"W&elbd=F)MA^f-[(Brfm8F+AbJM;jZ7Oai&uq`)f!32iEYD%2'o(en
%p;3`q%![bk/1u$;H.4"D/,*`ak0<#Pjkft,07[i./%YmeXrTZG%d\?]&aXL+dp`4;\eD*^E\99JICU2Wh$03L!;;(!7KEoh(*]GY
%G3U5a$Zf/s-C04b%Ou*Mb-f*nMAbPSXlBpijFJug.9.kej_-*fL47Lp,\2l>G025<"ELR&aIQ_la,k-:QMSe(e/g'^F7HSnW*lLY
%8KgBglq@%3aA(6MP*&O9-;t&W4)0n^@o/d&4=2X'QFF`EHK_NUST*:(HVh(dNBSS18R`$'NlIbK[GCW!%VdjBk`.K9^plO.E*Y%:
%;]EoY/N!%$<8tZdm^>G[.mC>_6S=$%V4s5s<3eW\45jGaK=F>.5Tl+KUW'!9=Q$tm0_Z^D,\,J/H-)$+q$_X+@o5emIH8mF7Np$c
%!L#]$4Ku5:$ZKY!D"Zs6:9*f>.Nf/c(MYU'*9El3O=1`6#CnK:=qlepW(P.f1Q],fb,XI+'2hOl5*M(L+l_g@hGNuGEhXj&C)3M1
%2_8FmQKtD/Wafih]*4X.l1S[r8hZ1)Fot)d,T6^+2nJ;TBr=l;\&S_'nc`JFFRtG8aZ]tHgas>#d>1kjnop&Moak$S#8K4#BcY_4
%/8O;%j!^.\V#XM`pSMXtH;flmE_!?Q)e>37=aGf3=ENnKmcN[=&@`@b4jJElHHus)^\j[K:F3CAT$"")4*??-ngq=[)plV-o#r@J
%Scte*[J4c282#uVo46_."fEaqU7%kLpo"hj_p"</1+ZO"WZt'LRO$E(oK2f_+XO\WDB]ZA6_B<JiW9Wu8%9d0C)BgR*D;5pC[WkL
%(1#]X-m]6onK"3BIs%FZB'P]ZX+O<_Hn#KjSQOMMkE'[VRMj^Z.U6!pauVXuEQ5ng-WoQ<Wi/jr_c3hJ_W7RpZQNg$*#QY0<Rt*8
%62^7bI@lu4(T8]/AEc*B#dS)Hf2'HD_+=oQp?)i-REVN^$QL/f![4MI/DNA^87b02"DQg7Xrju+W.c`J2Q0SXPmWk$_WI4oJDoTm
%DRrdu-[WO9afYu(-A]&Wh"1E[m#ld@W;INH\<8iE1g'lUaX>]'2U4Pnft4do$,K@1J_NlACrSN^.UXRE-D@eajRd)Qj^g2n`J+i&
%)LBPb1fUQo7_q>p#VGcU"f5.Y[TI0@bh)">:\tQ#l(PgGcSUa^K]emrXrZ*=8:fi5*A928D1QfJ@ZVncN!tq`Q$24CNOAOs6i+/u
%l/(>3Pub\S[hbKbH,6"hE7ckf.P3^?o2HtC\M`_&-,L9unZ5-1ECq+<,opIAjq=J!#gB\p3oW2Y3@0l$GUb/n:beXWYIt;=Zsb.h
%$g.T^73sYoG[VUpUio2#'GaGH,#L*hU;6)LC6sWnWjR%LJljc.@.#P"_b%c!_[@GR;0?4Rc[-PMQ=4mMi%*iD25h@kNcS+&!Wd)$
%Eh.AIZH)I%UItWZE^;.+-Q-*M+YA2:4a9R&7q4/_C>g`9MH62)>08bQ^ni,?%<Q1#V8p9T?HZTuW3$N)r!nsWQK3%)4CbESaZQ;.
%$\<lpHu>?:?Z5,S5VY\oH(r)Qn1n^1Ju6(SG`%])oE>R+.<[)[4f_uYWKqVO/KqRi,B*QF*Js$WY2E6(#9#uH+e:UsS(N?D:S]HO
%D(Q,"^Dr<UK5?q.I8:hDo/^i*L#I\Um]Z^"_c*U6r2':j'HaIccZ^_XHa-[u)G''n+OO$l\%Ya:'dok<Pn_Pp"%QLRBho(H<8iH!
%R'JlA3@^Hrk"k"j.kYM51tpkd>qj,Dk0$tWl>$ecs7dFa3c";#^$!YFUjB+2$_ISim\e\Y\0.s['eie]@;rsQL+L16MK8]SH)i'-
%5B*?c+>G.oV/2)O`&^M1#ljE'RkcWFSmuhj5tOJ%7u$TUPS"e7PSC8(T(AUR,TrEs#[%8A/oR/87*MH+<u)M(A=f16=gKJ#jqCt.
%0-o[c!-j`+FtkJ[LlDM+TY%dcFo2*VPeRGNJUs]q(/BNVC92:[S;J=fiMCu]m1<N92M3cf3=$`(AU$O!"^(DiClcr1Z]+u>aF3!X
%E/Q/H&E]Q']<tDb:g[8X6lQ\C7u?\%-qb+5P/X8G%9RAp'\;6^D3YmGm]Dt:f>*c84Q#ss:t7i,`"'peY0qd*Tq<g*ZkWg-kF)W>
%.ZYl$<a.LS"%SIWha\,iH^S#7GcF$r`p&LL32MRV@"!\";X:0%TX?]p4E75rYZ7\sJ6A>I?a[YPWUR:Q/'>h&Yr[KHq+/YFoFWA+
%_2o9WgE'n8OQsCHE'Z#rQQ4_HEV1)\Lu+0X_OaU&0C5'aSE4!3%::Y;;T"qR8t6'2'?G=%DP'M3M68S!Z)/_"O@_[tpd7T1-^kkD
%(L3;NREJ^NOPi5nfo)?kHGcLO\"6L%-t[Mi4K_m3/kbe6j%+&$E&s/;"k[6&H,CnZpmclB6J`\kMb",c;%aZq/MjE4?j"[X57An^
%l_b24\:,&?+rNBi't:DUi=6nXbbkP.iSRQ\^=Y+QL'@.\X:%\F`R=Yf483'NF[!jo#dP,K/_u3;0I9Bq>=,=lM8pa=%_Nk%eNup^
%SqJMdm/[G@o\c*Q$mWn@36)<W$rhf\Lj%sPN9F4pO;YN\4sFAM-N]M7%Gl7g7fb[s"E<4REBq,XM5=IlSY+MVO]K#k+k.s$6ODrl
%`9'TR=ffld9h0b"@69RZm`]&qFrluH(jd&+;8k].6jXG?K:lePPVP5L2Kfn:n0Of0a$>Ff%K_ONVf&IXY=EC/a>G3h3SPTD18o9?
%Z=7ct8=6dSA)Rs;W?,j\KQ5p@dX[I1KSOprplZO<a!;$)jmNk^)?a@N'(0:C)s))V^i_"?_l7jR+mVF_85QSP;Fnp?%3*JB%oS;4
%AgLBQh%F6TF,-]G$jPH"1D2!5mBCPq5fI0tRJFb>F9"kH+dUteWms(i+:-k3(Hi&]7=k&8<Q\2aO`ji@S>9s@J\?(@[*db.&j`FC
%4jaodcQup!AJbSZf28mt&MaINpJ<6VUPpNJQeOl#9?6hdRFCf"#*PD%Dla6%"eZI/YnV)dLG6'<$[C0!icn:hb&rTO``'F':r:RH
%oPPe5R3UHuljX=S0*I>Nl;8gUHGd\W4:T>d%5X0/6?:[UP\087[&%k@`B-e],k<Ai'1rm45Y;Z$feH-!\NWFF`T$'H?+.Bb&pC!A
%_A(_%79K><ZjJA=dk_MU+ATh$+Jko_@YG%]m;W8KT.6@^2+sh[_8XnBr.,ko"1)5DLe!!(_-4M4,1*t83<?CTR:R)"3(M-*"%pZ;
%M$D,<#.!?!FUFF9OcEQr5ba2tUiDb)gaaUCcG&D,\>F3Z36<J3WX08MYpjY9kZqUI9BK@LSuo:Q(JfZO&?u53$?H4r4?#(IS6-r?
%[7ES:89ssF>Ds%+N2<hE_\Fo<W1=#4h^BWY=t:##l4b\>mB%S+ULed[q'AY(r+2^`-m])$%*Ti&MsWgmQJ$[Ba.$gU6H4eNjcKlT
%^L#HIK2BA<'2-W-"B)1#,r\mD(-$5[CgGVZ3^KK(@OluG6LiLsEY"9H2>%o(3^grQOHW&nmLD!79H>ie_CkW!fWKfHU@#S<N<S/E
%%.2!%Hbd0(8XB`rG%oeQ=R+QOEluLI@nuL0"I7FS7$bIgO]4OFc*k;P8C@V!k0dL8bb[1I/^Lc!33P:n9VJn7?*?sYLhoIq6M9!1
%K7F^#VH4Mq74_E8:t)q_gSQu]]U"I8"U\)gBds!YCiap?o0G7$,-g0TYC\ajA4^OT"YHlCZGBXH1C60Oq*YQpFF<3DoNDN1)nRVb
%GTqom>9_gCm,'b\fHYTE*)IC4AhPNNS'lr&>0*ir$+'@#;J9ddUtgOV^YX"om;8hr)H@-nVIkbfqVgu.?u*E!E3siYBmH-*W.+Ag
%=no2@LV@MDCNs[pI'W]^Y]I2@?V@kO8)",H9Kq_`oKNf)]dMjr_>*#s++*YGH@Ip0q_[^_Ibri<VU%c-iG(%4*?OmFNfFWn=)472
%ln(RHrW`aWE+dfflIC;ZBGr:4978quhB,Mm5f3iR[+%,/;=fKe?tB8ck!OQup0o<uO:RrMi2.5M?8IC"kk?t?rJt8@lD)f&Bn(?1
%IrNnaG17VCFaEM$^OO$Y]e^M4:>jFe#F&:p1X1Z,?E%M\^>(sJg3\"!^UA7mbr3S:_c>P0C3aTBo]-"p2\t+b%1[RTm&nmH&Y-"R
%mZ2Q]rRSDh8]SGqC('=EDmqJ#!V:-rlu%=*s7[%A_t^0Kq.s\+)@g15]pJ]f?@U_fF)u<il0,I4J<uSJfKi4Bjr,lpNL%ihoeuZ1
%c\#N0e)Sj-6/d1cP5;,)s.o\&d^4o!dI>2m@'W:NoFIgKYs.MM-@7famF14fXM6tT*FJ0833#uS1d?P+<DOdb-1?<!^ZsZjXnfq@
%=7@R=2(htn104L)(]Y8F923Jt.'Pbh!<!?9pBo42\Tn5GL\><*^4bJTD-KF^TQS3>qIJ[..)kC1_u'S&YY+M><LCg`%,FBbmfc05
%1k/j:8[/M49)P%"X:YA^<qBW3OshSN]V*;tJ(\BY$J0k/?1%.jH4KDDQfJ+qc^:+sY#[rg4@/T_@:\--XqFoZVA=hr_[/Rs)T"8l
%B$S1oY\[k(,lBY^p.0=?0em+%-AmgF\Y_]-$3/CW`e.]3$$.o#J/1M-ib+d%s(s:22UHO^%GqZsNf7;aX/<YIF;YGKJnD'\:NYGm
%W/2r'\tOfC\B%Vpa:/Hls+Lg[dCg#g53_Qsl(RXlNDFmu%0(rWJ*,BIqo"Co]u[9Xd6BjBI)gXBl=2n6*,,:lLNfgB%<#:=d%[9@
%rhk5)fT)$TZ$R?257eaeC#/Bp-+,k,q,R2O-3-3&!9%Zgr_%@6(YD6/T478/3!CLq-H<,rH!]3sQ\&sZ?o_qj*kr"GAWjk'Q=lTb
%h3]Gd\NHu:pq,]X6ANe.k<<LIRr%<dB@nb2eBM0DB@66E]s)tJmMPq!?i;<+"0]HF)Wg!W/el\-9-h:!!pb;Z#i_sd5At>l(>C,$
%[BD`j"Z5<C`a;iRX35Qg3RN/e\#jM`7QRZbDQDl_D"e2jV,Lgc0E[q%o+r1YW4m?MpAM(8L]H6qQuYm,QCVKr9Zr9N%eG1rZ:JZ$
%ZD>##QZUBp9AH[Nd^E*j/F<6Bb<?6'b3:iPJ=dk\(_.l#s0_^m@.^W)r3tN_1PN:WK9,ukiR+86NJ)$^f=PMG4PSUT*"He['3$NO
%WU<HT'<'mKMI)t.rN;RI<o:!cGAZ<RHE1WYn/#?3_2u.Wkt'Ro%gQ_D?rY\2g?pfZV707FVj!lqs(H=m@.8oMC]58l=o;^e^UA;t
%`S8f_TD+?Mp<uc3GY;hirm"UB9a%<T+nq!h<JZ+(EL+sZ8K,B?M>[ZD^H:l`Y[;1%*=1m<V`Ei]$5+*MZd.o%q#0@3Vp@lH68*>Y
%nu.Z=-SX#r?3l.'93rQI#A_4e\*u'ZaFi';.a,W4aU\Ss?#3PgciKf@cpJL5Np"8GC_(It8lIGD#q1'2E4r[6-<Z7m?LEf-W9N9W
%bto<B1%K]1eSi"OWT*PCIAf,'LdR_Hn:R_/,:b=<gr0\a+A8mC_r9fdmb:^[\q$mc_U.>k[q66/'$>Vj=WA7O/65'"#3A#]D[E6m
%FFm'ji$rD7$:kG/%C!cP67P\i7Y\/#mt)h33;k+\+USP(FMomSLbMe3c8!O<;op`n,Sg/rZe$\ECuB<1P;"WWK[iX`reW+H1da%g
%V8?A/25<?l<LCaJ?fF]EM7V0nKbph0+[QosGb+uC.=#bPU(?klW*TmVQjft1:sD*rK<Q=98"Da_lrH>EFUB/tA7$o95E![>WjW:V
%2PV*)@4kY[Nf<XegS=c<GE8?\+N^iB:oM#sMoWKdMSA,IO2ceYd'UX)m@MufnED@^/i3N7\0IH)W.hVT*CLKa`;&Os.HGb&dBqm>
%.X$rmBj.52*^Nd0Jm/'b%Y+#mAVRp0L%Rja)dV3"'^@Y,;!6KD(/a$qnoZ?fn'.<h%$=6Q5\@"H=WO?8Xg'P)f(%D^-Z3Y\An+iV
%,S!^X+8_;lac[\Lj1Ts0*IRO+1#tZ83g;+MC-0PI,C0(\hZjBs*\O#/-k@#l^iQ'94't"=o_jtns56i#^!\)#ImFoTP3&P+Od43^
%\Wb];/o=+dUG]pskoOgh=*hemPW3g]F6sXF:MXa_]L[+qOYF:\T<V>mq+;/:PJqauU$oRr$?KJp*?KeuGA9q/Yjh23]5+:m]n:1n
%oM"_iDr%qIa.r,%%Xhcl_H`[n7u*`^kWM!kR$cKQH6;6%W4SlrK3a,2Z.[_ps.K+6cS3<SX27p+Xk3$6]u,R8\^.B"j8T&7DT@cR
%C]=1ek[<miB=,G0m;pmL^OL3MnAu[#B1M!q_lenHID\4M)e&72j03GsI&C;`p>!Qfs#qKnPA"KaNYCqIW4ln1DVcP0(dSl"i[Z63
%c8aAHE!I)u8It018B>cE3gBYM],iG/G(;P^OrY0EAFh4%k:/FjZ+R@%mH$!5N29b!8#,`])nkplE&;/Ek:8*X!2m*1esrgQ-*#WD
%dnM&G'r96W5Y"OD-jU'8IXLj!IsX#*Y5UY:S'K1'V@e($)l&tarP?=t7fUQr^b6d1"TZCpr9N2L8:^[/%gK[m[/"sR4)"Eb>&WZ_
%qniNb@(Cbt:?hKB&Y/5=f_CcCL&[q(b\7cph9P2siU5@2pXDh0<ppu,fq75aUE>6nrd!c+_;rN.rciJN@W)u6mD5]0g[BPu7_(8O
%0PP2k\sb/+CaR,NrI5kg#DPEc_:!;0o@5PB?-jikYP]U\\@m*jCF1$C=en&6cNZn#EA\aPl8P?uTf>25Jp*r36NpXl3o,`I48lW1
%K\;4!eaM>9!jqo=*-bTKcLKt/[/UXZIm<U^?Cg^SaUE*d\VK!:lMnf9Gm7OJ5ANI_=]]n>nR)<HoDS[h-(bV?G5cR(pp,Vo7\FO&
%I6'(AC<OV@g[ot$fa]3$I5u.I5<:C^a$4*;$"QuUdq%aLrjB4^oXWH!\E3`pbPOC%/Qo"E8^i1-!Y+s.)i`QP[QQZ,XN'D\j3a(\
%SrmhNXg.`M5DH4(EqsNn4PgsWJMZ@OK<6i2h*5?iqh([CY2QkP0U_jgP<$7u8s<"_c>/C^`T+._7u+RnKDmHD[D!/d:0Zi2/_q<e
%D3+PRh&]+P0+R]!b[<1,:E3&l0^Ra?8053/HO!'N[&'\@_nij%oTs]dY$bs0aH[]t;<E<!F>/)+H:mS(K<<O3&*AO0#Gi/PlqItF
%r?%*sj0/@goa01%Bpa."hR,F-7-(do4Y9Tfq\)7%CYp2b*<^)/\1PsNCG;>"%WDgDNq[]]!,^@,p(%?\pEk7AHc*Ol+4#uD7tW7_
%h&25BitHh7'PMCMGK[6hQ$o`U1DoiE?Z6o:qZhJ3cfS'^#BFM8JnFq*^\;h()%DY[s.astDVYhTSlH(8hYm3\rKE9H#D7#7CHRsm
%Nd;b,.n;G':XW[$GLnF<[VNWBq-)Xlal2H^go`ls'CqX86a;!J\&,A*5s(k#f\Nl<pNrRlm60i4NX"OWruRDO]lcR.*VL#g67.'V
%a$Xrk.1mtAd[*V86i(;-OG$bM)[V8MqZl$UP@nd7,_iZ[9mu\dhR4XRZ&WqWgfF;hVtN1n<03)d.C?"^B6N)N/(<__oht1Z^E/>W
%^5e57HCr3Pj$UXKXCQB\%Z^gXcPG2i9^cff-_W#;o&TT0cu_>1UT'&hMq).?UN-<AEnE=(IclKSpYN(+k5Xk.lq_<Gm>,VoEDXFn
%?BOdP61=X-habB7]6d%r]$r#e:j:;FqZiaRqk")+XjNh2qGIm.W"nF-1gb1W^N2LWb/Z.E.587f^Xd5#l@$%Kf50VhmpOM3TI9'$
%A*YAG%U#e%B(*2Lj*iV12[%6qB=i*'fo@1=b3TE_'<RUJK7B:(R9/Fiq]H:;?mX6cC]aX&9dP9S1$.)eFHbi!s(s5#[D_k9kche-
%mW3E>XWc0XpQt$IoG9jBS1acnLM;/j*8^\h;3diRbeQC8pCDEPs*clY)'-fCac_l)iYL-[8[Y`pf.#M.)c'586P]uLfHApMc2OMi
%FOqBjcs85@ioV21#VGCS94Jg3co0BfP.'m*C[M4[@`YIqde9h6d\_3ce.LV,#>P06K`,fK`hd+A:Cd7`N_m_uScp\dHY],!mDk:O
%M(iKJ-kdA.&B%:[i<HG()9m%eA$=8-@h3\Qq"I8?5o^p#o7c\,JMnUm,;]0[(a"@#G;A9<S`/G!H+cIYrGV:TIPSi^dUBKPI/7("
%b/UU7o..4ch$Igc#rX@&$)VejWn!MV3^R)FS5J;^j%"=i4+gbqJMFPmS=XceWX?)28U*-1hWl8OB7+d-diSWi4n/]?VUbsLKCSo"
%6<jKakFcsQTh?q7H-4H]AP4`UM)B@E-Hm<8ilF1]/[s>Ks"tX=B/BgBbpqFnX,fb@`S^V=Y'YofJ&7_uZUV[+d-S<`co?3'RZt!S
%OZU:jok[5RgnrlOZm?#B=.Snrouh#q`NYh!-OL%eX`16<E&a]IjQk[][^cPcJ2r@idNN.^6&3&Fl&>p[Tp*:ue')p'UN"Y5RAHnh
%>5hJbnRlsgEn_-tnR/_Ps5;q9k8jC'C"F#>EPpO!gV=UE%n;T1p@\uXP_-'4VD7bV%Kq!H$1?7D_+it<Yp47%od-lhCBaFB+ELEO
%]ArnY*_6b=K3]80>/`,jC(jA0XYG6X_F`jiTQ8aj<`*^=Ih2M.;S0C!:>\"qUNPT(.&6Jlj,?1fJ@(NqmDHj3$<bMUXpm5A-)Hp?
%PY`/_k#cNd>:6(K>Lq<.T]TV8(jn/Uh!JtYk\Z7fKc[^18Edk<DQ:96G089JDH3&s*N$%U$MN9^7WEn-/r/JPIIhaMjMne^U[b7I
%p(_NkEPMiZA$ZJ(T!l,-%DTAH+'T`qGCHoh*GVs&0PSM.Blp^@/Eh\cVsr17f9H[;0MZCo\.2jN<SqHpEjmmOqr>N?b3lLD411%p
%a4kcS@GP=TQ(`Jog>56HA:"iiD;1R..gL]&I8<)bd)lXF8*J=Nen>o9ZdD";&tDk;algB`;?n8BX_e:/rP;l>TsT9TIikg-oeCTf
%0TA=_BUQPJ0fn)-9kuIt_Z7-t4e>4e?2B#meM^*Q_92;a:,cX5c2._N<rZFN&n/,GjEbIrV^b=m<h?GcrYTI@f@+\X]=iD]ci/0p
%p$Q;X]5F7*l0!"JqRC/kS?<sX0HpU+]C3_U[e4MtaoT4X78Ba9_W5AYY7EBOQG]2D;tuA;n2@>j7u+^,^YqKQGoc<rn"07!I1eBN
%O*gbYrAE*bUZLsNQ([[#V:J/&Wl8\`&k22ia53SXl*0u_VWMEqT)R`0HppQKRp0c3bHUFF-@;?pHkT*-3OGmd2I!7eqo"g"d;EgR
%T5<s:mJ#A6'""K)j"aiio^WqfD4$h<0KQU9(ReN^J"&c\LrekYVfXa"#.$O2%]8>X6YeoI`r@V\VP2Zd)agOo+D.4_ra?%DKc@J*
%(\gT5%R>frnTN<lNn;J/g+FJ8m5s#`Ei/rdL"4u^BP[#u#T"eqZ@;Wm^[;tjE*BlY(\0bTE<48/G(2Vg6aGa)bT6:H8;GcVKQLli
%0!`aNRMRACdb'#`5Q3\mc+HDZ2tIN=rL%kC?C6!i(KX`&nRSjYg0'&XD7eWBAfcssNXf6l!&A`p5[5X7NelZI#"Ktg/6!'`d'uEE
%:h6\DqPb-:"9+;Dg/1j%<SrmsJCAbB+sEoH6]'u8EI?2,;h;7u`V&HYF0!I)CV$kP6YLC8lZ5^fqg'>k@2D$&lIOh,#K*[[puA%$
%ZD-R\4Sm[C^"nQXVpb"KJ"'uuBDq:O7ts%W3ue`JQ'>S+C=E>lp5`*b(+b_[[Qs@*5;)lc.fA4W5j`OVg%t[E=hHHhJr;d!^(LC1
%?G?5UHW@1SIWX]Bc-Jm'r(T\rrdH`35Q#F!L-JoNDa$Bhg\@/nrHdr!e*HslO6ZBIql@GYrFthJnR?b3qVq)2Kr8OM`QL3Srjm@E
%nXFprb3(qZgKu%((,$b:IC=C^dAr8GAbATpea'E*E;Xs#rSm:n6r+klfkl+rDEdm^7_"b<=n3omJ+N!s?[#!(+/.D2^T)W&#4#lg
%nbC,sm9<X%+$]Pf@6V5ah>?l+Prka"dEC;)GAl!NRldgGhmn4%qG)"o<dMR!K]crO*$C6l2]bJI='iVU^UTdcB8`+#<h@.=14\1e
%]^fJi?G*fBFgu\dBPe7qGL9c&FQFtLD9^;ch(;mQNVqYD05a?n(gPU%n]qR^qSJ4J)l6RcX-;nQ^3TG/Hh4FbLMHS]lO@"<k%$Tg
%2L.<32p<>Ce`[n0eY1-5q9,i.\)3O<@$odA!@$Q\gV!'Kl^*')#rf3Nb;\iASp-ZTUIM#VcOQC5I6[`&_rk[/;=/,(]@[(?^Kim"
%[A1H3hJ>'/HLL3>HhC,3W4st!SXb-(H4,J,?1.150AO(Krq8Y6W0a^T7)(X=R[cP<o$-4)1b&uf"%TQPW&ne:PM/m[h"d,(3s`$,
%eW$TsI,)9a39kc0]tR4mZY$bqlWnZ-meCr'>46icU">oT_nJU8b._37^WN<h?+>E[dP/>AiV;O"B,oHlbjF0(XaN;1F5u?tN-_aT
%TV=ZGUQlY=oqNSbHXMRW%I?PY*ij'hRmu3O^X%L5oqO^bIHg+-jS4iVeI:IBSt%rK]@/V%]pnj@GZ-hAFRf%cCVpsLCI^O/V]VC:
%8d"rpqsa?fL/F/@^Vj9&ZXMA8+4Qk/oB1!j=H,9/h/h2oD[ntGW#bR!n(Gn([@U`3>iC+ErU0!B_W<c[Tu`E*^Km8C^m?Oo^%YrB
%Y&&Dd*d.)Rj$.h=f?6g`[ANK:ar<8hS2>`+Dq<G#rpOS"W;"UXB:H)KZJ&0J$jZMF7lA1H>krPfV1,u&gWSm8k-sCI;'1P]2t,P4
%\QCrYoD<n/h5IP:`IXXE8tQ(52!TgAWSZh2UM_]VID5U;d^?Y`J_7V_IsobTgm:Zd%u3lS5#Qk]hcsq6p%IK3I`oas33!jn]\GGI
%T"f1`ouicdRqiJ.^.ZtJrP'u:N=%'#bi9Ld?a'J"pe!-$hnO[6TlJT0i9&IcVGSG7^M[t-i2CnKb.%(5E9>]un+Z-;*KM9qTB/qZ
%_i(A7F#h!W4/>aNB9)Dk;3Bu8Fn+bl3*]N=n<M.p:Tc@!H[kqCDe@Mbj7:B7FnGM;O8:`K<#YFrO)N?l`)4c5HL5io^ITlHWnWTl
%hM"gnX*!n%ZFi<c7qE+d^AVVs7_Q?Sqhc=-..ldMrd8/K1/k.@gsu(Q7CkIgHp)iS(.MT3Ngfldk5+CjpWTQH(/(DTlEr"3EE(__
%X1tj&QMY68rUs;2p#_1Wc/S>4d/<"s#i@^dn#rj9s&XWU^Sn=WCmTTnO0h)7^DQD,+4bo_>r7o27QbA\F_jgkUV2ChM<28Gl]^)Q
%T^l!q\ZRi?$T7oeV>"nGWm.G#US_C:WQj7S$3"[oWG/T>*\IAR219pX4k[CG[-?0QlIl$cUXH=eBCkhSHM6pr@`.AI=4Hj!*\B8J
%)QO[4hcB#lrH1uR]fBCm\NuKqh,>t6/7,5]M`2,pI@snq>/&\^l_aO=>^jj?XkM^<qBNPahXpW0H?2"CZg$'plH`OM/sUnYOS1;,
%It%3<V;_#i\U+;8>1iK5DsB^\+`I/K_\cF\Ep7#fd%J,fjF?Da%DQeQ%G&h>^XMi@Zf'g2B-&lSD.aPFri5]252X$j]`.KkI/U8=
%qh+(`IQ`#+Lbq9J>.ehE!V0De7abGN=1I(M>Dk$+I_.n\QDpN@)D;"-4nqqTCNT(e&=[&"Vr*s^r-A+iC\po@?e:Vt4_:>6:q%C!
%9=rM'YDjliM3?])Ie\gK]\S#q=;0+cP2D?HNlO)2?[c3B]!-YHq9AOh$D8>VDZ@:W@-Z&6g<._;qV(5PbN?-DL]#h4^C4O3+V!WE
%I5\`'XSRQtP)!?`%c9;k])!g:\7"CA=2u^"),gA%="Dpp?/<-,IF2<=1Ui>tFEOWL]#SIUL$Msd+q-V[<9+3j?l:j$I-Hu)(J".n
%7^$/VO*]s6mV6H8Gh25slH]"/h]#$B9_4I]8,];^s(WGEmW)Xp"a84a5O1cZ:Te#qfMTQ'W7elJe`Y1m1@!\(!Q/Q9r)'5%kKGVt
%i:6>E_+NadGifo62%lgL/)Jg;)SLSm@[')r!Qk5MEE!W()FjtA@b6SHX!nH>BHB$Xr;3PW;1V;Q`3:*`pll:`bPf,[[:c[LiUQGV
%I,(p6[mOWB9s8^)14$F_XkgrJC'Sj5,_F::W)"mJi]G1MSA4Q:SSpgoko)=36tZY5mdC)j>^6odZ%'EO]jXB_ogsr<`VSok!VGp3
%e(rj43^83&!iQ(b2kNRUp^c@kI_e6V9E-D3CHTHI4/37H0(30u)=YI:<__CuZ"<q-r%It<s4)i;!D5sIe+i<"E;Ru'?.R]uR_;;M
%\GZg8ETPT(&4@.^&8/HVEt6e03:p(_[eb9RnI$=MoDdr`hGj7(Ve)>Sbj!:;/+a(A2"4J$Sqp$q5OO&Hr.A(,U3l87[hdd,l1M,/
%df/ddQ]Z%Vd.#qRVX<>t@hb\_qBRh]oVHZ:lqX0p%oGDZMnF4Y7XR(cLhg'a>rcIggTdqHo64O`[\#3s\G/<JT.fjl3:j]`p=iH*
%]R[it[+!b)#$k/MW0b2cNisWA=rC>=d-E3;Kb<\J:%p?c$p/JK(38$m_bRd.KeAt;Ze9Rd?XGg.S.X)cOF$hWd>+aU)YDj7pTf00
%I6(\a4\7E/=kq9[iF[kadGFZa.kGT6D#<5UO29Diq&>)*Im'l'oA-Ns?u?q?-b$8M[''6]s8KGF9YUMR^*HrXFj!B)#i?%PM6Quh
%hgKa``5i`iRb=g&eTp*86hA2)Wu2nj=QL3,%l=SX[CpEQ)LH8db($4F(GIhM>ek4TXi%1)DI66b0Jg9B)QW`e)uAOgJme^&?*WIi
%f!]30p[@<1O4V`P'sdDE@9;CuSj$l'Ws?SEYXf94?!UT;_E!b:iQ^b1j4r/)op)uqbC&l-*I$XhR#tG)QKVOa>J=_0p.)<W$5K-i
%Z`[AnVO+<KRk1k.DMR\H81\&mi_.gIPBZI"rGreCF^V43Q6W=ad/q&Q`G,+Y^:i#[-PY4X[.N(Ar'C:g/=Y80lP8T)[dEa044rLH
%0e!!HY*Ia$4&$pg[rDbY2o?[\:$[:R0q[=Pi61%i?!"Bl1\Xpt@&?`D-_6OZ5$n$XC48^C_XPgUb`>hlhTQLE-0dBEdT@/03h)l`
%hb)>!?@2@ZOWKcJB?)ndkq(-Se%Oc$ho>!5^Y/@s\oY'GVYT"k/H]FIo_$G@Y3.sP_*"5VSA*X[S"Ds6&tZ`/E:[$7RP#J@01S*U
%5-/kW2mfZ`O[@9r<?GtP)E/<A4PD/=N?1ca$(C?iIF+l]9-XJQRF$L;acBN<e\>6W2^U-&?_-\BVGRr#:d'iZLd,(_BfS>dRF.Au
%L*#u*G9<NOr[;eFIngIhB;$SF(Zij=&hd,q$E$Y"0W1\P>tI?(SYpN&ma$Y&cpR<aIWn]:^;?Yg([>$,X-jjqe$t2(ac/dX+XeDg
%RnF\j_54OmGNQ-Ha_1!\S_Y!U%ALIsM!i"Sep&B@$/$>+Xd?^2?e>bOTr[sWnZiu#<P7QHnuNQYqu26-AT&.?VWsnmF'$\Xl(h!e
%<BBJ2BFtEKMHo$PZ?k:-dO7df(ee#liZik/\8Y'"b5R%_k0)qK)Ae1IAu[I/4I:OrVbr+$'mO,@Gr[qYP00u0YISN%lP6kn_/YUQ
%G?,=khAa7)4I`pX6+?HYUt]TDctDZE&k+_Uk1-T/&t9ouI.>Bh$3/QiZB`nAm_e#$R<38*fG'Ctbni[Xg9AdI2nb+[nQhC2ZV;[u
%JP/1S=F:o\G].K6\:3s)a.3_4iPY5=fMRXq+8;hN0,>WrDb4h(?'b+UF@&m`T<sB=([qR'^`]NHo"gj7;7YZUCLD2a6,f1/b.E>E
%#cCnupg#R@T=s/#Fj8gp%;]a.qPq6`f;sFGp$@@_%=_Z-\+Y5c<0nE*7D/l<=Y4Lf^$22d28-ET_JU&+/l-Fi2*UB^`MHHc%@4lq
%*F5+J3qX83m-+"Ff&^s2Vs7s+_fXN3VYr*bhH!DAXBMD+7ssi9<U>,+r7'j8O4]iV8s7kaT-'G&_.qKI;V6fMh=J49,tkTb,rr]"
%\f&mB^0%+I#'RBVHZp57.oY)Y="d<Ch/I9@_`8B[haZEq=#JKeSLeB\6(-SAU2CDK'I^?+;c<_$lX-(c'rX/m1nV.S*H`MQmCeTG
%oX-<9AGUCK)eFL5fLM:3b?:iY_J2!rEgod[/WfJBWaf:k=q5lLjN<!LFK+U_Amen&UQ\4"](t`BUER5oa7eepUU^$j4L%W5oJW9"
%3aLo*UAM6s6U`$7EE(lalbdn>]*"O^4'-NkC*ki;4)/=()ga$IT!kECH<!cp<pX]_jA50AX&"rP9PM/#f\=N4h!T1S'uUp4>C?0c
%q0hV%g$BjQ9Td"[."(^.4LkE8c$g4a<U]iLRbh5Ys167U8TP9QSWNaCpGFoDcfJ<qT6W8cB?bO?qU^OT0-6\<3=2V4XP#+KgJ.,b
%BRCoV+3-EO':`3srI&L-*3UugGB`k2]XfqpOO<!"\8GpLp;lM&VRU4uf8`=HFEOQcA4:=oodo"E-52u5,u2Maf@UA5\!c]1j2CGM
%\#UV)-uT]38c*B@XgkJWPM+<L?22`,1TW5D^1u2D2gamKc,i$_7:#*KHWDN6l*XTrQV5Y(aVgk;*kG4-HenBhq6"^&dqZPUas^A=
%osq0?T';CQFZ(>n=/H7!?+mM9X13"bAhsBODc=sP%*B9tpA3#/=nn#_USE=3?__)5CMs[6IX=uUl0Af=T8]cKQT1mTD0#H8aki7=
%7fN)U%-_WsI&K3Y]FPjgGN6g.]>L!6%i]/*O)Nptci*S:cLVuZ[kX2p$o=Mp^<<X`Hja9-d](+ZHk3>o/Dl&O`o&]4I-n1d$SHPk
%FQ%W(W&:i-^8(7u_YMnqq%inT`RBM3[E%hQ)5pJeo<lX0/bl#tV[;O%O6'RoL+]&[S?G)AO.Wi/L\%poo&5.k7lXk&/0D'-[W&sT
%"*@09T%+ob'AbR#Y;m*Z>DG4];%T42:%K*L1hu4/fe$X-C]uf'j6bT\,%I]MUEJF)0U)N_Ml#q17St=O!`Va=>:%LklH3-=b1bhU
%>@%5C/VPdi:%Rpj=CELbV*bf$k7q#3?)KscL\AM`RZlp,ehX@AMQW7**L:s6=l]6g+?T$8Z.Z)kNb8,`NnXG)=RbP4@WM?&#/1-@
%L$Lh.HHRl-h:^69lJ6`_L>C,>?W*d<J?ZYR29jYtD6.gnUS`b$Fn[P'-Ck?"2(g4'P#Cd7G7>8Pio"rh>E;Bm"_sD@V?C@OUL2dP
%GcENqF51R2b_J"'2kr:p[6gSUZq"*@UhBk<V/B3C(GmTNMRK7^&X_K,7?,Gq5g8VYbK),AjI2]%5<Q)I4BcnbNQ7D4VXXQS9E?du
%0nfdcX=jJV4M!Wq=*'>UTJ6_Mb[sZB]YE4`H2ls)eOWKh_Zc&LSE>+S4f5I7.=K$naIaWQYb^r^Fs>#LU:I`^&O'JJ7[!DeAeY*d
%bFG0D@$]Z<D'(,kg6DB))3G]+VRN;6R$)"rS>[h=CJ+@s-T:^*=]J]?[,eB<\'Vf(]$\k*m`dS6&FXluPu`CG=!nO0q:p.T#ENat
%#sN?V[HkW;8Rik*BCDVB_2X;Oal?83EU@p.Tk.EK?GeDkbjE*$@AQChCCL*@]sf:;0GPh''bQF/ok=GRQ1qG4T7J:WV'T-T</Uf[
%>6r'n`jd"fqrd%h;'"4(]L]4MLY6X>c!reuK&`TO%Shl2RmMXo_m1c;8LNZL^>*Y>qsMa6.PMT;SaUEdMj&A5^>,>T(Xs)6<jVpr
%F&7u^4._)h0m\O6/_D>H[F:R9Hda_tFL%:[WG9o=/D,nkh53'!p80B1(%oSuO36/q#`Ca'p;T1.q[ZH(]a<"j>rl%7knT"K8#bLa
%m+Rq@]tjW";ep<qihE7bQ]^_+E#l>F$Z10^0HTYhg)C<P$U#fs8c=enFO8n6]pTchfW;dN'HL^E)aMbD!CEoK(TSiOH9iagVM)s4
%@\b)(qHPSq&g;PnpF.'7-ok6i]#'pidLO*p*R^NBFC)P<*lOTbGHpH_7=AA<6%.D5).Hbd)`U2!Fe'lgnXE9n8bSYein#KN[Ij`&
%+D-P'Y)D%kLS-!%C$@lAh;j_\THT[=ap(uNCH`?Ej4JJ&`JGi29%'.2kKQ(DYMJSlDNT3C:YL1?o11rF$-o$RU\;dA)4Y,2':J%T
%csC\J]Hd$J6=Es9aI+7Dg0Cb5$(XFohL]+]WTHCi.5HrIn&rOmo8_%1fUI.Vk"UuhRd<@b?]O7\p^^0W'`[jOY*Z#dTHi(A_=c7K
%VWU5K%*kJf0RD9T#/8":Mg=e/fLs0oq#n]Hm&2=A:Rt7_c3??kFUA-8KeK5$H?rV`R9Zg4'-,VMhKO"F2I-*<9BH%qqqZQ[%bZ'1
%_gQo\WarS>fD4sRZlCaT?(ip!/)R!01p,.?qSK_e!Nn#UqKe^A`6?9hjd]3h@n5!giH,ZOZ(i3*A,Wb-E\@+VA`Mh7lYJU;rn-!!
%9SjoGQZP,3QO1"8MSg(BAer#W@>]&$:E/m]GK&M_Et+<2A$/,'J'9?4p>*2<"N^j\QKJo,CH@n[O=YKqqB/r)AM-9S&4STAd<4,d
%YVD*\>a1ORYat]YMXESl/#r@6_t__r0IA\a>i)H.L$F9\$I;ll?_QI7]1VhShD>T7EsTq[Xs_9OrKNtfPKTOR"m%Tln)kURa%dCK
%_DP+0Pdc12@GeQ//KH.Im7AO^,3IIO$f.P\MEVj*ZemFgl>\\N>Y^f:ifnD@Zu<?!UmVtD0X7BV^@*>;c0KBWjlr(fKuQr7#cHur
%")?"A%"s$DhnXrC=PW.<f;1KmnsL;TL$s3@mdBAMq)-A^;DXtQ:k%Zn\TIAak:b/SRQNtR6fI\KMjGJk$Pop^4T,?hY<RZVld$A#
%4hm8thmT3BqVq(`&$];doekjOl2'VE5AAM@'hdaf7$oWS(;fLJ<gAa163,g%_RYe9@^[+s\$USOl.<p_^Za[h[]mC<bDi9+-1Zdf
%PHu*q[Eoo[pV&6GDD?#M'e5@#;8\h`L!9X;^FoN=;HE5[hk#.hQ:g@,Fmat'@))L.V;M9^FP%:bp:;jBmZT,[\koJ,puf?Q@)$'_
%Y.i\/)R\HXl<SP?aE<eY)a?JFgGnKX]<fV;-4F6q%JDl)kPk;*f##++`prS;&eoT'gSs"mZ\+DGEDt=B:Tc?ok]2(KiN&Sf**2H/
%<2WNU95Hf,Z;c-[gN:`irHkThmFM+3Z@@=+%st&/U'7R]FkEXjW`QD]fC\pA2A^MB7osbNdF8dd<Voq$G49V8onmfO/j&jSX1Vcp
%p2sBiD-],BRc$k862Yn9HF9#impJe*[rPWb%ViTn.dJspE++&E]P3(#\u]kE/fWT&ULH=8=Qt_<.HMph\2W^5B(W5>WdHsDF&bCO
%'[A;7Y>4q]<G0c(YcgeoW)q`E.^6*/WiqP?5'^OCSJI>&`:FE(X,H8\HSaQp^:N?7D/8_Nlt]XGcS_r1c99.Ad.7V2S*C;?T>80%
%4&:JDpG@GL`I4S]^)"W/8H\i.XLRj3lt_G[R:fo7f,S(o%.*T`rG>M@]m99MJUM[%'5=-%)VA+M-f=PZVng$XW4nEbf/s-3lLrT]
%S,!6]eTE1Xi].5:eOB/]7BE"7Yj]M$Rk:j_)Uda^fN/m>2_3<;"SUA7odr!gHCZ7aYDsu9-qA]X5-V5Np3;Yj]E7uqN%H<%c8Di0
%fYRB_,45a>qs*mdfs#MV^cm77`%og8hOH:(Y<hku`5i5eq`Jt&*cn#8T^8J*I<A1dn1l@KnZ+@G;p'pW05u&3#p3@)R*'W["ffZi
%^>)3rd2/QQ*doo2DNn7`GuX='`cB;&MVjD^&q75>7lOCAXT@c/<Dl.A(X&9dWo*1`^_%DWX4_j!g\-&5IX^T'r7aj39rlfK4/]+%
%#Y_;B`U5Q1O[?YmRhesL1D$$FOXWDZIpFX`9Fo8i;q8.PX>=XR4\PJJ:)H+VeBEo$2BDVdNlD%ZUpY-WWJge=Q=F+s^Q($so10IB
%WoALLT@Qp?YC!3I6h.ooQ&m@Er`?:V/D'ok0j^k`r,89ln@Yq'h[)D9bVS4CZ'Q;g7]5%-i48[&GT8o;:JPrcS#a;r3h#8@]75TW
%\==Jd=6JO%X*6L=r2H_"4`'aIXuO3j/_enD):CN-%P.6IEM2X[U^#IC],g+TH=I-Uai1*V3"80)KpStcXj(B1!j-q7pp)fEGVdmK
%?'da5Wte50o5V1Tg]XN>Ba3a+]WA[I@a;fQK"Vk#ft&ETZ(kIY^h1VAkibE9Z-nPmF,Td)k"'j6\)nrm?&I7#UOBlcQ7C:r?O"u]
%;;D?$^'m'Q8$:hJC7N@>DjNKs2X`A9`9+B.`+Fe<nV,4Gj-8N^W\3$Z.@kChh6W<NE4t7lEl,VZ(NV1rpgS]k*FG$t-r*A<?B/W,
%mMj(mX@7=O*lI[!mQN[)7rq425TQDs_KSkkJW<pHO_/Zm2&E)9K]4i.@`+C0n"YHaKM\1,H%1FWJ$kjsId+T\hFFcM3S+%u<qidB
%X+&d6J&83EQN!@.oV\DNhlJ$i$1%T@4DVpaJ#?FN7;"D\Z+b6se*I!u'Z@-$^*frXf/\9Vh07aO*FB"@^i4^#12h8qp'o<sMO*s$
%cPGmeS=-LnI(_9=E'EIspG"N:;aTrD6u^S73[qh@G][@aVi18f?Kh&EIC/GbXh!hJ_q/sqkkg7h:8]Rn"jWtb93(Z=JM=AGm4VYF
%)Q_61`iQo950b!9oa5P9c-KRA/6,o]gig$4O&&ql!T3PC\V![e=h8O]Su0!#*Nj%15cRm6im13ir%N#To..+Z_]s;HBr/dYE[o+3
%<^2sc[Dl+hat[dtiO1k-!RE"h*!FFOHC<]L<nnA,h6*q<]CItVYY`Jfh\)?#R]K[mUs6"Yk4Z`]EZ;,X>reDIQ*eFj]$R^4i2[CE
%$`,abUTdMNgkoO/3ONH:ko=p5Y47MHd6[/M]Et'knQ6l!C_R*_50.(uW8Vgmj1!"N4"Cga`,HaW$s1<jr1)TWo-L4&h[2)Yj%8a`
%fStan\lbEhN4tb48*9brk'UZLhY?lLQ0*<V)!4ouWEb;KZ7AXN;g$GVX1`5*6MqI\jI9$iilB*c)Flq44SZ/02!SsgN1:btP!*,u
%jt4%Z,<%X[H-d7nQef:DmG,E]CFM%-U)+?M@&q=n8A;5G7oabRoseG[jQsFTqtb`sW+HlKDG0cbR6-V2H.9H-rd*6Wl@m&PqUneh
%PsYUSg.'o2coC<8o&@Yuh5Fp&$:OgZcfO>DXW?IX55pO#j5Tp)h>JtnhB22.'SoINe)]l)pU=KmRG)6MR84nhS.MFdmT,/bopdS!
%p+%&K43-CD2p8p_*P=12@'?g`^"o&KfnBkH`pT(M?IQQL>,q-.f\tPiDI'0je`!iL.k<^bB(PGtk7Hq$"E0Nh^^E#RBfbRNhJQ#h
%!96(E[\IRQa/s(7EL.RIYh?nRRQNkP8i_\hSZ3QU^m_rk@"hN"iO]9o)P4V?hK08.SDl0AHs4!n25fZ+p"iqhG,+0`<;gco!dIF[
%:F_#U%nYf)H_0&rRbQFqN_Z>W.jFBS]9hn;2I2=#\*%6JHG+]L%f3Qeo121SnVD4F(Rbu+FULe-WWZmuC1BfoPSBqLiXrfCX\G!o
%DR]ImFjm6'>u?3REG/R+CL;3s@ai(J7nJ"g4O[jt3^i6,cTLd^<n3aR`^F):?S.-77@CJIJcFO_0OM0(Ea>6A:9oFB=eN,^;rd3Q
%9@rY;F:)^Q%$J5HgKD**!nss?dW;^5RRjXL.B+/SHAtI.F.?NW.Y\G7H@^XIBLuir9D%q^A<j7@0@2_fFDB?uarWHe%=QL@;aZ7"
%T87K@(H>E5N?PY:[bf^h^!1rogQ4<NRV4%Dbpu#9l)i>7H6T/m7)i6$R#AuD'8@cUAK1UCRhLH#(9_@l4Q8\%qMuL\&rVreN^m>&
%eWZRZ,dD,IU-&R<1/_$mZP=C[Z`VI`P1W%n.e/=;!rEBLM:8)c-LZ_X64t56>)>a#0i532,^'e2bN@@7P%KSVRM(\6/4i'O;897I
%'eApU^eZL^k_i<'fZ*_%/"EJcQrC7VpCL#r+/^Mf=JfdsWE:=E<)6[7Y\UL1X1%o9`<u.2_6eZ/YsR@>r[/I3XB.X%Zj*pL8!1!P
%ktK98j]=ONDK)L*GUQ(i^=qPIhKFk^%o8A=l3%8$)](GoXB)L^iMh3t\edJF%ffk%6WP]gGW:J[<a?%RG)Q+ms4_n(k.5Q/?2/lK
%r#[1s=jdo`O9Fef,[$_$F'KdL0Xf#)%e"[]^>JqKBljI%77n=Acc)kEHggNk*\jA9BJ_d<]A[0Fd#cXbLnXRmnF5e)h%%uO@t+pu
%7jaJf[Gg'q>BIItp&\Xqg@0(E_&_15^ZUE-LHB]AgqhQ%Y2S?b6].o?DeOCjb@&u[e*q>>VI1t(p>>@Yk@L/_p":%XYmh4fhYCdV
%Zop?1m"@Ur\fD9PDt_WKE9F_^'m@:*L53B3-2APj%sRGbR.d$J2EVu4Vf8gK&%bW*m<7,@&FZm_iV)5Fr0lNln8N#i%*Q$V2a#kM
%4!qtIs/p1GmCOD('>_C$*q&CX+^O#M1d'PR`-Y_3mF[/KgEiV/=2[:$0#H(d+\"Lji"mgYYBO`+3'mu=Vr;&n\%us;4e']&)]nGF
%PQT\6.GTEqL$Eik^JpB.gRcc)]Zn%rmG14K_jt:N&#B%'Bg(mdiSi(I8+OK+T+)<0in%SXp&U_k[/1Q9I`''/aL'jPn8RQ.L\k0'
%\`)Lc8B9R]_o(:MEIU?n6[?iDM7^7!NGWq8b8,dn#b*t64PVC5j3^plHg\Z-i?4>\DMS+QC%lhPr+Nk.^)A'\XSf$\L]'(mbQK"[
%%3B:*gpZ2#pfuT;2*;k+8eT*)B<7&*Ge!L(Y(;=_HVN$T^_r=4DKsf:O1fFdnMS(TiLsf4%<jmERC<-MLH>`<7HO5%1d'RhF>$&Z
%D2D?3h$us-3kIeLD0WSbZfe9ALYKqgf^80PKd^9]\_H(oRF:qYDKr[4[mO1Vp>>@Yk9SmB9mR<Z%sRGbpa\LEpIVqXG!"2CaF,p.
%gl#dNLPCT=c6bQ%\utLmT(\(sLV&H0gjd5ZSbEIHWQoAtYJ9gS[t&>1=7A,q$R87*@*reJJ*rn5RC*;*C^57#F1cu]M)(rk.'ED%
%A+Bs?FQ677!$+;ki[7G'b"kQR=O.M,]#5j'O.$AMHM[Kdf%/MYn'8+a5Q0aKe(h]TO.AGD8s^[$CLcn[NTXO;7ij6'SVPa/rn*Eo
%\+>e>s'AeiFnTU_Gl#pll/J7XmlqV(C]COOC]?#Z/Csj4Gl\l#qWE'l`T<TVEj9oOg='O&j$.I>lQ9HJ/T+p<D/na]]6hNQDf>Y)
%mM4VD'_e2hq,,pS^3@57\9)qgGl6RZp#=)W#QGK6Dn5>U1\]g0na,Q2Rp0*$CF`WH*dp5[otu0g(LFH@j(WT4gG+0lHGZfQa>Q2i
%r9i+Too3bS5NhJuIe[OS`6fe?DB*OhICOO_`pLs!*e!qbaMEMrb-g8b5.j!uV/23!J+;u[e^Glk.<5@-d[0OY1R](OJIAZL^T`1M
%cB7,UlW4,$nTds$nD$j_laLe'E8@$k^,R]EK1t^;Gk0i&]nfc5g?"eOb<V13?]/QpT.Feq?!CXZ_sNGk>^3Jtg)W7^XC(nk@^5pY
%b<Lp.f<9W#G3DNr!m.h@r5,dIf+u[hfD[C'et:50L`)@7Mm[p2.J5nV<j'2DRSgr5bG`n4nCd>mfh/:LQZo4+$cMu#U[nkkYEe_&
%/'%'$%=!$pn7o9b^U.tZ4Kq'5(N1A-L0WYPpqsZ<jU:M,r6j+#)tPGk*XZD*rj?1cNr;E6,)#/gF5i?C'jbtGh=DA6TfkPgC3+i^
%->7hP?>[PT\%e<,2fHurTC.-(j+"?)rnrHIGDFq6hi$LhA;,JdKKROErVQFZ\79"l^@7b)?Phb6fiVeGjRHgZ]$.p,QMc[a&&,6\
%I/gT+<iR[hKo_ib^KpX#rr'l'*dho%44!bWr!+-mr8A&jU]0ubn>.r3[nFp?&,,##]BA5c='"l6Jkl%%K)FT=8Ukst-LJm0@cd0K
%'85=%JG%YM?WtV(lW7H-1'odE3YD(o7uQ=lLDK7:Du]eBJ%0(R=*O*#I/*BSq%Mun:J#aU(:^W`KW@iN(&[_n&hK-&9ouKH9b:(O
%_u/B$^&j5b'(*Zsf=U\1'6/V)DZ&m&Y24Wr_S(-pr=>G_KYK-o2bZCN/(;aS9seR(RV-(&l\EZa/'h!54o+6hZ+K>"f?/T.r/B(s
%nq3G.F=Tjdfo7ppOe9r<@Y*G,8.i-!M$nek2r!KcqY=X)n#Ti@F_4t*Smc:CN3Mgm]=>FojN%,eN@S)s_M>%ER)u5Ob;AkSR`Sl@
%?Nud]!aYc&nE\mFk5H/-$M.`uao]i4Mn`!9Lf[nFZ"MfAp2g#n\W`XlQ1PKVhtOVDOit,,LL2.)n@e;j0'&oXRHIn0*Hgsi?CpUm
%3VBj/oBtl>dtPR:ZHo\&4i3t>s03m_j"<6m3VE6j_EXCDf'Cp@IV93Kb,fZ-rPo/sLuXT,A8D)hg'bm:=0-e!0M-22aXm&^8RX6@
%o>eaEc].kpb3&$,Sp`,JnGBu^bi`@jDl`@$ek[ie4lu,a+2#2am-9^6X#IE!6iY?XnEcPr=];kE02<>8nqPrSNR)llq)s#qZRses
%?i54'Cs=>.(YbrP9q1eNQ#C$TKg/i@F7mTF)qVtLcCA*W&)V\Ul1(C$-lILjDrI(e@secerqsjD'^/<?.NYAa>bL1(<s:;r(Ae5h
%"!g]-qM)bf/?[fUYQ<H?$GZGAA1M_kS4MV21LJ#&rWKnb4R[I8U@@76Y;EH$C"<#j8qr,&Hl05nHWr7NrcD,4K'<,Zn.b`FPOjj0
%2'i3S5FA9WD\45cf)i(6n/>IOAuYaC#^A(PFHE:'YC%K:MQ],`jO]=a(I&o;Zu22$pt)fer)G;>p%L?s4aV\;Prj3Yb=*"n-PnI&
%=0[!u4KpakmQd--*llk(k'FQ9g(NcWk45!^JmTnqf8[]2='#>`rOE1E\m@dUWPnGj]9Y=dNo!9lgTKh^)X6B%*RN1kGZ$KhV:Acc
%gM5A<+!*X2^\FL-8&t$^n`rLm^d22lP$Nk=@=I1R`?dA=IPS\-m_d`Rj\IfWiIV+mosn1f6h>?RJWIe0"^J"al6e:'Er;G:iG_^0
%hsS0AJ+'Qs=4X!m^B9n4p8l"-G5^[R`h<dlhjiQ9E+cR@]_]t!DmtPi^Weu,[T^=)nnE5^lcd76Z^TDshhnrn^9)jqGl>YXa6Td+
%p$BPd;u[nG^%-CGkCqYTNZUB5qV:om.CWZ@d\Q$.]KPh".r668b?_bAl2po=gQt]3S3Q]1mF0V-X_1k)r]0T7`NBH)kLnCPf?a-f
%2mEc`==@etMj6(smP2EKB`2^E]hZ+ZGJ9]aoPXWkf(j[5*dg-NH"1X$gK2R3gkDm+ea=;l\$*NVqTmPBLJGERX"W%q5C<3JM!B$M
%fS8mVg-*aWIQ/o!YIS%r;Jr0UQ+)fIl&M%HGlNG#;s0-%l2laTXY%86q"DRqHhY!E]l(=9LZ-Onoj9XqD6?$OIVc=`nC>@aZm`h-
%RNHNpSp9koaO##>&cBEdqkElt_9^tdH=@>1^e-MhjH,M[NIHpULTj@Fs6nSl]]Rh@[p^46=427TeXjq>a]+3g`+h$Ao_$E+-s"5g
%jqPbup%`*)mN0@iY!\?nL:k3ZUWlqa^'Q1"V>6t`B?)^CHUF#?.I\E1q\^1!JRc<X3.^pAn'?L[](.Dbs429./9l^1g!I&)]X50$
%hp$\n-b[clpVD*\"3//eV_JF"]6AKWgEe3.`l2HJ?VLQf,A%jGmDb7+fm2erij?BkS/DogT[TfXpJQJ$[]VT,pH/7)2OKogKim7t
%:h=5Cr$tP>9fjgR:qn"ADV/gH=!,Lpg@dDQ"7,9ia8L&4BJ#6>"P\bM*)u:D#LC02f_7HT^,Q&Piu;(S$QF5:55]Kuil,Q^%UGi:
%gU61!]j1Li\"VL1^Nb)]S-%%8F^_&6h[1aFe_:nllisV=\[8g<jQ)M'%lZ_D^&6jGK1Fm`^C-PIhi\kYF.0n<nFBqEF=?2WB'W5/
%krR2qkg3NU3k9P%r5l@umk2==If/?^`f53)r7;<,(KR_eI.qK+on0fr2SO5)S]o!\CH+-j>Wd5qm*V4uk>t/rYkN>>l7\JV?$q.g
%e"bHM5PAsGlID$CO"^1D&p>>&3p$BaGkKJLji_;nLRE<ma(RAUnVh)M]9OkM^lBo+n(HHg5j`SVcUu`r1VGBVZ*!DGk.b\9qb>i1
%J_>/3s$Vc3WT2m2<:%8mA%rm5Du]D2qo7<QQi?t_%W>utm?ZpZ3(An&rp9NoUF'F@+7(be$/WbH%4hK8?^L7haEEp1>\7G`kfug;
%-\W#!aRn2?V(]g`$SQF)>@0P&=T*MRl1<_?ouH[5pVWm"m+V8bmX0T:\[M2+`V!0mbe7W]d&S7(X636Z\b/&Ir:IbXDtYXf7/!W:
%m>UC+/F].TZnnnW#oq^-j?J#Om'9t?@4?q2Gj3>FS[[;iU6p/Z]pLMIZ/>J6X\KCoPhVbL%&`NkjlXI0$o_$"(cg&2b'uFaZi+8B
%S9Eem:*un-#Nbfe3Ig>?pUA.X<rJ,Bs$XoD0l"ongEY$ufBdj@mt0_qfo0'HHX((q!;!f*bPjJ<N*t=NOmQ/GNEg!,S@%$n[`:f@
%(>-M2L*@h5Ik>i$q=n:B03ikV_@25E5ktA;Ykh41_g2#[m/6FL[G*A\DSdaq(]H*STZD!J\rJ1qPOhHASeSdo(68#!m+$bV@;u*&
%eGi.gqp0Wm?#9sUgg*!Si[X`REV@.-8af9hNmW$b;:cdOjP[DRO433.%p9U:ZmYJ,.)m?;:E.ZgpL6qQMcXr.YMRZu[Z?WlbkqE]
%bAB@KAUE.H&Wc<nmgnj6SlWIWjiO@>Il9j9%*1XlIcFR#/ba=q:-?+,kO-)\TL80[Z-uM7:Zi>>pEF>kFJ+OHTtb,^g'BOU?W_gS
%rkjTc$Qku?]*gVh5D9=oY()p*oC+O@cTM4gRFuirE(f_.DSF/O?[=[2pVLgUSL@t;drKHr_)uem`FLtLa`HUslgL1sqT#d`?>3U)
%pq"Q*T%1jdo:K+2Cglo\B,lr^Yk.5M<oqusm*jH+LtP2riU$#:leLCae'ql3qep+S]8?O)fr(e[YPF5l?[E.[_qCrs``Vp6EqX54
%pU8t<R=-@b[[V\Gr9_5Yo'&"GRP,)g-X"0);5a6:'_LtdB&b!+VKZY6hi?U#G^Zf"amUG?89o(FVYI1"(A4TR1JXRSSN$T.b+ke)
%pAo4.=;I9ioJHI4DPrguN-mjcFLS"Um@S,'WPd$8l0E-LUij$DJ00QXNg6@Y7lPP&H$MLF`h?5?`Nr4h/CN\`7kAL.ihoAb<YAGd
%T5GmLoCu@F2(aha*p0;q2hJLdNgu\jVA^-TDnJ74ipa'?@FE<Ai=Dft4K+lH%*="#,4A="qKOMBm:eDS["fn9i9iJIhdIDmgg"+Z
%CJjrnCcn:/r:_fqce+HhdI$Qd$cgTlrBYE:eIW:d3Iguj[jA=E9O;1dVd<]EMKo/R1[USqLD,ONIrDk66A1OL'*0,.Se)J^q-p3q
%f!Fp_U;IX=#Q*XqU;K>mK^_!j#iEsWSKWS=[&1b4e(6>qgts2IPNdVUcA@!#\"\2]1D+^/bTs@naFglkLTQK`^N[^,kC3bes-V,#
%QnQ5Q9nCGRLBfmp_rVi*TcS'k:tn3b(`Jt3p[J[V>JJ&X@OfLFc_+V!^KML:4[:dnpG7o/>J#-qcHA#PJDAI9-o[,Sk?\DaG'hf/
%GlUrSp_b19GPd>9"P(30=&52sA(UO9l/toq!i,!Cj3a4l$(Dl0B;JTPg9,)L`f$tXO3eD^3:hY<c0!%3Dnhg)'8P*oc<^;C\at?\
%hhUtGUY5T2hZ)6g,!-pTL<eZN4TB2+m'K6"C`S`F9L%YE'H:,O05$)!I?Z^)WkPrEJ%X0#$(X99"d_?=iO#$!R_JR.563Th4j,.>
%drrp:e$m*SP28^Q'(,W?UPp&2V]S:U4MVslG;kVc]aCFVC""./pUBi<*]gZd:"k&CPb0[[m,$JlpWXL-p*G6&PCE&ul`Z-7MiW+p
%N<#-&i;I78@_?scD1?BlimW,5PMVc?Hgu5;!bchB`h@5/31;6Hip^"C:<h\B2l'11'ZZ_?B:^4Epa@Ja*BQ'Z,W?(\qC-Q,R1kWZ
%1)-WYD5>Z2]GcR2fAGF`iog]o$T/1:P%/!YJ%[[iB"9Wf\%t>";lb#cdFn*#arYtRr:ikZ_oWQA6Zh_;aj]g9o1LQ#'Y/GY#BHoE
%^HMSdjLkD-;^JEgj?1ic9#(5nq*gPlWa:+!ICYPB8tD@O]I=_MQ`h2bVCusZB?YW^F@%?+L,1[JJ9&NdN@W1m1Au3E%t6Gq-ZhrP
%GWZ6_HfJ--Fl.k%?K'K@n[\)CSPLu\f.J&7/9'b3oErk*U/$$*?Cu&'EHn-To6r%NE4/)95.+1)Xc,k]4J5Uh[s@&j6CF2.SiM)\
%_VLubSm?[.s8$cpc@o'g@p8-9^J?tKCqT9._)obR]An^bG]',;8UdqTUp<L#Eo`-_PF+>@p1SRlrq--H]pMJ3W.+V3r9<3.[m>ia
%JX]DATq?"=M.eR!<&%<.RZ61]SV1W\2IZ0FA+YQGn-d:s:FacerH#"p6rf9=q_t>s_EP'nBO82iGLnbh7qVXmn5T<u2Dt69k/d"@
%PQ)tW-.qY&M>5QRUH]RT:[6-<^N"ouDQ!K(qVfJS&$,^Mq0(s!l#RBX$\(;f%e7375HSN"a&\3uL8%4pX.OV??%78H13Ardih4*^
%DjR^W$@74aGCT!?YlM)_-S1Zn=9t'=[X6WCBuR5-s1MO9<+hMM^.;sF\f*E+lI#em3$+lkb69L(;m!53(BpkB'L^m^W=62!p`a^4
%MD^S88Od2!P2t0No[.8bEtJV:^LCN_=aG-Y;C@).dqS7;HPj>'$Kq!=.rU-pY:\+ka3#3b2\/Z.KL'_A'[ACfk<G0[MV7>NgDA;<
%HLVfgjfT>g\lir<ZUk[o<*jeDk5TZ!^`U:u`Pe7WR;9t!:5g]m\WpA`5.oa`^@gp=]2*L!ihm:aZ#\f\0m>jqqRjQ8qXpE2s6':E
%kEeCs^AdbQmc<0GL"hrs>\U4gf.TA'H9K;IoZS].?"-iC\Y2Z_FKC()otS$5:ODp9`h?ULT!/,l9[D!r0eKnp1C-1SFWe,&598c!
%QJT=`Is^n8A:F'hakMV/=IieOY$.3\#><&c@J$f'q!dqHZh;ZD^+3O7\Dg'N3.'f,Kr$HSr]L3^qsA4+EVfZFrU[qthV-PULW/Pr
%p$&%?1De?L,dH5[^TuPl,2)Y-j)no3,)5(X+t(sYkMLbCIsh(f6&b;/r,W3"'K<nEO3XQ2[a6;rGu*2Y$3qimGX,R0NOhFh"p=/-
%Dq#N5.R@-Apl2k:W!#KQ_Jdp=%\sNQ^:NeQFbO_;l>?tDN7J_7[-dOK]@Re5d+bN-^JS&T<I,U,iA^$/#BHYtT"=D1FTiM(fi&]9
%UTSQdP$#-'Y]FNMa9(iLk5&"D+lI#!,F<i^Z2=@uKlhr\O"]C:E:WPlcc<#b`5RE@>;sj2I'5I]Xqd-^3[USmJ!"$-aX)1jC[pnA
%/VpdFnX13cKD19/@MuSk<1tpFi-BP9`mIb:kF9uFRDcsc<';T+=t[`;'61pm:+hup_uH<f8#dgA_]AIY&sNX2Ag;WG9PE;,jX67I
%;03<"?/I'/DHeU#H;slol5/@(IPjd;Ve;to7$Q5@IkG"fnqB:h#h)mU,3fbQY9Z9jYDG;N/q(90Lb^bbRO:d*>eHELS<+=h>83,$
%.l0uBpN)<oUW[">U@uR6PuP'K2%-k9\(&<pFA$g^]qeqh0r-%@fB?MRZIZlYW!m]O'n`/"q!d"$C+"5^[q0UCM7m^(kf`+l)40:Z
%r:f6n[e9#Wmht5Db7k40Y05-=qQA$'Wu^r44l/q>a*Ur2RQki_E6?CPH*m=)M^ql8j2\5c\8639(7'2ALc?;jjk\V%CW,Bdn!6_?
%V3N4V]s!#^[oV?krtIAte#/h#YRNA\g0^BcZp4Qtm0aaDq^SAmnEl)(pJ3mfYG%A#mkr&[8oq<dYMm?9]k%GIhTV)!bj<f?:X,RX
%&^IujS6Dk]\P.d!-.;m%oNlePWLi7t6o]D]r?ic*M'LCZV<G.r:D`SimmHe).(?h]ba^b?j80m'a:`gBI;^;]amV=0:cl1\;*=7@
%[LW?Gm,f2ChCn6Y,B*eakLeB"qcOf`a;9("Lu\TorY[)E0C=[di=N5`![@A"ONhgOMiWZFYh_+6puUA-'2ZZITEgQPgKT?Kd]p:%
%o/bcSOn2$r]?[[R0C8BM_[gFqT@g'GJbH<-p^u8c7<hOf(n6FV^O1e8Lu&7%RcSt;>+g8oDHL]:,7`pL=CgOHcPdtOC5<M]27q]L
%QOdFX0cKK<jc,2hN;=+F@(rZ,/mnOf^t5^gCD>1]6\qmkVD$afGiG'[[aV`=h`\+F:m]XS9:MS4%Wfa8X;YD$bH7,gPd?<(DVYM.
%Fd>[2H1#u$.&/\Lh0(eq@sPc?f0D7Z9sYk<m<7l8S@`?^nI\u<=%mqU7eqIQpN1&32D:XAq))sToFWb5/1ti;&S[HcmQ:1]?d(L\
%Re[6%k2g$d]W\aCEr!piB55jA]qZ-c=^TmH!2?65AWB]HROldQGZhBJhB0YGiJANuYC=Vo;R<?6na)5G'=R3s"6,Oq,d)MZ%_;9)
%Hg4L_@ks[Y_qXEP`g/;YL(X(gX#"iQ`L6Sk/McS6D<i^oi*Y\(lERh'L2It?=&r"+'q_CVn=op"k2OSVLLpDh?!D<FHPCq(?XqUC
%Jq/PXo\'V2h*(`])<$qS+5W6cdN9fX(kSD/U.HO[GHg0d,:6El4Wl]V_o#@PI;a0!`k[]aq,FV@olE6B#:9OWgfu"0MKsL8$7L,I
%n/XIVdR0c^ONQ$i4PaJAa22j'k..h"CUfrtIk'.=DdE8pH#qu^NL0Z]Y5WQTrq=-aqbf=X*;Dmj0[crV/o7V]hW#i9Sd2UX_Tg=]
%ft1(/^N'&Aji7n$2]$B33;d[]iN!p%]A,-/NO?HEqS]6$[A=f<l8bL3jo2R0NEs5C$*rRiMCa;TiScF2j)fS(Lf*D#<LNiFT3V5l
%N"9#Pos#"A5)^6iqt)2Zrkk#VNkKa@aFbN`T!Qc0P@X]@kk#rth]J0<[/X1KW*&BXWXlS"X=^gf@=8sd%Z?#.KE^8I2-[doMOUL>
%muNa1a;nQr%_=h6s%Mn!hXK0nT5;O_iJq5m;Z\QV^?F_UZ[:.oX,G6>qYJprHVL*c>`/@W'o;h'WBff/GTDq-!KZ6h[84!52_i*<
%!d+>4pE*c+P3V;Nf5KMog3in7YCiK*F7I"6pb2X(<n3^Yn\8P9!kA'c^`UUpT7:\%XhOf.m`hY`\P8I%Suu>NqS)gojnEtk5<[p#
%hmnr(4h/(KpWDdVaZ6rmWSDK.mWeN6ib>nKr-<kkR8<@h:CmA#b[&"K&,tb-+$\t=B(!MP+Lf3PPGW?%T.;8F(T(l_%n68S1[55A
%mK`BCpfi!os5LLP_b^<l6JK#UT)5-?;p8O<qtk@fpZb#R-9T"W-^AQ)S>k8"D]1DJeBbFh\15iJ@@IU>gn_'1(0J.l#ZLJH47J"]
%'@W>;iKde[_YL-DRuD26N#l]sOm1^G9\gXoe+cMpbKaM.S+sjhc3GXhICS&n!-O'+9KfX-b_U_+.I<iY"39V`1T2@`D]]+omgAo'
%4*Q'\m_O>1N.O%,KUF]=ruP9#9fje/C$0:QT$ZIqQ;-ZHAcift0WceoYQ9u+Y"Vi.kU/!!_NRSskQC:=V4S]WVL5(O$D5_j5r:iM
%iW::cCnPHA1ei@YD^NchdfgbBkWQWg^\B-<d7fGK2XrpnPb><s1D4%.IOSO&a5)C320G;SW\%l)ejI@BFqWA)U3V,Z4n3Yn$e>D(
%_2:hK617(#U+$KaC_e=q16$nF`0?H.RbI\")'HYgb7KMkIOVC:hq5S^D=)'1FD"aQq(XQ<A4oeE3Eo0\mqQH"5te;P[cIfOOWV#!
%b95b[`AFQGf^mjlY+F-oX8!!0*I2"/Mn20s_TtDS&@H'l\)R\rp;Qu_(lri]O9Pa!4c8Cp31?=nXb/HS^7*POm?m$pQ9j_6FiE,T
%erar\,n-P$0T5OWq9Xa$5ot0P%J/W)m/?\_,7aH,l2Dg:C1j"5?"o`'b0HZt?]`X[[Cu*jVQV(7?W["f8QSU&Y3?UJ)0M.K'JA^F
%;$[@$2-3gi(eqO=-SpVPFd^VXB\L/H#FXmPiit+.j:69K1\?kYJ^O+]*[JV72Pll\:Cj;VX!VZ)$'P$:b![.uVM!A</WlL,&h-^.
%/F((VNr>p(b*Yb9lR$OM<O",Z'GFD(D;o&4422fiGsW&U[;g('1jrNi$/;+i:l+DBl@.DEB]f[b3fIB&m3oP5-J1(Mblr8H"figR
%Xb4:*Q5dT`:7AcH*XteF['K]iEBi1fePC_l&@B:@;#.EA_=&C=T0S]>":B54__S=r"4_OZV7&6FJX]#77%ierfOD^<@XTA4FDY,W
%#p"OaJMKO1ckf#Nqm)WjKB?<@@l.-figRZ1QUIiD[#?8kN*M+*_"T]T?*a_L#TC/E\Z-,2Y&#sS%(UUUeHYuN%=``H>E:;7Y`.9Y
%igZ5d%-3<?Jq$GEdDB-HFWKVX/]/6;;IT`FS9G)N2Z+-ZU8"k0\g6Q>#L.?bcqg?b7"(6KZd=s0L8$*NN(2)"g1>+N7NLg&[L.$T
%:huRm3b-\W4LCZDiIEgF%$fce"25)fKmNWZVmPr%2X8/5q=/o/6[n$0ldFQY1ruE\(`+iA*1ghK4D`Ak_q]haW_$?X9JI(62i*k?
%a"e<?NAOR8=-fN!<]4r,e+/3G%RALg,#B*$6IVXY14%P+B%6*fiP8lpA-BFS<.,NhV$S&1&D7BG*(2#N)Pqio=eK;[P<q_D+<#+D
%0ko@lKjgsL+rn*u$f8-,#s)!j#1Cp>AMbs/TRYoe'+YQI^+u54j2]dp)GF7:cF9"GWPJj-:fntqSDSt;$u/ID=lM>D9mf>2CKX:H
%qKPDJJTXL6MZ[Yq7I$1\[C1o:2GnuModrF?ckN0l$Uc6(Tp_tgqC2&tBG5P\@`of\?fS.Gre/_lKb#Y;C\@)'$"CqF6<%&sO^d6p
%)a:4:dW%D7*Y`-d$+2]g]+-$E.>H;ch9`NjrhH0!d^H!o;bq)Zr]JKYoL+V^hZ_CDSdbV(6!F+-%NKY@8DuQ&JMi&Y9ftb[%tcBa
%=N(D.J5d7VRQt%hks@iETP8$VW!d73l/6k*^Hh1X[.:Hm"N_4`J<!YO7+*>sl#g&X:MA>%l`_bQW7+Vd"mdJ_mU^sKI9Uh/XFt1[
%4$amP4MPGCkpYWKU%H^5B.'XQO=0l55gr"cNh8>@-Q@UI>EuC\VJ@FG%KbM0)3h6(gRo*=Q)nIU[;U\d^oiBT;^biP[R4IRna5ZV
%#19.T.Ynlk6So'b"7g[q#H9C`h^h9[4UCd)+PJjAJs6N[9-ejRK=%aQ-A9Go$]/Rjro?>rE9O>/c$UU$I#q`"TL!3=ROhF?/Sd]C
%UeT_G8G!!@&<3/N.`4N-+1r1BgkWGULY9+P'1t<:FZ/Z5JqhMMf7pa]$AZY*N<*])NPh5:qP(5)>E^S\oXUcg=GY=sSu/38P>WMu
%(qF\o%C3I=-f>Z]3g2*CN&LT`CZSA)KK6/*T[q<05]`l;(:)f)bgb2J%@01$0SC%o_SY(0P(c-t2LU0#*Pg[<8I^5+%i*J9eZ+_=
%@c9!HWjFXf`1&5>TR[b(*%Sm6`2XBq)OX_dE4W"VRm&CeWo:JmLJXD2n<FPb2X$*"ja87=M4MkZE0%I\nI=/n_Qb<?;^^:b/Z9N%
%ZDpWjLN!D^BBh7WN<dALV.".8di27#7qg`"=\4u"?XP?<A!BDeN^0(Q+IYab8K/B<fdDFh(bmo-D%J]mMu6kf_1OG,pN[%9R)WNl
%EPdZ'PT>Fc10fa.^PS2_@R%6HZGFfE<Mh20`-$1M!F"57]6-);e0PQTfQq-JTH,j9Tr'#cKbq,18gs=YCDnM(^s!!U-ZG-K`@Mp6
%B(0E:*LZ$NF$3VE*9rEW<#(N@i9%<\((Ct!V/(nY'j=%Y's/+IQ"d5<CVq!KYYCK*@shO/Gp^FsSMXS&<8&Asol6r9h6lc*c+7bN
%,6:%L-n$*1+Y:]L.;7P!`%us3b5?q8K'6SB.q\[/(3TCsLp>/^D:F;2%,)us!fL3EG[[M%%jh`&a#"(c^jn$N#J,K*(p+2JKHtgX
%:tI&V%q;4Ul%l`RA-#u)2Ei8qZqAfe_E<3TQ53og>no:)-#R>(Nq%JH3&a/1M;?Ig&JEf;(cX&I[k4W)omq$39[Pbk2WFJF@/Q,,
%=n+4,FkOu@R7gjL?0cD>V;'aTbufJS!V%l:L0^usj+1SRR`^=pM\L8S&.MIgL;Gh`h?1&d3D28-js>*LP1*--%TRa_=<qI@GdAea
%oYq%4jLLueS/QV_UA#LpKYl$gV-=J,c&MGK7!:TTOa0H"Z[:&``EZUMEE&6H[-_Z>U(P7N.7%taUTI2&V[#p$\RW:850iBn1I>m1
%ptD&#<6An,8)$N*R;h5nYi4,@UCM&i9klMIe_t''MS*@8=D`W;&R0oc>DAIED.*,P_3NC$aPMUK2,F?^O`Z-s%`>XB!JPn9GW'4_
%!Q5Fief*8n^ec#*@a\!m6uU]aW[]\n>m^6ml%?s[Jhp_t@#/X/R=ip$AlNjt>\ep&#u_h0QWX#g*T%jf6!QrP05Z?#Xb+@Z[A_I_
%4(8qr9+7!?(?c1GZRS6X;6q8>X+S,-p.3j>ThJGX2A]/`8R!b`,m1/<FOCnT#&]r"X("tmkqIXILW26263/Y4H\7JQ+1)J\L(CI5
%0HdIP(+Zj$ZF6k#][sMYL*Be[AQrndd$Vp7he'9Z5.4t@a(YZ[+e`5lh6:W4W09L$8iF:HgorG8H5GiA_FmlS/iJ4,IDYW<gqs\T
%Sl2Jc,Uio(Bl+WT9O,"+aehkbk!8I:WS7Qa6)2Hl<c&HkiR80^5SZ_qCe,&J)u-1"b#^i4W"i;MSmKR]-[Z@,kCE#+.EdRlPSe:l
%;@GH&0:T8`N-,hHkW<mge)-7iXlAS_k.+m-_TmNr=Ar@\:#B0_8i]XV$]?dT9up-M`T/.D36I<cU(&d)[V884[/(']6IdE^d["%"
%Di4sC+cs0U=^'04#kH7i/ZV51&\o15U+Y3M55H63Ma8EgR[L^GIZB;[7LH!M'0"LHrg-6BLZ+;sFWq[?!R_Tl_Gc@R$XD-rnGtq8
%Q"t#$p3;j6S80tf^!ac6-'nCg>r;&4aZMoLTEde>88]iD$&#5$U*cK*C-'\0][7KSHiitTg0hTG>^S/pK7rNT1%AG2JdEtMo'.?m
%LjDD]W[7BEAk7bKE_+&;7QZ6qZoQYrfd4[!co,h\Hn+CmkG%aNkp2d`m]]!'6Gk4O`&g76Wl`X(ej2KPL!?A:QX%uo80G8FNh5ac
%I'tS>]E'<#?oe^L*B'Ru[R_,&%$:Bnnh-G1\ff9\i;U<<%'VKMT$=6eB_MfgmDC?,k->oO7mfVdA6a/^_uL"l:tE%6[ND/F]O@kZ
%2?bQKDt5Lm-k^7KQnfbJ_P,T04Cijbd'81$%s')CoRI+='dsPR8!;Upn[`<s>*6AC&2sgmk\ShQERDT<NYhLpC`HieYgJam;[,$H
%4u>W=(=>jBD,UpDA1q/X<?W/1]0JFr8(5%10Aem)H;T`i,%CZX>aVW3ZAagg-7YH%KE\M4oF\53MmE$Y?jRL(S>cOD=WqEd(C^.R
%):,P,(E>:NA8VQt'/gD67;$uV"iKT[2t;"X$tMt-'3Oh>K<l_hcKTH>UJg#hSrD6O^q1p[baQpe&-W<STK]ep>9MIJ_:!S669&)6
%))KoP0lBo/,B%!8AD[(^P$];C&.17ZO2NY^aaD"5B]CO.>?ijMP#O-\\>Jsd+YnhgN`4J*T5mcK?l`-G3]\W)ClV.rR#&$jCJ>YI
%]H!-i^be.ZlJ'eK%Y>J]O\B<%ehM]X8Sh4h[Ns5+]&LT\Cp53ibJ.+E/Ztg&\$h,Fkfa>oL,2.B@,(Nk@qlBM$EqgbN+lsA4D+^@
%2Zb="p8Uel80hOfP*=`(F1)2[i-+)bE!sc?#-BO.!^3$ToAm]c?-1,gbSfJ+(&EGo&Sp+/'M?<bd(lTe$4&ICn2N!iR@MP@*A%rk
%R+N5pPX>PbRY?q.*ik>?Ck>FCUWa0NHZYhP5R:%(\8,k!,D`s>+H_HJ!ao/2&Ib2V^lX<Wl$.*Rd+!l:i0@jaK<8@7TFQq#2Le+T
%qpGIt>rtY-"<b02%7f1peq^Rt"3,+!=e`S@@#MgJgXPI]"-Bm-$eKA=W=Q4JK0i!/B>Xg:"81=km)MRB_7M.^J7=;9]VpXK*Ys4j
%_Gr?4mt9b6Rj&ktD;@SnAIr))mD]Gm$A9^-h]r_eV3hi#Pn[qkG<8p41BPIFWtCO9jCf5"/XfkIeM*A/:(o\h2$cO3))Q/G#AC23
%DoV4m'^:j6q6uIT!*^5s2Ok.7fG^V5T9t5I<ct?!a?]S25^$so??C)(*&L*KD?*<LV_D=LeWa@^L<2'j\kQ7l=DEY?AWm-["2Zrj
%N%a176Pp!JZPb%78eX*RgS>?=jE!\Q#bN4nDK=Z<$J8nu7Rb8AA'qj8$75"W#0\SpAu;msa,>R)_)P$aUu60n+p?a5,kZG$J;V\U
%Z!h;JEDdC[?rR^D@uF>b&HL5hV,[YKALVs,WsA\S"@oKu:)O>$MLY_adj6FL%d"^RjWl.giAf'd##Q!QR7QV=9otN',<*8LLm$\h
%aV8mG*(WXdGe@\F89=t>gJl',MNZmc;:O>;^nPpb^Pn<3@<5';(+T^FJ=`!Y%Oar$_^<GSHI<%Q6%+*KhE`h(aJF<QPluWsaA5D0
%?.ml-UEfgbgP4,j5W<1/GEA[e`+7b=dM+t?WbN3jd.5'WPtd[r#>Rm)q.u0"*+mgoffnX,?ipc!d<^CsRAjVD'0QA$PSbal:B4Tt
%Uu=`(.*IJ7BF-pLJ0J\6[.m>FFL21ANmV42j2Jm6&>4cQ&Q9h#`srsYeWOcq@4S3LU'JR6f1BOe9")'M5WCY0"q=e'OJRS[2LnOB
%V]H`W5LYFPejFXp!LgC*Q9@"%kfU]*QG&A$Trf$Z"a48UK?*UDMY(ZL8:P$Chn-<l0foA,_RLB<A2^Re13,5]>sb1rn;47R0kM-3
%_(RI8eiEp:M2fM"Gmb&7.N>LF/#4p7GfZB-1;X--).>m)05k?BCJ`*9b.N[H@9:`"Fl6mPW&l-$2ALi0l8Yc44M`_g%"nD"RG_Kb
%HP[bfQ4YSQ2%Tj67cCfm/HQi1AR-ZaW*ptRkTm;7H3+`R!6UU'r.14:OHV*1"JKd$&3f;j7S).JMLd3KR06?f]Q#crae1sgL6/;u
%5a-)h*"m#?3nalW,eF8j-E(-<hG2o:KEl+lOZ<bV--:6<"p0>f^uQ/G%#_O/S`0fZDHq:=!-EUo!'Qm,TTtckF4=?qj2Jp'34#:G
%d9Eu"aB4`1'iGHscs83hi#O7CEr\`9CLVIe((>=)pKoKg4>N4k\g%tQrerB;,o*Yc_.d($"Qng5c7BVk+sMh#ZV5m7WG,(>Oau!J
%l`NW@-t:OZ3W]=T^MQ$k!)_lI@lr*=!etu-A:\spJ?2->K(EqVd#u2^SC,n.6/[kr:j(kbGQYo9CJ5FE^#3\Z["g>XY>"""VBc/e
%J[Y!JIiL1:BCWkBDi3u:%idiI1VNGH2K#gHjl<uWoft0X*0.\t/:/Yo\Yd"('0Xm?a)s8Q2QqCe0P4e^]]>4-l8TnG0nmi*>4@=V
%V(^-;4cG>oq=JF*lPON:(H[Wi%I[H*XF"`$r)+UMgDGt-6!jrJ8pNTB2-:#6XGouqY\f(-)r-@XTQ-im;M7TG[[bH'U51?f534h.
%_^KiTP,#%;iRn>ldAC7_qaO4"6L`-dS6&]Gh]nMGVOtM#d0*%7<3X0cJD-qf>)L0_/k@+g"@N89RfN8jq6XjUJ1)DJhE7DU!#>k?
%UQJVuA_>98pb/[/=jd=?B3L#)bdN\<["qPZ_LYoXM^UWFI*;!l]#[J\3G%<iU$1/=NK>r*:ADlK7:@X$h7J[PQU2T&K\lf_&o%`S
%MBkE"Jg%@R6%+*Ki'B&UW*h1tL.75f1P%/^l1"D6NJ)sVp'X^<*c*)%76lGh>1e3&2O/f!dBdZnUF^GC/RX8RPbX=A9TcE*MT^XV
%U"BLor/k^K:=r-5(])2Y'jD,u&XUCj8hj]^)FpAk.tMG\Id.nS$cXO:'STPC3JeB#R[@f%>:TiNBFnRJbUuZC:";tPl`\h.P$q$0
%=Z@$!l"%ttMc,,J)/6tC1cPO10R.l--dpKM24;F`^iZI6Rl'1GAgaCa-BY/r]7flO+tPrj7OcA'6JT\MT`(%pT50O*UYV(==q@[6
%l$+KTqNdXPfdTK8\6o+Y!J5s27hQXV2RPmb0;mW"q]k>]n]BK.8bmm-gsQ*lN7*it8\$'3Ut1]i1OC@/AN&S+`4JaufIhtn,=ipD
%F/6A>j<5ND41EE"%YECBBs:>^G^,JeP2>V1f5X-/&]brbI?4XF"lKaTK#G_Z(/oQ&_&aj1Zi^p``@GL!,A:dS3N]Xb0b[Z7*sjKS
%3O85g?t"oDZgSL0WSj)h^;i?#b4Q%EE-9e(BLk9=RZ?FU:uk^2EBAc>'lqO*J$Ha^a,>Xkd?Y%u!bZ\_LD&<4m"&TJTC.n?.je5Q
%3,o^%*!C%n),5;C;_7fhW6l2ekm;uU-UA$CfndN%#$"5Y"&p+5p5r4+*(Wcf4SZE]%LNhmkfCHZd0HIY"!t;0-:`&PfWn"@GE0o*
%*#,'[beA$';?A8di1,E$ZrTKDP_+L2[4,dJ1Jg4+PiSR*$l"c<q&IGo)(6QJ)_#BQ'2Ug@X:u8lq'Y$B+pC",`)H(nNn'f,1aFOG
%-H4_\qMBt?O=:ai:B69=-E!J\/AMt9.-W,#B55*_lq@0]:m2QD3;k*2,G4cXrPZT[Stg0_rPW2iae?D<Ic@W9egX4Pdndi('^\PF
%P%D_PP$"+L@?c3Ra:\SIAIqsO^8Rbh7u0FB.Sr/K$d2BCM(d!gUaa6Yk^VZ#M+]\eT6+#>,l`NMXX#_rnk\aWj()[5+V1qp]nG6^
%V?oH18t]SsgMBM\&)\GtoJ4R6.t#PCcb/%&Zq0`dP(:tT6B_NdTQIEkjF@n3q;VK&Ka;\t$,B/%VpQ^,B,,QHr8mPaTK\).jCr;X
%a%H17ju`kpEr(V?%tD`(i:N5;KhgpAac'$8'/5fWb<3D$IKF*q7ZugGE,AA)OQ7)7q]aFA,E/ira9\/6H+^SB7lHbSdf6QpD'`&T
%S9oja>?!@1aZTZn97BG"M5T!-&^HPd!o["P4<hm1nHd16;ue5TN]`G1KSni^;!OgBjY+_',QO&+j,b+=(oXh<-2.Oo3LB/sg_5__
%knMVq\L0Y3'F#qq-U;a;P2r4][>gF98jXN.i2'ET+1WaaPB!tEAW5NA7R]2OOFn'<0de&#VuhjB_]J7q9P=^TJJ-/qj]?%2ZZRa+
%7ooF&PVWTVFJ@!'%q%Ha$tc5SHVihVogV*9b+m+sGiY,5EXH]#`#O/``,c,8q>_G=Qj;bDgcPGdF`"GU`,Qb^MA>bL0]B+&K*,N9
%VUGiWQO!cpVi?D_.`\S!eR'^9XKEopZ/EE9.%VSu4;DpZ;p!iZ7e&;%*DY&D]pE!D-87I(J-`3[V."Fj_\!!%!,7Wbc)VKQTH9`F
%/e,aVi097p%P-Ls/]Y,Oj%;5q_a7#\Q!OWV[r<$*gkDbQYukdY%/)rVKp=V_=<q=)7P'=]aEC[;M<ti],%FDM"qig_3V1H!=U2(p
%^:buEU<VSPGR(4UL(R"2^Q`GgYuf#",B@c(4fD<r0tMp.AdCOMMRFtn.9Iu/]+p%XGhs,g7heD@g7017fqcE\!2dh?e7$;AQ7V)J
%p#,V=Gn4<+*e1ClbftdN[Rs:1iX9.jj'<#b?8+>?>G&EmNogJu]\Y)W(18UQLfbf[_XR-9Y^S'N1k:n0'JgS^P_P4Q@:9;$S4(!+
%e.,de-pD'e;MBo.:sM],"R7:1K"#n3U@&C@NW>MK*-O5h1S-%B'35^0/rDmPmA?kWC4l<smlVqqPh;lJQOg6ljAH>TO[gTJ',d="
%NAZ>*UjN/]CgP[PGZmnUSStCD5"i''.PV0^6"1.sFI7djm8t"dXc/!nE"q!T#fnH.=O`15.9n@(:b;X$UUHJfLf$`GEi)lG_OGdU
%W_%e/"Gf1W'.(e1RA.<NQGAa,SHLBPLSujhkrN":]2>u;AG>;`CF2m@AbNpH*@9dEg7qOo5p)NW4g.cuEY_;uX.k[C-drkiNWf'<
%C$.7)W)PCo9aAm\@,RsZ%&$3&Qk%M\F)4mL)cbEZhUfk(9qY7HA3FNA.s#\\*n;B6ElfE*`bYb2n-OJ)9m7+U\hp*7`&;!uPO+?V
%r+[&`QU8P"`LCtg5lj%n!$UpSl95?:5rb%i)ehP+].3:$Hft/YN[j#iWK1`9:3F;SWWXT1i+6K2+F0;J8L]aU*Cn$XPUnZtG&G@7
%:'mgcT[!dqpUolSIV;ZQFB-ILj!-VP.?3!be@51,5+^9!$F^<<-9JVA[%/Hk?D)q<cLKiS1l)n9b0QS@[K0h-&j8kTmUMekGd9NB
%!ED<[Dq*gH4K@Imb\G0@S3Ure73t"IQA.[n'H9mMWot0<#5.B#]>L;Mfr!L/_:kh4B)8;H:uC+Kqfl;*ZG,A?@"#N`P@1uI'88N;
%@13W=0pJE>2CbPG/jt6&G;EW'h^H%W;rArD^O.3e.V86>8;s#ig,/GB_=VlV!ut+_;.asV):p3:[fJclfRSjZkX%7pZ^<g3F)2j'
%e1%SRX>e:2dT-FF>>gRtJ=a4oUn"-O,XA@29jfqV_&H)pIk%n0U;S%Bmu<<=0ES:7:\=0X5b:htQHP"Y6-_tr333uum!f:bY,QkE
%Q%S7i,Vi1:UGsVTSC,.[&[Glf7PZofl=m!]N%p3<6aT="G_qYC-JDWYkOE7KJ/'BW=:PmR0^qS+R.>VO"P/el43:*(@(m0nL"=I1
%'&bd>/=9f$VI9H%RE-ar<?;\$*ca0*"![>GbT&+OSkFA$0d!?oRS6>L,[-WLFuOs8FD-GbK;jUY_'kBQQc>"UBcF<XMIL#2WV2QD
%N$<`],pQ<M)?_eI`'c?Y$T:XL981LAqH2g5T*V>(SM52?)\B4s;RAH$&r,M"lfM<rR6\e1&f@ZZk7*pn2:^,hEWMpDQ>,,.73WcS
%"A5R[]E^3UMP@X2I8MQ7j^=!U/!8r7HsIAE$57Zu:lL4/D+8Z65gqJA*_TPP1.GCSbo<6X-`Nq;$:VcA+9Rr5!(oiSBth]nKS25j
%.q$a"Ql)b>_a)D>^`m-^eO[*/-o-TY,LhXN;/+*j'aFY.#L>)h)O'G/E2aPVcko380Fsrd=".ku/2&<T)GWn0[TmV]?nrHnrd;W&
%[!4T.Ai2abZ26BtV^Ua8R<YUOdGS/^ehO\F$g+a',6dlkgG<lC.;q(&mmrOX6@g+U0]auZjp8E+OdCSrJqcO=4$4.?W]:>sRqfN[
%!:n:&P<NUjbW!k,Gs$dNfq%5A*D8g&9-7+#Ktf)'<.j8+5l(i]M^A`K,j5Y%SNE7&_k8VF7EMR4S)cn/YbKm1(kA1n0Oh3j6%+)u
%fV?PnN\Uk`>KKiU[j?`YS_ORn<!]![YS07hI&u>;%;;K.5fiCCMKT8A=IOAM*s?_O@,tD.Wl9U`atW%=I6=W%)0MmT:=(m\7\'r;
%l\L0B()&A-C(j@RI2GpQ+lo@XeEIkUea9g,_IJ4krhOZ50W7Z,]s3WrodJ:L]WZAlc_*>K$<[VMcH0:.*sVC@?:ZaYlJ%#oK4*l+
%jS!FUFX$:6I6=W%R@$BSF\_!(oN^9LMs:enU:Ng)F.8saB[TC3pT[C5#5,6("Eaq`6!`(OC"QT7%q>CthN5dAGa)o6VR1CWc_(Ue
%&^DC$Fi!0]q]MgJj2,BFTY=\kG8Si%P\qQIeJZ%Zp@5L2@pnk,G#!>=5:T>q&E'pUSlLE1W_n=f*!MTS*l-:=.#84Z*5p@[52A;R
%+j#8pT(9?!@-ZV*GfQ"lN(o.l=Y$U7-U]8[,N9eJL;R-EHZAOs1CA0Bo"Cu;LZ5@e=OLhp^25tU`Ya?,3J=PIqGC\D'*kscL#3*X
%rj4Ag'O`_PW<R.:p.4H2"&Nm;QL>g/E`#k*m'WVj%mX9Mm>Z6NBu_4>:^7?Y0<N`9/?=JlDg;*_+JlZH3sRIA%&3sMXF`!j^/t)I
%&6#3amN'6Ob1[g%GiF`DR>JT'>&;&*"IdB`+4q62ei*c=*/7WXG5!eIBTteVhoi<E&5uaY6ES=1WA(WE_Wb)9WIPJs*J3qg0m.DQ
%]VESQN@LpV`:uM1WheX.+)/8EL`]-\b=]'rb#hRU!JS2UCfGi@mNR9.0LM[<[0I,>D(sHP<qEgUaNAV)DAq#%JO^3DOJU#g=LP0b
%-HB7+a*5CnagLW[5$ZcCCGQP\Ao"(A6H/a57BUha`>>I#/5eXRD!j^L.i"3uX-C6Id)jO0ND0_hp(V:G`<r)'Pjt=r=uOs`jJZ)D
%_a8WP7;Q*A0EdL^c@]kIEh"@;fef8BReaO"=49ffeQc&e*/_$I\tl3Yo&AD!5u#MWXLdLMOk>MD+C.\T<cYiIf@!(L#oj&YOsZ\&
%X`p<sR`<A$BY''JAdseu2)Ja,pN<rs->\/#\*3[V32aRcXK#nONf)Dq1D*@LIG:`kBt9=gWgek9N=_AdC8S+C,o']AP=k`*[c9m'
%=>"Se3gO\F"ce_Ed1QJ#H"2N-2r33-0HjJf]#LV(ISj+p(]ha@E2f_>WOSU?/no-2aLeTfN*1roQ?+on84ZqLWgL%^+C3,,rP*$C
%<?YlCldW1sE@k8"-*qo',^h>Cqk8O['a4hi19f;-q-r+$_PZD\=M20%jKQ_N\o][T)euC)RgU#W#o/^gFkL6I.iOd3oKZA9AVO&V
%oSREb`TiK!=r6j`/-$8-aYJ9F.#sY1@k9KNgjn$>D*4c<lr8.goK<UCP=F^TrZj+jB_mV/!n?E_4TeA&+fHlgH?p*C8-6*Q?@nD\
%ig!0N#>>BBZT5V+n/11Y%#XK,!tqJoSU-Z>h5]!=2C8ch?tf9.WP0XijEh_s"WD"=##?,#Jn*WoVbs+]Wg<YN*_&<6_YVc!SJ!8+
%kQ0-56B.V(0npTkMC@.Ej`DeBATZ=Nd?gDO0)1GTGsc.a61.\B8'^3OSFiO3\_tk$NiL7^1+YUg()K*XFs`!&10pqU!Z+V9-!;6d
%qA/Z%/Z"].j=S8h\iOsaM!cU=D+`T8.TBHOPI:Vs&d#sndM<+?1`M^cKoHHTA9Ga)BF.BuVe]FqB@k7/=P0QgY>_ijBE@A"1UW;u
%"1+9<e"V`LYiM`6/SMtb4-igP/@V%t$!PEmESbofZWN.8a]WR')UM6UB%^9,;!2C5Z)21q8Qgf(j4[<CL4^]?3["m#&q$uG*Qo.:
%:XI3c:_I#AF=L=GE["Pu25ak#DFgglYRJS,knG[B'I9\:65cp+W7.rc+%7RQ$Mk3"PtJ`q-77=/`%/&;EW^F;<@2Z[]!C+\8Z,ge
%0JuJ(k_q$2@U"!HX]Uq;a]>c7&5,QoQ/RfmSS/2OKrCfqX:3\acq.94Vs"gF;t*FYIT9$IB%tG164%n8rAqEfM1*Ng@T>d,g2&.=
%$>"Zr:2!D&C8c0Ol_IK;W$5IC:-o[V`So,mSI/U7"]J0n17T)U;lMJM''Yf6ObttXf1i#lTJKRqLC0hB%&2%?8n(`\:LO`]@63(?
%4jcAu_&6`YVD'jUF?7WW/GGJuaT7&'kjEJIVoL:=^#a"s"g:#2eNO`g<C%<VjET-s]#p^=K<q,7E]&Wjk_=+8\AcsgG&fI,pXd[N
%E'S.dDBu]S$bCZKS#Xq.%bX2`oWQui;/I>2o?$7fhF8Ze>K@taV_.1/#<C+Y@!2K/,RbfN5W+Ti-:q(H:?sm8)Gho=C)lEM(j'iV
%36s#T\n`;^r5Pstgb[7QGc]F9j1OQh:o[kBdOK2WeD9*q1Q%>_\lkPIS._T#`IS>O"M%ALP,Id`h'NV27WE6]>6YaCY":32Cm[(J
%)=(rpWfDZJ*YfGlq3WA&_`T]?Hc+rlF([JF_[m-M0-%6lm50Ma`<7G!kr_)(MIDA-L2`@Y_Jq0U&'f5L+l*S;-)&]$:%s6,Oq.`\
%W(q<"`jlUb^hQj8dTte00F3BXj<ehF(Bg.+WWeoZ,Uh1CcDRgt\c!K4eP]O]eblPHhR/p"D`&JbFVSqu8><$IqGqZ#&`*&\C82-5
%42-CNDla,DqRom'ZqKY$D_Rg1]rK[gK`YCJ_blu]E.E,/gZP\2!GJIU)_<Z89TM-:$C02f%GkK;_'Z5;]1E_Wh;#-8@bj$"g'uS!
%4Oo/3@;g9=4Z[Xg2j0o\G+-!RBq&><od'5*NF@e;X$W[piKSO5,Aeuq\2f)ubDl(qr1mmq-@gdBJ>p72]5N!4dR>+AJ&eNb+F_i,
%mo,ZC.YFS4]8+@9Zh/$\Z:usFc7dWfFZ)a^f#B\l.SoH\_mqoa;RAa*T%%@_1Ek93V@j"Ef>.hq,jB&?1QMrVBq(nD9Lj6s=YRIT
%dn9:`Gt2t]WXL#fNaJ$5UH>f9(7!?F]Gm5Pq9,SYFS6-:RLP^TX/h?^<jgb]T`uaS;<j]CW2"rnq9tEX@HmSO<dKZ3aFIeZ#I2^G
%&pi&As/'Z<+Ic=H:7*4XD48HQ@u-W:G/U\;iuJjnc15\VVf1PP"A0mjJRoL1.e8C=#ZW$oK>e-V'#hu49_!?;VZJJRNGh9'2bH\8
%8OLh<-RppsH4m&%TVN`rm>-WK,p#t97$DGJW*]\tkf@NNXbE-3b_u2MTls=,1M"AJC_H>94\.VR(S\6u,!`Q@7CEt/H=IqhS5_'V
%e"pdlnXIWGlJqMoDMOdSl9U.F6BYD\Pu(8E]$ZV.[?2)CN#Ph$1kepqs7rTJQOZk:g_!LcZAV.Nl*@=bIt;:]J=Mg<QD?\GOqQoO
%8HY1DK/I@hJZ($!8`N2!i%CI?R8(_r8Ac1^IL]DRb;+!3U.1KG;OL[I%VMXF8&gH&NW+d_"@9D.,Sa@6Cj)U?L(t;\fp*6d,pg-u
%6J#NnSjJ8dQ'4b'BOi14Gu1WZ&j@[?GZ]eT99.h/8otC.QT/qdM(TD<?7'6QPj$P8b9j&R;l<:>;FQF3"IrG1'IC>42CXrfi-A]W
%).Z-l/u]4)Dc*T)""SGD;pqDJ#?%pB\rN!+7>h?sn`6DNj1U1ojC'&p^FAD0>BV12,<'ZoN'p\*$e*%cUs^39eS%dPB!k^iBH7m;
%C,@V)We_Qfe<?Yb[,c>*e<UXt)Gj^[nQOM<n\nJ:?YRn6ooq<X,cN1?Ya3`A7>loD=dfAK((J9F,^n(7_*Cuo6*t=8V@bt+US\MQ
%RQ?!(L+Jf`VuiM#Hn-*fC!gL&H-;dsdA!m$A@lG")A'O&TL1[1+a%Og,<@ZISo!_e6XtsRXHSPPNMS2hHI8Fki0,sLFm's<dKs-"
%BSlqXHWt2uMr9)e6^Q/\f^^7J1rQ,!Bo3C+iq6P!=`e=b;HcA.BOK8W;KQT`Y3oI;J4ZZZ/7uRJbhNr\j*-/2d3kY7lE'!(jj`30
%``dJ<$B<-1@P&L81(r.?VWo@jSD;"a78CU1/NQ%0p33?%lgO7MUaAIS$6XXO@:FDN"f;Bd)R!#!M-NV/;5qnK;oOAd].^R)SAeI@
%=;9Z2Fu>)THTh82#;Hs]OmX7,WpEC(h_K_]H[Fcnc1gmuaH_Y97lsEKas"s9\B>+2*<aWr%RJ6-MM+mg!"EE&<h/[Eedl6d9B=r<
%/:10*a#]ftA,O`>VeBW.:TYVEf@<(2=U9"F:m\T5Z]8YpR`[mj_!K;6e%#?AWDD1/!*5F@l*SGj!bl^?Bc!iX'W;bJ#>Ai)V9Dh"
%WSteF*X9Elr;09QiRG7e%AjA(8a*P2DGkh5B/.^AB+d(Od\]dqNYBtGVPJs/>80Zg;CA>s!C6EN!e//,FsgD)#>G#94B`HMUKmHN
%dSTJp#ue+`e?mD`_jH;cpDe33LoG`8buNM+b&,f.^@;SIN+^o[Sgu1fT^N<S#k&gjC58'AOX!.'QB=J9-.bX8]YJIk1KAIu%qYr=
%E7(_S?GYSo$1&ncc=Jn'2fB1Wl4o9Ue6aD1kp+Y#lA]H51#Au/^)TM3+D",4SO+es\dbT)_:,Um61e+7p2[*PaIVCH5bFN=k1^,,
%AX:QA0asrKoU0][?PB1aZGY?)=g%qW1T7T(0rP/Gg&]=?#tp]/[j4;&nSeKogarCS#!lgY6IFI%<f%:lmkf/m;YcUY95FUGTYA)u
%o'qqcPnK59VrH5?W5H_CBo=sb5u>$K!F>!=eAG\WFs6/oW.W7a1C(b9kP3Kt8V<\M]f5ZTZlW_[_u%N.TYo@rR-bWCo%;,t)c5Wc
%k1b[-S8S_>7PiCFW,=QLZ?-r5T9O48##u@bDsZLu4m!k\nd=nbqBTka'Z@A]F'@s`"q`jd2UMb1XB#\!/5]O_#)k`$NL*Lq9`d8/
%5g1PI2lP*P!0]^PBO^pk"SNG]<=SO#qJrkZW"0dREe,)rOIpLt,2njngI(0>9e;@X+]JuJdc!Y/q.F4PO>C<.JB1\e"-!XNXOono
%_Z7KgT)a2KN>57>j(FM=d.EB#$cX1T%0]!?3a&$BM6gZ9G!:<J6!>0T[@RpJB,reUOa04.M1&nQkHhs\U@X6`85n+p%F?VQXQc.e
%\W9F>L,PKbI`tYQBc?h%T>42l'iCl`6/=Rg<1dSq<A$r0e2C\e?)DK]!;.L!WDhQ%Wj>67m%^DQ*u/U03"3*I72M9^O)^"RW.0dj
%-X7Migde'C*=rfLYT.l'1)b6,ERI\]XmLi^PB;FS>+_5!DWGg$J-FPhl.fU`.a6^=_HMKP2_lKk/@_&CTufe?d?ND!Y)\>O?#Z)t
%j/6Eeo`2KMi'0IZ"YACM@p'o=k(()NBf:sN5a:E(+EC>KRHlD*FR%@'`,8>l0,dNps%8YTr\jGWdU63UF5bF#n8uJZf`<,&JW\>r
%`l^a">8YI<'N)FZX7^FHLq8]H*?AsN4QC'a<.+f-37tWTb8Ai(bt()6WYX</)[2rb.\C-Jn"PUaYfPG_U>2!2;kOdSJg)SR.+Nu#
%Wbqu:Hs$iDIMX;;AR3VE!P*>i@;!uVJm.cu,0De>X2:e.7+>;SKp=NBD<rW/"4!'Gr#C\G:lo!SeX@'nd?u5D5qe1=jH2IfU,#4p
%.*n#*7$M:S@kp9>W^piQ\u<i6^0bKMKCR`m0m2U_26gAX>,(NAbZl+MAd4bOebHZmH]TV_?Q8ktW%<,E3N6??0W9Wbja=<BW"K)V
%D]_3tEV0L8(^JnPjX!`mnp6s[3S[WCCW]#N81K=Ick\T,qoG!T6^hEb2hsXT899K!]!(UnVNAQgLJ7APb0JQC%D':i?6SqJ!Q.)j
%d1^q=)D=b6oEa4l!Y+hOV3k@,Mt[gWi"SE_GQI[I-)8:JD.Be^bB^.p(]gJT^e_\C1jYr\A3.X/j)sH\(58dNjfBq8#c%ojFV30\
%@8N5;"-4S6Ae<EMq`5e&L;@[bP^E:`.f#ApAIqg01:lKd^RRgI&@aN%`s>gf(JA$HUCVr<Cuq-]_0W3("thP3iDK:95!nQ8n_.j7
%I74Z'^5]D^h,cG<iI(La4u+,qfm#CqFZQ[elVs=UO\roSmB6bHV^OPZ+[73HESGW=A'me[QmO0KFin"^5_Tn,QBbe8@XLoPqoD`D
%L8)eQ.+eXn.g5[I^I6/k8#AZ')a.EMVuq:5")Xo/TXGnr%gm&PZQ6!GLGH)B:t>GuGX.Y`0UBo\X.+l0D3%@11^kiYAT-Y)"\^`;
%p`2Pb1(Ia@0fWBWj&tZ4JpJ/ldhYfO44]aKe(i4dCAEfd#]eR,q%?C/ae7*Qi*F?23?^&D^?A.>`tQiTM+,86nIu#H3^@Lt*KHIc
%42M,?D/)7ni?Y#q84:Dd>f(?0q3\K]C-rpj:Jft%YA!3iL-oB,2tJOQ1kXf&'a:4pj]indb:4uWJHus#a\kK16q<th#5JuJU;&I7
%7BBQac`_"+4@LaHB:??9W?;J`CPNH2U''e]b/qgTQlC^[@90?h;k=po=>844X"L_5W&0ei_0>R^k0dpg0ZG;&X2<78@qD-!\<JK1
%U>ebh$,Q[83j;\a1_I06+I#?NGTk4+r>@7uOQjM)ihO-\A\=-V`/*J,/Q'C7Z#MY?nIc"BN5@qVN9H^"@=9X!,5!fKklnU3B;i8=
%$4#^U;YI'I7V`rO!3Ym$@i.f[O_qp2Q&dCC1kp48%PhU=ng7Bt.6J%G&ID0qMjLB'A`Q`/,o+d-Qa&K$lnkY@`bK9TNQs83->KY=
%5SZ@\JVJ:G+?H9NMi0+/TXq[#>RJhV?kI1],lJNP#2J(uSaj?R.[WO:6liIq5uk%Lc<HC'*>!h,UgTrsrfJm*QU.]o1MabCTXI`B
%;kfeuW&RH!W<m9pceE%Kdl7#U4auE0'a5a"A`m0f5^e7QJSF:ALfW_;E)%M&$D!49l%9j.gacSZF:%:Ye';N\Zu;t)6C0t1$:_Bh
%QcRTFVF/iPYL&7`_?AgFab!5\R6^9O6m&)D>QQiA880l&!\;RpPnXC0PU;Ap:as"E55$ncE"=_D$5cuGU@EWq3&BC1:d-A3?>s1B
%j'kkNjL%U+',>VeEqi1iQ1AF>bM_\[=ir]n,(K@0-8s!44;1-b\D2FW3GL#\8pF@.C&&02"6-s2J2)E*U]c0DMg>uo0r^BOH@Hl+
%5342H%]H@eO==DeD*ZTeW!)[)ZUeHH=h.LahbkDO7L]rHFGji1O;<78WhgC\%%Q)U"?NthK$pcKV2P"\/J[T7;@ha8;$tZJ8J&$P
%5XbmWfW@Nh&+Fj1JW,"DV*#TCShFUGQM;%C<I-('TP3A6RbkWW4%9q\P/9]38gtiXeKLC6(8NYTU*?J&;kc07&g]4U^QuE,'^XQ[
%h5:Bi5$)0p[,/f=BLsWR8@g'Eh:mNA409tf'/t%M<)YeT&<F(UidHqiaT.PKeabF.7>(AS9!+td'J:X5Yd3#7S_K:1dr#C;$Os3J
%KG#a?c;h5Oe6P6EUh13kTXqZqk4'-,@q*@1W'69N!\#hT*X-<s$Ki>C<+4:(o.[+8XeJ<Dc=Pa\l?:ZZ6"?Bm:jl3PHP"B_T`2IA
%ds6nW/ZkNU^0^<"hP:d_2_!A.;?0&W.#/;*9pGh^f">d+U#^NIZ:DIF`3*s'O)b\Re(/l16S*62\9O&9aE<'^(55qkq;&\PFUG(i
%(=g*][j_2GhP!!6Q6!!sOg7@%E4Aq=g7^3>X&^ok;4s#8ED3tV.+rVGV$(sT0"]LR#btGNRKV%cjj:bBW_(;Z7A%ML^hK"La4HhN
%SMho*POka%*Yh82_:\)Uff_*SZ:?qG9Q2"WfqTN57WV9YfqSO.:=)[]'J+*8hig21TU2+/Z:AVu>hYqQ8oZ01U?Fb1W0=#351=Q@
%WO,0(5c#3WpF$H@Zd7)9"hM)f1U_*sQsX8H=].)i>l:;1cGm'R0t(Epn.o'U&mnbK/3a<6\mb/@ZQN8"BaTRlN)Yh14Ksl?LYb*r
%a_jW!c:%mNaNMjg'<&t)",XjncEA:%!n0,UaE6XZj2X1"Asr>r*E\^p*K'nMLJSi)FA?2sI^T8u`'XL[UNs<hA,/aO[gki"TT1>)
%@53m@*X6au9r`lo2VWcYG1jS75oh-"s3C.V)-+lm<UjH7doMbCWd9qYO>\:2FK3]"dcaRdbZS?-\L7];og+iBnP*f1eM]5)0:2o2
%@UMO6".073.i%L<Ph\r?Wk$eMVF-"U^KAP/Bp,\j]f.EZTp;V\C8D8KqcZbo(Te#Zs&qG<YuZS$J@9S@V$^3+-)WmT<E+FO&Q8`]
%<@D-D>Imk8!2]gNU/b&>`'uXeeuEiQ8(+EK=0blWGp]RlSX57<ebMm9X5\ZjTZq4OXGPSO:]@;C.!81G"pN`mA^GTc9m+jVL-_>&
%>LCSqXhp!lr+&^+k``MI5Z4ZPn_TYAUK1fj;R7P2<KTg@e'Y3]:=ll+C]V3Voe7mV5Drj%_O3!BZq>WZ5l")NX+1qM8bO'#X/J.Y
%eC5;B8mB;u=p7aF2C?+phNOsIZ<i72PaWggYJPf>@9M!YW*lJ`]TZfY8siip+mE!/"4G=;0.X%UgR'Ulk&R7/*bX#5"imAn79u@B
%@c\36PKql#9%jpXY#VLoW'2sWHK08729NEPW_I,Z),)9FJWcV#7[P>:@1Sb9]lErU7i<*S2f3?\'^)4qFZ1AO^;uHt#jVCQ-quuC
%f0QXii?q[E)8roL/_rMpWZFCiK8)X>HZ/!*=3E#`6<2(eb)R>eJ_Iit90P]QK?Co+(U4mt0W:JrGT5[9[fLQB)g2#hW*A*InTl$N
%L7I,Aa&@<6JPTlY#Q#bX;*9!c'4Z:*I!7j*C[u;TOFk--<-B4bH[Fi2+fo`cpEl36l%!_6=(ob0<n-,Z0fkI,@\'!$a$#m:VAOI8
%P_mq13Z1m?3Ji*l!HUe,ij<,j`T/<4h$2(h3U6;]:^,r+rnRcXNHTVXhZL,R*IH6Cos%T6c4RMjV@i$>_@0&YRm&T-F@tKR&=CRr
%`X]3ScmutBTc,ikp5s(PZ8rcZhAcUI.iA)]VbtO`8#AZ')niGD@arN56A+g.VMHR[^$T;7/5s#rXCYHVm\=m''X:(l#njtNZ&!(p
%W(7f$Uc:8f5h'$k@Ws!<SKkA!kqQj;_UTtbqUhIf2aHU8?kLS@a5`*+0a4sX-oVBfIT=+fNIaCJe[bI(h8UXp'r@q""K"j2T5GIL
%/u*_G)`%hOD$0W6.1FuCF(>Nl$@N:;haAeDRs]UV6ai%mPc3B.a9kn#_q9mA9R7&N*<j3'G.F>H>O9po0&h^Y'Mj;eG'rk357!Q_
%l9`Iq+%)gS0.JIYdn;jjW99DlXiE2D&1QXC@Yg](eg1>Yjrk>e_k8muam'fL<DI$:e_>U7Vbu86!:$)o/A[',A[1N[I1O7;AI5?g
%r8'/2,u@fn&6aqeQGXj"M`17aK:"DlKpa.1g'5cFLXkK,ePR7#o]N$>#=2p+lAp9&KH>7e'fAO;#%\A-+[lDDoreITqWFjLPcHTE
%g?l]$m8;CQ`3`6)e@uJAl5t=<:q9H*lOAK;gLj$j#?$UC+/?8]CcDD"]W$_:)/S#+6OTp/pI20HmC6_"OIi`84[:HKlAu*@FfJZA
%RMc=_Ws[3nOGH9B#FnBd.IrS9,5,0W1J<!?,`KY.9q)J5"!h;l;5T!3V?<Uq=U5&4gkc9^6l`RNWjGDZR")%J"Pd9[+Q=oR60LVp
%P33G;U%Vs(Z0@eCcom1g(EgnToh;(l(7K)t=Oj$/<WiCp_[I_D`<CO?4WD,``SD:Y/9Sj_7'.]6_2m<R>fmdh"-!CCGSs0mLfLJ0
%$S[SH-(%nT"=0J#V)$QkFqi#o(R`e*#+n9a>I8s%7:1F)Q-gs:K-`1jc;>?@"]'\6Htd&qNRSdJ4]=I4ab?O]1_.Y?):%aND5kce
%gWE4,2[QRg%8SuZff$R5CTb7CP36i,g^`OHhhQTc0;:U:hGR;BUE\ie-Z2AS9ARVYj8@_ng17/A7umF(GR!uVm#78JQ8UV8!J.15
%1qe]@V;NrrE!)>>]:^f[L[jbr(XsThPpif`Q"X?3o+"#3YplX\;2D&C2cH:H\@n2bY:3luS0cuan<FJHO2-Bn70f7Eb*[,oI/uSX
%O8^<\CT7"9C/Q9/=omtCVSu1R%\PXs_IQJ-:.qi,FdcW7kck%9RE:oP\25g@W%bnq#0)Ot#\XFAH8jEh"P*T!s#>[b1qTG34[$-.
%EP;:EJee>YCU'-@@"\;nOBX"iE?I`&@'ctp-)>+:@+Wt(OuOn"_A4gDXO%EsM*UWZ@4<(<C?]3t+;0An=\qgtn%]@t@8U@_nMQo-
%*VRJN*qkpTek+5qY1g$)-\4<qWt1AT6U_9O[["XmHIYN_Om\$Kelc3?/-@nFb=Nsc!rL&<?`%kPqI"W%9%ch(:o"=iLZl0,rj4c,
%\;;$5=@,)RJhj9n()'?9\p4NKJhWJP;JhL%Uq4m)@-@6f+edKQ0W5C:<:HLenS4/%(s[;n+TnND$,^06p=Z_>@9&8kD^K<Jk`i>?
%kf41#bqooqF#jLGQFmo)>g[4iS$Wm.AH4$Z*KhSshaM`Lg#u;C!u8;E3^Y2;*h*ctQ)LE[hB>QsPZ0`eE=I&@0gc1VX&os%?oJQS
%<DfV_b&h3KpRl)(SM3ZP^sMDQWoW9ki#60qW7<8F4%8DNcm7FlY_f)s14c;<SUaE961%>,-6PG\S:^g\>mW6$d1mFi`+[V3!'*.M
%.WZ7t&Me$T_%tcRmn`FNQXo@/+KC,o<Jr=E2D?<sDf43WlDU77S&s)JKQVpX#Wk=e[/oq/$4jk@glAJV`S)_kR,iI%OB*Ld_R<LL
%Q7</Mc8[S</i5D!Fm@J-f2,O?i[sjP39l9Xr#rR2M`g)85n5uQ<2.<U81h!C[h`bpd!Pug]G6!S954O")fm=M:g6K>oF-AXXRsV#
%K-M2A).QThTI*V\?,nIJWWZ'=N9Wa[/[>Pg1$I8I*%CZIHb_IE7%>j]jo@kc+Ju@6GVn"<e-k^i;gk(>K(VEEjoX((B9d)57ZY&O
%?R?%sWcXV"i8tSAk=]Ot?WQ\Fq(i@M.N+Me4u/*i>*N\K*$dkI#80qC$Mhf1&XWdW6`*6B5CVoVA,H[AHg9XhNIV>bp-(u4$%<gi
%>MQ0$&(KHQ^he#V^O6XYCQ)PjROD=njrCpm*RH/!1;js]N,*Y^7!H[k*.&,[g@8]TU4BO)2?.bIFq0d,I$k,%Tbbs,G,*MV5_'Pf
%-jmZ?iKAV>!hNef`=^kWF<9AA]f'#K8.`QW>beX<P<Gn%52s09P6uqb6""Sn6W_]oO??Pj]o@3->$>k6bIMjXk#ho1>;L$";$h?q
%7#7s\\Fn@sCC75[:1a\jk[IQAWYGbUnHHCm((V""H,A,=d-#8"Yr7n9i^XcuZJ0oZetj.57+4AV"Yj+_<Y)E-_K>jR-FYFt=2P@K
%X>EpTJ[!;u1Lb==h?@,N[YU)K.bf1k]+[^:;_@eF3i1;fHN^!`<@!8A;A.0X8JC'=JLb9"Q>+$1kb'[5KW.[fUcq,h"$ALj`oj\(
%X(-!ml+`2+Cl(:odp8ceR!2P(==)A9+LPYZY=RtP83>6C_,\nr'OZb#JJsrRbkm+h)NZ7]?/>V0T*`^l;,HOM1fRp),!Q^@^+R#N
%8'dG]CB<r]F2f_i#BjS+nh3Tc_^<8>(1XdFn5`@a<I`Ec5Y3L]n$3i?RNo!Ri^$aqdG/-MKpc7Nps:QiEIC7TCBZFVZVCiF0a<I]
%=AVG?(D]>u-s("eX/SBIUAp^Y0W-G'Dj+_,%XA27."D`%\qe"[p3om07'9S-0KijV#O+FlUQl>'g@h.)Pnr-[P9iJl"_UY0Hi&US
%)!J'Z*gQek':]R2$1&ncc=K!`\.@^\jHSSU#t90UFGOg]coOYXDbCBC.S'thQS(Bu2Q6:OEfhcQ4AmAAW1b+e:+@'GYqr+,4d*S]
%6qWLc7$et2WQZMF,aBE")]uCeFQno#IKfQVXt!>d&8,bN3tBG"k3L/7Ko(qrWU^<u]q_T0Vt(,157qP^7lp<5:r'P[c!2@Te/p+J
%J!\Y".>g[QKQKF9JS"2PSB?ncDBpfY?%3!!+HuC.,#,_3:Jl>ZO+=0>4&kghLb:od0&uLI1`L++f&rUO,oqp^<C9St8C.a,';k)V
%@/a)#GqM;_)TLJa;FL_DEH9t#nfs"j4!;I&8G^cr7qat?AZe7Lh$BmU:Ap<,97Z.#,L?g@6'(fQY!'X'Urjp<ej_mC:?<(,-'dBU
%+e?b#&2`n;ooW#2&KL+"'hse4,B2H]IQ;nV+J$Y"q(ep36G44>e#b`a+jbf]5c")ZNZffPgSm=;__JeJ#t_IuCQHhgJ_r'0*l3/:
%C8rF5b;ak,e8b.'><ZO?/f_9F5'F^gf(n/B!Y'9,D&#BH21b\@4u+.)miM1`;0<-0(gtf1B>W.PB/($[W4C7mAHl_14_-VCdQJ"Z
%<%gE*2U?IVW+,*/=L%"uMkF::`mnoU&3,$Vlp[1LD)?4.[*>VC,1lC[craCY37G]_C26[cfYXX%jJpkf8RoiJJ-cZS8l6B:]hloe
%$187H&'ElK48O!>^3?Y[ncjT&oqL\AS%q`&XmOiiQX(=:5$cN(^Ea]KIDLWC;3S\QbmeI3<NSR7-;%AVrN%Ds9oUKN't._9bC%16
%/eq5[X?'B>JhOBl.hTfe<qIm;6ieKp%iI,bja]If9V=:7i"]Q3])i[)Q.&VQKP%29I5od@/kekX`X"0%^S,.^5!5L^2RuB[;Ba];
%=@o#Xd/^^kmP<lb[)3^hemdP@kR^D7"]6ulNkQ9#i'mJb&kE!OUddO2Eag%nYO]J=ah7[H,SN^:<Fs8&cK/U;dNJf-hf0M'190P:
%1Ld@MiJi@%RLhq/en29:d?Ve<!bW76=X/G+)Rr+Z&d&0",0*OhgICGNo_'&k_Osl9m%25;8):4S4-!o)J<En9K(srh?5kMBNX1+a
%6)a?\o;\/]B1dJ3Uk(BZ?sjg\7t?>R'DQST%09QL!Kg,h8_"XKs"XrU6e)4i[O#;E@ZPETru-0DNGV?S+Z^Vt8CdW/7HZ'XJ;$g*
%;@)MZf0nFh$nD>2A&O(Jq<b!,Je@:B9EjgiLP:)Hj5Xj-J`Bu["mtWS7mUArCicBE=8M,8Wk!gC-s%/2>t*kkH$52/OQn)$C+9OK
%V';=UbLH'`0&u6WJ6VlART?%PC"Ym_SG]Y78TWqNpbI^/nTIjUIZ0!k.VX&H7hF^jkZa[^Ultagc8N(\A0E:"b;^_"Y@.`k)H_$O
%,efhd=l9OJNnLef0ORfBGc(^&C,2-N`<BIm_!>"FI\8%0%NCE`[[R]N/DPlnl54faD3Xq0_Y@uhNln)h1e/W,2n)V:3CT7BN!+#*
%=O#nr+KhXoar.FB4\,QFJ,rZ91'AfgZH*32W0K3N>;fAaU1%s`>,QGW%n[@0T-!Vqc6]sRfTQB0R(4Z&%He1B=dSj3!3,ZNoi\IE
%mC]+A+gc'O"cl0nTi4X1Om6VB]+CXo2+-726Oc(D=&Q*:e?MUl^nR*O:=uW;R>Cm/0/>.t70%*JoPeoH)TI@_81DS3f(\B[AIK_3
%.2Lh'PgVHJCeqmjPVO5b<)PUdb'?kIoY?#X+te/'dBq.7.G'Z)=DHi%8.hs<f?beX.jYcH.OH)[;U-G_1DBOUN0++8N.ag`j[sD8
%LVDf_Pu9D8!sWAd`),Z0l.@WE@4JWQY9_<&k0tC6<6_g+(0'NDguK2)"3uR@;#)sm:^=p&@EVDiGiHGp]76Xq.bG\Rmmb0q/N=gk
%4k&Xa<\\Mp:[%S6065iE%XH?1\cjtP2-"I#!_RbfQNH[sBccDfS(,fM/HV4lA$/EH$!>ER"PR"!^AHQ=SU>#HQ'=9<At`]kO!eZE
%-232XaX'C\UUmm/P8d"u\ti#%MUQXrTq2,uQu<=g!7nY,EF<R_=<T[hdDQ)M[-YG"jaAOe*M?@u6VJm[q60u?c4?QV6E73tXdKRK
%;!9CM"s6L\/MEk^Jss/i<#],"nBd?26^^2MejF(X.m/fF*",.2[S_1(^hi!)T$&#eXHlkV;pE6'X"(nSE_B9e%LPF0O,W/sd/e5F
%h+\`2(*cS0gF!fcl0\e'fRUtdJ<p^ec\b?aq5=["q\!RS(/_r#DK\k,Zo+LfoG5]E-6Dr4MYTK075Ua3Tn3QlAQVQ7Qo$8kge5Za
%%#T7l:t#0d*^N[tQ=2S/1#C2E#GRk*&SApq[Z/J^g(MBgE,OV_DaGm,b2NP/9:mCf:+3:S#6i0E%=K*Tb5`!l:,N:[M--:Z377s4
%-D9l!qSkpABe0<`$Y<UCR4TF.WW[o6LG>SV$)s#Q)Jete:tV>nQm9i`0MXm7q'4EHj-O7;!%L0K)J)W3qk+la.h\C&p_ZT0\5ps+
%SuJXk--)&[C)\X'M8k0^Y,W<`:*QSee[8MYQGU"^?'%0WW#0$8ML*]0'NAPH8hIFp$[<VkHAYX\#!qB\?!oDt\>3HFA]dmndQiM_
%NJ/UO!f2i/lrO#5Me3a,RncjA4b0'.?.:g<OVAOp1pXi'qJWn;Ub<A'2(#!`fu.`n.ilL;hNU>E'@2NB[;o#%Tl^TT6;BM^(K*l4
%cIN>q50cNjf1`]_,V$1#=;j>hZJ/h+'9h<C$94;%Bo>$#Dq2;$!`)`A^2^DH%W/jb\dosLaH_mYSMurr]L$VjEg`$A(2<MZg<??e
%C'U;D??(g'F=`UC7;.Qbdu*WLQ6gqq0b\@(V5t]a]V\[^+fU.6aU*"*97&69#LTaq#U9e^&82Rf1^$V?eH73m';DOLFd:>-;8n2d
%F+U.tLIh*p]?D<M79O0q=-ZF2V5+J,]n87^=q31-<1h=)/>JO:`FkhX")gRQ4i421gGgUfGRpV#!96Ei1Z$kgp99hL3kFLWqUs)p
%*r)LtqfAp-qtIl]V:[!1ZbZY[3BnVMjN2)&Vc`43I%>'+WB(<^q`"3H)ZA7cNWS*H_KVBXJ*4tbWs9X"=YBOp.8UciC;K0bVMI43
%T^H<PkK6^qIukYq[i'H/mXl((HUM-D<QR)_;$i@$dZ"PaUY*nRJlG'$R.N]LE*N/i\L7nV*]#mhQUHt\Md`V<>cF<tI<r<sr-r'l
%/M@@eaGoA$?JjF^rpI\iXTO'cq=aaLlac2N5(3G0r;5e5iD4N5[U+I\rd!i&gpabbrs&gI8iI_MZ?CZp^`WS@plq*`~>
%AI9_PrivateDataEnd
